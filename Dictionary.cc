//
// File generated by rootcint at Mon Jul 30 18:07:33 2018

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME Dictionary
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "Dictionary.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void TRexSettings_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TRexSettings(void *p = 0);
   static void *newArray_TRexSettings(Long_t size, void *p);
   static void delete_TRexSettings(void *p);
   static void deleteArray_TRexSettings(void *p);
   static void destruct_TRexSettings(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TRexSettings*)
   {
      ::TRexSettings *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TRexSettings >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TRexSettings", ::TRexSettings::Class_Version(), "./include/TRexSettings.hh", 17,
                  typeid(::TRexSettings), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TRexSettings::Dictionary, isa_proxy, 4,
                  sizeof(::TRexSettings) );
      instance.SetNew(&new_TRexSettings);
      instance.SetNewArray(&newArray_TRexSettings);
      instance.SetDelete(&delete_TRexSettings);
      instance.SetDeleteArray(&deleteArray_TRexSettings);
      instance.SetDestructor(&destruct_TRexSettings);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TRexSettings*)
   {
      return GenerateInitInstanceLocal((::TRexSettings*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TRexSettings*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Barrel_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Barrel(void *p = 0);
   static void *newArray_Barrel(Long_t size, void *p);
   static void delete_Barrel(void *p);
   static void deleteArray_Barrel(void *p);
   static void destruct_Barrel(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Barrel*)
   {
      ::Barrel *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Barrel >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Barrel", ::Barrel::Class_Version(), "./include/Barrel.hh", 9,
                  typeid(::Barrel), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Barrel::Dictionary, isa_proxy, 4,
                  sizeof(::Barrel) );
      instance.SetNew(&new_Barrel);
      instance.SetNewArray(&newArray_Barrel);
      instance.SetDelete(&delete_Barrel);
      instance.SetDeleteArray(&deleteArray_Barrel);
      instance.SetDestructor(&destruct_Barrel);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Barrel*)
   {
      return GenerateInitInstanceLocal((::Barrel*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Barrel*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Annular_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Annular(void *p = 0);
   static void *newArray_Annular(Long_t size, void *p);
   static void delete_Annular(void *p);
   static void deleteArray_Annular(void *p);
   static void destruct_Annular(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Annular*)
   {
      ::Annular *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Annular >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Annular", ::Annular::Class_Version(), "./include/Annular.hh", 10,
                  typeid(::Annular), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Annular::Dictionary, isa_proxy, 4,
                  sizeof(::Annular) );
      instance.SetNew(&new_Annular);
      instance.SetNewArray(&newArray_Annular);
      instance.SetDelete(&delete_Annular);
      instance.SetDeleteArray(&deleteArray_Annular);
      instance.SetDestructor(&destruct_Annular);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Annular*)
   {
      return GenerateInitInstanceLocal((::Annular*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Annular*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Crystal_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Crystal(void *p = 0);
   static void *newArray_Crystal(Long_t size, void *p);
   static void delete_Crystal(void *p);
   static void deleteArray_Crystal(void *p);
   static void destruct_Crystal(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Crystal*)
   {
      ::Crystal *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Crystal >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Crystal", ::Crystal::Class_Version(), "./include/Germanium.hh", 10,
                  typeid(::Crystal), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Crystal::Dictionary, isa_proxy, 4,
                  sizeof(::Crystal) );
      instance.SetNew(&new_Crystal);
      instance.SetNewArray(&newArray_Crystal);
      instance.SetDelete(&delete_Crystal);
      instance.SetDeleteArray(&deleteArray_Crystal);
      instance.SetDestructor(&destruct_Crystal);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Crystal*)
   {
      return GenerateInitInstanceLocal((::Crystal*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Crystal*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Germanium_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Germanium(void *p = 0);
   static void *newArray_Germanium(Long_t size, void *p);
   static void delete_Germanium(void *p);
   static void deleteArray_Germanium(void *p);
   static void destruct_Germanium(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Germanium*)
   {
      ::Germanium *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Germanium >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Germanium", ::Germanium::Class_Version(), "./include/Germanium.hh", 60,
                  typeid(::Germanium), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Germanium::Dictionary, isa_proxy, 4,
                  sizeof(::Germanium) );
      instance.SetNew(&new_Germanium);
      instance.SetNewArray(&newArray_Germanium);
      instance.SetDelete(&delete_Germanium);
      instance.SetDeleteArray(&deleteArray_Germanium);
      instance.SetDestructor(&destruct_Germanium);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Germanium*)
   {
      return GenerateInitInstanceLocal((::Germanium*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Germanium*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void ParticleMC_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ParticleMC(void *p = 0);
   static void *newArray_ParticleMC(Long_t size, void *p);
   static void delete_ParticleMC(void *p);
   static void deleteArray_ParticleMC(void *p);
   static void destruct_ParticleMC(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ParticleMC*)
   {
      ::ParticleMC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ParticleMC >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ParticleMC", ::ParticleMC::Class_Version(), "./include/ParticleMC.hh", 9,
                  typeid(::ParticleMC), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ParticleMC::Dictionary, isa_proxy, 4,
                  sizeof(::ParticleMC) );
      instance.SetNew(&new_ParticleMC);
      instance.SetNewArray(&newArray_ParticleMC);
      instance.SetDelete(&delete_ParticleMC);
      instance.SetDeleteArray(&deleteArray_ParticleMC);
      instance.SetDestructor(&destruct_ParticleMC);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ParticleMC*)
   {
      return GenerateInitInstanceLocal((::ParticleMC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ParticleMC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr TRexSettings::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TRexSettings::Class_Name()
{
   return "TRexSettings";
}

//______________________________________________________________________________
const char *TRexSettings::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TRexSettings*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRexSettings::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TRexSettings*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRexSettings::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TRexSettings*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRexSettings::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TRexSettings*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Barrel::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Barrel::Class_Name()
{
   return "Barrel";
}

//______________________________________________________________________________
const char *Barrel::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Barrel*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Barrel::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Barrel*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Barrel::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Barrel*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Barrel::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Barrel*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Annular::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Annular::Class_Name()
{
   return "Annular";
}

//______________________________________________________________________________
const char *Annular::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Annular*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Annular::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Annular*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Annular::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Annular*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Annular::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Annular*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Crystal::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Crystal::Class_Name()
{
   return "Crystal";
}

//______________________________________________________________________________
const char *Crystal::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Crystal*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Crystal::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Crystal*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Crystal::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Crystal*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Crystal::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Crystal*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Germanium::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Germanium::Class_Name()
{
   return "Germanium";
}

//______________________________________________________________________________
const char *Germanium::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Germanium*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Germanium::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Germanium*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Germanium::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Germanium*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Germanium::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Germanium*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr ParticleMC::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ParticleMC::Class_Name()
{
   return "ParticleMC";
}

//______________________________________________________________________________
const char *ParticleMC::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ParticleMC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ParticleMC::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ParticleMC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ParticleMC::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ParticleMC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ParticleMC::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ParticleMC*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void TRexSettings::Streamer(TBuffer &R__b)
{
   // Stream an object of class TRexSettings.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TRexSettings::Class(),this);
   } else {
      R__b.WriteClassBuffer(TRexSettings::Class(),this);
   }
}

//______________________________________________________________________________
void TRexSettings::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TRexSettings.
      TClass *R__cl = ::TRexSettings::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSettingsFile", (void*)&fSettingsFile);
      R__insp.InspectMember("string", (void*)&fSettingsFile, "fSettingsFile.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPrimaryGenerator", (void*)&fPrimaryGenerator);
      R__insp.InspectMember("string", (void*)&fPrimaryGenerator, "fPrimaryGenerator.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSimulateEjectiles", &fSimulateEjectiles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSimulateGammas", &fSimulateGammas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIncludeEnergyResolution", &fIncludeEnergyResolution);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIncludeVacuumChamber", &fIncludeVacuumChamber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVacuumChamberType", (void*)&fVacuumChamberType);
      R__insp.InspectMember("string", (void*)&fVacuumChamberType, "fVacuumChamberType.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVacuumChamberGas", (void*)&fVacuumChamberGas);
      R__insp.InspectMember("string", (void*)&fVacuumChamberGas, "fVacuumChamberGas.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVacuumChamberGasPressure", &fVacuumChamberGasPressure);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTestSourceEnergy", &fTestSourceEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBeamEnergy", &fBeamEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBeamWidth", &fBeamWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThetaCmMin", &fThetaCmMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fProjectileZ", &fProjectileZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fProjectileA", &fProjectileA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTargetZ", &fTargetZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTargetA", &fTargetA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEjectileZ", &fEjectileZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEjectileA", &fEjectileA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoilZ", &fRecoilZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoilA", &fRecoilA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fProjectileName", (void*)&fProjectileName);
      R__insp.InspectMember("string", (void*)&fProjectileName, "fProjectileName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTargetName", (void*)&fTargetName);
      R__insp.InspectMember("string", (void*)&fTargetName, "fTargetName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEjectileName", (void*)&fEjectileName);
      R__insp.InspectMember("string", (void*)&fEjectileName, "fEjectileName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoilName", (void*)&fRecoilName);
      R__insp.InspectMember("string", (void*)&fRecoilName, "fRecoilName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTargetMaterialName", (void*)&fTargetMaterialName);
      R__insp.InspectMember("string", (void*)&fTargetMaterialName, "fTargetMaterialName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTargetAtomicRatio", &fTargetAtomicRatio);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTransferOrCoulexProbability", &fTransferOrCoulexProbability);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLevelFile", (void*)&fLevelFile);
      R__insp.InspectMember("string", (void*)&fLevelFile, "fLevelFile.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAngularDistributionFile", (void*)&fAngularDistributionFile);
      R__insp.InspectMember("string", (void*)&fAngularDistributionFile, "fAngularDistributionFile.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMassFile", (void*)&fMassFile);
      R__insp.InspectMember("string", (void*)&fMassFile, "fMassFile.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCrossSectionFile", (void*)&fCrossSectionFile);
      R__insp.InspectMember("string", (void*)&fCrossSectionFile, "fCrossSectionFile.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAlphaSourceDiameter", &fAlphaSourceDiameter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAlphaSourceThickness", &fAlphaSourceThickness);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTargetDiameter", &fTargetDiameter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTargetThickness", &fTargetThickness);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGasTargetLength", &fGasTargetLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTargetPressure", &fTargetPressure);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTargetMaterialDensity", &fTargetMaterialDensity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fColours", &fColours);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWriteAllEvents", &fWriteAllEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVisualizationCut", &fVisualizationCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fConstructPCB", &fConstructPCB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fResistiveStrips", &fResistiveStrips);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseFCDdeltaE", &fUseFCDdeltaE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbOfFCDdeltaESingles", &fNbOfFCDdeltaESingles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFCDdeltaESinglePosX", (void*)&fFCDdeltaESinglePosX);
      R__insp.InspectMember("vector<double>", (void*)&fFCDdeltaESinglePosX, "fFCDdeltaESinglePosX.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFCDdeltaESinglePosY", (void*)&fFCDdeltaESinglePosY);
      R__insp.InspectMember("vector<double>", (void*)&fFCDdeltaESinglePosY, "fFCDdeltaESinglePosY.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFCDdeltaESinglePosZ", (void*)&fFCDdeltaESinglePosZ);
      R__insp.InspectMember("vector<double>", (void*)&fFCDdeltaESinglePosZ, "fFCDdeltaESinglePosZ.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFCDdeltaESingleStartAngle", (void*)&fFCDdeltaESingleStartAngle);
      R__insp.InspectMember("vector<double>", (void*)&fFCDdeltaESingleStartAngle, "fFCDdeltaESingleStartAngle.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFCDdeltaESingleThickness", (void*)&fFCDdeltaESingleThickness);
      R__insp.InspectMember("vector<double>", (void*)&fFCDdeltaESingleThickness, "fFCDdeltaESingleThickness.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFCDdeltaESingleDeadLayer", &fFCDdeltaESingleDeadLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFCDdeltaESingleInnerRadius", &fFCDdeltaESingleInnerRadius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFCDdeltaESingleOuterRadius", &fFCDdeltaESingleOuterRadius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFCDdeltaESingleRingWidth", &fFCDdeltaESingleRingWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFCDdeltaESingleSpanningAngle", &fFCDdeltaESingleSpanningAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFCDdeltaESingleStripWidth", &fFCDdeltaESingleStripWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFCDTransferTo16Strips", &fFCDTransferTo16Strips);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFCDdeltaESingleEnergyResolution", &fFCDdeltaESingleEnergyResolution);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFCDdeltaESingleFoilThickness", &fFCDdeltaESingleFoilThickness);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseFCDErest", &fUseFCDErest);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbOfFCDErestSingles", &fNbOfFCDErestSingles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFCDErestSinglePosX", (void*)&fFCDErestSinglePosX);
      R__insp.InspectMember("vector<double>", (void*)&fFCDErestSinglePosX, "fFCDErestSinglePosX.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFCDErestSinglePosY", (void*)&fFCDErestSinglePosY);
      R__insp.InspectMember("vector<double>", (void*)&fFCDErestSinglePosY, "fFCDErestSinglePosY.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFCDErestSinglePosZ", (void*)&fFCDErestSinglePosZ);
      R__insp.InspectMember("vector<double>", (void*)&fFCDErestSinglePosZ, "fFCDErestSinglePosZ.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFCDErestSingleStartAngle", (void*)&fFCDErestSingleStartAngle);
      R__insp.InspectMember("vector<double>", (void*)&fFCDErestSingleStartAngle, "fFCDErestSingleStartAngle.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFCDErestSingleThickness", (void*)&fFCDErestSingleThickness);
      R__insp.InspectMember("vector<double>", (void*)&fFCDErestSingleThickness, "fFCDErestSingleThickness.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFCDErestSingleDeadLayer", &fFCDErestSingleDeadLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFCDErestSingleInnerRadius", &fFCDErestSingleInnerRadius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFCDErestSingleOuterRadius", &fFCDErestSingleOuterRadius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFCDErestSingleSpanningAngle", &fFCDErestSingleSpanningAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFCDErestSingleEnergyResolution", &fFCDErestSingleEnergyResolution);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseBCDdeltaE", &fUseBCDdeltaE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbOfBCDdeltaESingles", &fNbOfBCDdeltaESingles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBCDdeltaESinglePosX", (void*)&fBCDdeltaESinglePosX);
      R__insp.InspectMember("vector<double>", (void*)&fBCDdeltaESinglePosX, "fBCDdeltaESinglePosX.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBCDdeltaESinglePosY", (void*)&fBCDdeltaESinglePosY);
      R__insp.InspectMember("vector<double>", (void*)&fBCDdeltaESinglePosY, "fBCDdeltaESinglePosY.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBCDdeltaESinglePosZ", (void*)&fBCDdeltaESinglePosZ);
      R__insp.InspectMember("vector<double>", (void*)&fBCDdeltaESinglePosZ, "fBCDdeltaESinglePosZ.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBCDdeltaESingleStartAngle", (void*)&fBCDdeltaESingleStartAngle);
      R__insp.InspectMember("vector<double>", (void*)&fBCDdeltaESingleStartAngle, "fBCDdeltaESingleStartAngle.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBCDdeltaESingleThickness", (void*)&fBCDdeltaESingleThickness);
      R__insp.InspectMember("vector<double>", (void*)&fBCDdeltaESingleThickness, "fBCDdeltaESingleThickness.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBCDdeltaESingleDeadLayer", &fBCDdeltaESingleDeadLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBCDdeltaESingleInnerRadius", &fBCDdeltaESingleInnerRadius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBCDdeltaESingleOuterRadius", &fBCDdeltaESingleOuterRadius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBCDdeltaESingleRingWidth", &fBCDdeltaESingleRingWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBCDdeltaESingleSpanningAngle", &fBCDdeltaESingleSpanningAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBCDdeltaESingleStripWidth", &fBCDdeltaESingleStripWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBCDTransferTo16Strips", &fBCDTransferTo16Strips);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBCDdeltaESingleEnergyResolution", &fBCDdeltaESingleEnergyResolution);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBCDdeltaESingleFoilThickness", &fBCDdeltaESingleFoilThickness);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseBCDErest", &fUseBCDErest);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbOfBCDErestSingles", &fNbOfBCDErestSingles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBCDErestSinglePosX", (void*)&fBCDErestSinglePosX);
      R__insp.InspectMember("vector<double>", (void*)&fBCDErestSinglePosX, "fBCDErestSinglePosX.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBCDErestSinglePosY", (void*)&fBCDErestSinglePosY);
      R__insp.InspectMember("vector<double>", (void*)&fBCDErestSinglePosY, "fBCDErestSinglePosY.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBCDErestSinglePosZ", (void*)&fBCDErestSinglePosZ);
      R__insp.InspectMember("vector<double>", (void*)&fBCDErestSinglePosZ, "fBCDErestSinglePosZ.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBCDErestSingleStartAngle", (void*)&fBCDErestSingleStartAngle);
      R__insp.InspectMember("vector<double>", (void*)&fBCDErestSingleStartAngle, "fBCDErestSingleStartAngle.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBCDErestSingleThickness", (void*)&fBCDErestSingleThickness);
      R__insp.InspectMember("vector<double>", (void*)&fBCDErestSingleThickness, "fBCDErestSingleThickness.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBCDErestSingleDeadLayer", &fBCDErestSingleDeadLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBCDErestSingleInnerRadius", &fBCDErestSingleInnerRadius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBCDErestSingleOuterRadius", &fBCDErestSingleOuterRadius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBCDErestSingleSpanningAngle", &fBCDErestSingleSpanningAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBCDErestSingleEnergyResolution", &fBCDErestSingleEnergyResolution);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseFBarrelDeltaE", &fUseFBarrelDeltaE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbOfFBarrelDeltaESingles", &fNbOfFBarrelDeltaESingles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFBarrelDeltaESinglePosZ", (void*)&fFBarrelDeltaESinglePosZ);
      R__insp.InspectMember("vector<double>", (void*)&fFBarrelDeltaESinglePosZ, "fFBarrelDeltaESinglePosZ.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFBarrelDeltaESingleDistanceToBeam", (void*)&fFBarrelDeltaESingleDistanceToBeam);
      R__insp.InspectMember("vector<double>", (void*)&fFBarrelDeltaESingleDistanceToBeam, "fFBarrelDeltaESingleDistanceToBeam.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFBarrelDeltaESingleStartAngle", (void*)&fFBarrelDeltaESingleStartAngle);
      R__insp.InspectMember("vector<double>", (void*)&fFBarrelDeltaESingleStartAngle, "fFBarrelDeltaESingleStartAngle.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFBarrelDeltaESingleThickness", (void*)&fFBarrelDeltaESingleThickness);
      R__insp.InspectMember("vector<double>", (void*)&fFBarrelDeltaESingleThickness, "fFBarrelDeltaESingleThickness.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFBarrelDeltaESingleDeadLayer", &fFBarrelDeltaESingleDeadLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFBarrelDeltaESingleLengthX", &fFBarrelDeltaESingleLengthX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFBarrelDeltaESingleLengthY", &fFBarrelDeltaESingleLengthY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFBarrelDeltaESingleStripWidthPar", &fFBarrelDeltaESingleStripWidthPar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFBarrelDeltaESingleStripWidthPer", &fFBarrelDeltaESingleStripWidthPer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFBarrelDeltaESingleEnergyResolution", &fFBarrelDeltaESingleEnergyResolution);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFBarrelDeltaESingleFoilThickness", &fFBarrelDeltaESingleFoilThickness);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseFBarrelErest", &fUseFBarrelErest);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbOfFBarrelErestSingles", &fNbOfFBarrelErestSingles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFBarrelErestSinglePosZ", (void*)&fFBarrelErestSinglePosZ);
      R__insp.InspectMember("vector<double>", (void*)&fFBarrelErestSinglePosZ, "fFBarrelErestSinglePosZ.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFBarrelErestSingleDistanceToBeam", (void*)&fFBarrelErestSingleDistanceToBeam);
      R__insp.InspectMember("vector<double>", (void*)&fFBarrelErestSingleDistanceToBeam, "fFBarrelErestSingleDistanceToBeam.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFBarrelErestSingleStartAngle", (void*)&fFBarrelErestSingleStartAngle);
      R__insp.InspectMember("vector<double>", (void*)&fFBarrelErestSingleStartAngle, "fFBarrelErestSingleStartAngle.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFBarrelErestSingleThickness", (void*)&fFBarrelErestSingleThickness);
      R__insp.InspectMember("vector<double>", (void*)&fFBarrelErestSingleThickness, "fFBarrelErestSingleThickness.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFBarrelErestSingleDeadLayer", &fFBarrelErestSingleDeadLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFBarrelErestSingleLengthX", &fFBarrelErestSingleLengthX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFBarrelErestSingleLengthY", &fFBarrelErestSingleLengthY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFBarrelErestSingleEnergyResolution", &fFBarrelErestSingleEnergyResolution);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseSecondFBarrelDeltaE", &fUseSecondFBarrelDeltaE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbOfSecondFBarrelDeltaESingles", &fNbOfSecondFBarrelDeltaESingles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSecondFBarrelDeltaESinglePosZ", (void*)&fSecondFBarrelDeltaESinglePosZ);
      R__insp.InspectMember("vector<double>", (void*)&fSecondFBarrelDeltaESinglePosZ, "fSecondFBarrelDeltaESinglePosZ.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSecondFBarrelDeltaESingleDistanceToBeam", (void*)&fSecondFBarrelDeltaESingleDistanceToBeam);
      R__insp.InspectMember("vector<double>", (void*)&fSecondFBarrelDeltaESingleDistanceToBeam, "fSecondFBarrelDeltaESingleDistanceToBeam.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSecondFBarrelDeltaESingleStartAngle", (void*)&fSecondFBarrelDeltaESingleStartAngle);
      R__insp.InspectMember("vector<double>", (void*)&fSecondFBarrelDeltaESingleStartAngle, "fSecondFBarrelDeltaESingleStartAngle.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSecondFBarrelDeltaESingleThickness", (void*)&fSecondFBarrelDeltaESingleThickness);
      R__insp.InspectMember("vector<double>", (void*)&fSecondFBarrelDeltaESingleThickness, "fSecondFBarrelDeltaESingleThickness.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSecondFBarrelDeltaESingleDeadLayer", &fSecondFBarrelDeltaESingleDeadLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSecondFBarrelDeltaESingleLengthX", &fSecondFBarrelDeltaESingleLengthX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSecondFBarrelDeltaESingleLengthY", &fSecondFBarrelDeltaESingleLengthY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSecondFBarrelDeltaESingleStripWidthPar", &fSecondFBarrelDeltaESingleStripWidthPar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSecondFBarrelDeltaESingleStripWidthPer", &fSecondFBarrelDeltaESingleStripWidthPer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSecondFBarrelDeltaESingleEnergyResolution", &fSecondFBarrelDeltaESingleEnergyResolution);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSecondFBarrelDeltaESingleFoilThickness", &fSecondFBarrelDeltaESingleFoilThickness);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseMBarrelDeltaE", &fUseMBarrelDeltaE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbOfMBarrelDeltaESingles", &fNbOfMBarrelDeltaESingles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMBarrelDeltaESinglePosZ", (void*)&fMBarrelDeltaESinglePosZ);
      R__insp.InspectMember("vector<double>", (void*)&fMBarrelDeltaESinglePosZ, "fMBarrelDeltaESinglePosZ.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMBarrelDeltaESingleDistanceToBeam", (void*)&fMBarrelDeltaESingleDistanceToBeam);
      R__insp.InspectMember("vector<double>", (void*)&fMBarrelDeltaESingleDistanceToBeam, "fMBarrelDeltaESingleDistanceToBeam.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMBarrelDeltaESingleStartAngle", (void*)&fMBarrelDeltaESingleStartAngle);
      R__insp.InspectMember("vector<double>", (void*)&fMBarrelDeltaESingleStartAngle, "fMBarrelDeltaESingleStartAngle.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMBarrelDeltaESingleThickness", (void*)&fMBarrelDeltaESingleThickness);
      R__insp.InspectMember("vector<double>", (void*)&fMBarrelDeltaESingleThickness, "fMBarrelDeltaESingleThickness.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMBarrelDeltaESingleDeadLayer", &fMBarrelDeltaESingleDeadLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMBarrelDeltaESingleLengthX", &fMBarrelDeltaESingleLengthX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMBarrelDeltaESingleLengthY", &fMBarrelDeltaESingleLengthY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMBarrelDeltaESingleStripWidth", &fMBarrelDeltaESingleStripWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMBarrelDeltaESingleEnergyResolution", &fMBarrelDeltaESingleEnergyResolution);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMBarrelDeltaESingleFoilThickness", &fMBarrelDeltaESingleFoilThickness);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseMBarrelErest", &fUseMBarrelErest);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbOfMBarrelErestSingles", &fNbOfMBarrelErestSingles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMBarrelErestSinglePosZ", (void*)&fMBarrelErestSinglePosZ);
      R__insp.InspectMember("vector<double>", (void*)&fMBarrelErestSinglePosZ, "fMBarrelErestSinglePosZ.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMBarrelErestSingleDistanceToBeam", (void*)&fMBarrelErestSingleDistanceToBeam);
      R__insp.InspectMember("vector<double>", (void*)&fMBarrelErestSingleDistanceToBeam, "fMBarrelErestSingleDistanceToBeam.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMBarrelErestSingleStartAngle", (void*)&fMBarrelErestSingleStartAngle);
      R__insp.InspectMember("vector<double>", (void*)&fMBarrelErestSingleStartAngle, "fMBarrelErestSingleStartAngle.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMBarrelErestSingleThickness", (void*)&fMBarrelErestSingleThickness);
      R__insp.InspectMember("vector<double>", (void*)&fMBarrelErestSingleThickness, "fMBarrelErestSingleThickness.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMBarrelErestSingleDeadLayer", &fMBarrelErestSingleDeadLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMBarrelErestSingleLengthX", &fMBarrelErestSingleLengthX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMBarrelErestSingleLengthY", &fMBarrelErestSingleLengthY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMBarrelErestSingleEnergyResolution", &fMBarrelErestSingleEnergyResolution);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseBBarrelDeltaE", &fUseBBarrelDeltaE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbOfBBarrelDeltaESingles", &fNbOfBBarrelDeltaESingles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBBarrelDeltaESinglePosZ", (void*)&fBBarrelDeltaESinglePosZ);
      R__insp.InspectMember("vector<double>", (void*)&fBBarrelDeltaESinglePosZ, "fBBarrelDeltaESinglePosZ.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBBarrelDeltaESingleDistanceToBeam", (void*)&fBBarrelDeltaESingleDistanceToBeam);
      R__insp.InspectMember("vector<double>", (void*)&fBBarrelDeltaESingleDistanceToBeam, "fBBarrelDeltaESingleDistanceToBeam.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBBarrelDeltaESingleStartAngle", (void*)&fBBarrelDeltaESingleStartAngle);
      R__insp.InspectMember("vector<double>", (void*)&fBBarrelDeltaESingleStartAngle, "fBBarrelDeltaESingleStartAngle.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBBarrelDeltaESingleThickness", (void*)&fBBarrelDeltaESingleThickness);
      R__insp.InspectMember("vector<double>", (void*)&fBBarrelDeltaESingleThickness, "fBBarrelDeltaESingleThickness.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBBarrelDeltaESingleDeadLayer", &fBBarrelDeltaESingleDeadLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBBarrelDeltaESingleLengthX", &fBBarrelDeltaESingleLengthX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBBarrelDeltaESingleLengthY", &fBBarrelDeltaESingleLengthY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBBarrelDeltaESingleStripWidthPar", &fBBarrelDeltaESingleStripWidthPar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBBarrelDeltaESingleStripWidthPer", &fBBarrelDeltaESingleStripWidthPer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBBarrelDeltaESingleEnergyResolution", &fBBarrelDeltaESingleEnergyResolution);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBBarrelDeltaESingleFoilThickness", &fBBarrelDeltaESingleFoilThickness);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseBBarrelErest", &fUseBBarrelErest);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbOfBBarrelErestSingles", &fNbOfBBarrelErestSingles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBBarrelErestSinglePosZ", (void*)&fBBarrelErestSinglePosZ);
      R__insp.InspectMember("vector<double>", (void*)&fBBarrelErestSinglePosZ, "fBBarrelErestSinglePosZ.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBBarrelErestSingleDistanceToBeam", (void*)&fBBarrelErestSingleDistanceToBeam);
      R__insp.InspectMember("vector<double>", (void*)&fBBarrelErestSingleDistanceToBeam, "fBBarrelErestSingleDistanceToBeam.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBBarrelErestSingleStartAngle", (void*)&fBBarrelErestSingleStartAngle);
      R__insp.InspectMember("vector<double>", (void*)&fBBarrelErestSingleStartAngle, "fBBarrelErestSingleStartAngle.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBBarrelErestSingleThickness", (void*)&fBBarrelErestSingleThickness);
      R__insp.InspectMember("vector<double>", (void*)&fBBarrelErestSingleThickness, "fBBarrelErestSingleThickness.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBBarrelErestSingleDeadLayer", &fBBarrelErestSingleDeadLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBBarrelErestSingleLengthX", &fBBarrelErestSingleLengthX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBBarrelErestSingleLengthY", &fBBarrelErestSingleLengthY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBBarrelErestSingleEnergyResolution", &fBBarrelErestSingleEnergyResolution);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseSecondBBarrelDeltaE", &fUseSecondBBarrelDeltaE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbOfSecondBBarrelDeltaESingles", &fNbOfSecondBBarrelDeltaESingles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSecondBBarrelDeltaESinglePosZ", (void*)&fSecondBBarrelDeltaESinglePosZ);
      R__insp.InspectMember("vector<double>", (void*)&fSecondBBarrelDeltaESinglePosZ, "fSecondBBarrelDeltaESinglePosZ.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSecondBBarrelDeltaESingleDistanceToBeam", (void*)&fSecondBBarrelDeltaESingleDistanceToBeam);
      R__insp.InspectMember("vector<double>", (void*)&fSecondBBarrelDeltaESingleDistanceToBeam, "fSecondBBarrelDeltaESingleDistanceToBeam.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSecondBBarrelDeltaESingleStartAngle", (void*)&fSecondBBarrelDeltaESingleStartAngle);
      R__insp.InspectMember("vector<double>", (void*)&fSecondBBarrelDeltaESingleStartAngle, "fSecondBBarrelDeltaESingleStartAngle.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSecondBBarrelDeltaESingleThickness", (void*)&fSecondBBarrelDeltaESingleThickness);
      R__insp.InspectMember("vector<double>", (void*)&fSecondBBarrelDeltaESingleThickness, "fSecondBBarrelDeltaESingleThickness.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSecondBBarrelDeltaESingleDeadLayer", &fSecondBBarrelDeltaESingleDeadLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSecondBBarrelDeltaESingleLengthX", &fSecondBBarrelDeltaESingleLengthX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSecondBBarrelDeltaESingleLengthY", &fSecondBBarrelDeltaESingleLengthY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSecondBBarrelDeltaESingleStripWidthPar", &fSecondBBarrelDeltaESingleStripWidthPar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSecondBBarrelDeltaESingleStripWidthPer", &fSecondBBarrelDeltaESingleStripWidthPer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSecondBBarrelDeltaESingleEnergyResolution", &fSecondBBarrelDeltaESingleEnergyResolution);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSecondBBarrelDeltaESingleFoilThickness", &fSecondBBarrelDeltaESingleFoilThickness);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseFTrapezoidDeltaE", &fUseFTrapezoidDeltaE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbOfFTrapezoidDeltaESingles", &fNbOfFTrapezoidDeltaESingles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFTrapezoidDeltaESinglePosZ", (void*)&fFTrapezoidDeltaESinglePosZ);
      R__insp.InspectMember("vector<double>", (void*)&fFTrapezoidDeltaESinglePosZ, "fFTrapezoidDeltaESinglePosZ.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFTrapezoidDeltaESingleInnerRadius", &fFTrapezoidDeltaESingleInnerRadius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFTrapezoidDeltaESingleOuterRadius", &fFTrapezoidDeltaESingleOuterRadius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFTrapezoidDeltaESingleDeltaZ", &fFTrapezoidDeltaESingleDeltaZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFTrapezoidDeltaESingleThickness", (void*)&fFTrapezoidDeltaESingleThickness);
      R__insp.InspectMember("vector<double>", (void*)&fFTrapezoidDeltaESingleThickness, "fFTrapezoidDeltaESingleThickness.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFTrapezoidDeltaESingleStartAngle", (void*)&fFTrapezoidDeltaESingleStartAngle);
      R__insp.InspectMember("vector<double>", (void*)&fFTrapezoidDeltaESingleStartAngle, "fFTrapezoidDeltaESingleStartAngle.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFTrapezoidDeltaESingleNbOfRings", &fFTrapezoidDeltaESingleNbOfRings);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFTrapezoidDeltaESingleNbOfStrips", &fFTrapezoidDeltaESingleNbOfStrips);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFTrapezoidDeltaESingleEnergyResolution", &fFTrapezoidDeltaESingleEnergyResolution);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFTrapezoidDeltaESingleFoilThickness", &fFTrapezoidDeltaESingleFoilThickness);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseFTrapezoidErest", &fUseFTrapezoidErest);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbOfFTrapezoidErestSingles", &fNbOfFTrapezoidErestSingles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFTrapezoidErestSinglePosZ", (void*)&fFTrapezoidErestSinglePosZ);
      R__insp.InspectMember("vector<double>", (void*)&fFTrapezoidErestSinglePosZ, "fFTrapezoidErestSinglePosZ.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFTrapezoidErestSingleInnerRadius", &fFTrapezoidErestSingleInnerRadius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFTrapezoidErestSingleOuterRadius", &fFTrapezoidErestSingleOuterRadius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFTrapezoidErestSingleDeltaZ", &fFTrapezoidErestSingleDeltaZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFTrapezoidErestSingleThickness", (void*)&fFTrapezoidErestSingleThickness);
      R__insp.InspectMember("vector<double>", (void*)&fFTrapezoidErestSingleThickness, "fFTrapezoidErestSingleThickness.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFTrapezoidErestSingleStartAngle", (void*)&fFTrapezoidErestSingleStartAngle);
      R__insp.InspectMember("vector<double>", (void*)&fFTrapezoidErestSingleStartAngle, "fFTrapezoidErestSingleStartAngle.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFTrapezoidErestSingleEnergyResolution", &fFTrapezoidErestSingleEnergyResolution);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseBTrapezoidDeltaE", &fUseBTrapezoidDeltaE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbOfBTrapezoidDeltaESingles", &fNbOfBTrapezoidDeltaESingles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBTrapezoidDeltaESinglePosZ", (void*)&fBTrapezoidDeltaESinglePosZ);
      R__insp.InspectMember("vector<double>", (void*)&fBTrapezoidDeltaESinglePosZ, "fBTrapezoidDeltaESinglePosZ.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBTrapezoidDeltaESingleInnerRadius", &fBTrapezoidDeltaESingleInnerRadius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBTrapezoidDeltaESingleOuterRadius", &fBTrapezoidDeltaESingleOuterRadius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBTrapezoidDeltaESingleDeltaZ", &fBTrapezoidDeltaESingleDeltaZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBTrapezoidDeltaESingleThickness", (void*)&fBTrapezoidDeltaESingleThickness);
      R__insp.InspectMember("vector<double>", (void*)&fBTrapezoidDeltaESingleThickness, "fBTrapezoidDeltaESingleThickness.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBTrapezoidDeltaESingleStartAngle", (void*)&fBTrapezoidDeltaESingleStartAngle);
      R__insp.InspectMember("vector<double>", (void*)&fBTrapezoidDeltaESingleStartAngle, "fBTrapezoidDeltaESingleStartAngle.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBTrapezoidDeltaESingleNbOfRings", &fBTrapezoidDeltaESingleNbOfRings);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBTrapezoidDeltaESingleNbOfStrips", &fBTrapezoidDeltaESingleNbOfStrips);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBTrapezoidDeltaESingleEnergyResolution", &fBTrapezoidDeltaESingleEnergyResolution);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBTrapezoidDeltaESingleFoilThickness", &fBTrapezoidDeltaESingleFoilThickness);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseBTrapezoidErest", &fUseBTrapezoidErest);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbOfBTrapezoidErestSingles", &fNbOfBTrapezoidErestSingles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBTrapezoidErestSinglePosZ", (void*)&fBTrapezoidErestSinglePosZ);
      R__insp.InspectMember("vector<double>", (void*)&fBTrapezoidErestSinglePosZ, "fBTrapezoidErestSinglePosZ.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBTrapezoidErestSingleInnerRadius", &fBTrapezoidErestSingleInnerRadius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBTrapezoidErestSingleOuterRadius", &fBTrapezoidErestSingleOuterRadius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBTrapezoidErestSingleDeltaZ", &fBTrapezoidErestSingleDeltaZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBTrapezoidErestSingleThickness", (void*)&fBTrapezoidErestSingleThickness);
      R__insp.InspectMember("vector<double>", (void*)&fBTrapezoidErestSingleThickness, "fBTrapezoidErestSingleThickness.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBTrapezoidErestSingleStartAngle", (void*)&fBTrapezoidErestSingleStartAngle);
      R__insp.InspectMember("vector<double>", (void*)&fBTrapezoidErestSingleStartAngle, "fBTrapezoidErestSingleStartAngle.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBTrapezoidErestSingleEnergyResolution", &fBTrapezoidErestSingleEnergyResolution);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbOfMiniballClusters", &fNbOfMiniballClusters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMiniballClusterNames", (void*)&fMiniballClusterNames);
      R__insp.InspectMember("vector<std::string>", (void*)&fMiniballClusterNames, "fMiniballClusterNames.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMiniballClusterTypes", (void*)&fMiniballClusterTypes);
      R__insp.InspectMember("vector<int>", (void*)&fMiniballClusterTypes, "fMiniballClusterTypes.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMiniballClusterRho", (void*)&fMiniballClusterRho);
      R__insp.InspectMember("vector<double>", (void*)&fMiniballClusterRho, "fMiniballClusterRho.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMiniballClusterTheta", (void*)&fMiniballClusterTheta);
      R__insp.InspectMember("vector<double>", (void*)&fMiniballClusterTheta, "fMiniballClusterTheta.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMiniballClusterPhi", (void*)&fMiniballClusterPhi);
      R__insp.InspectMember("vector<double>", (void*)&fMiniballClusterPhi, "fMiniballClusterPhi.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMiniballClusterSpin", (void*)&fMiniballClusterSpin);
      R__insp.InspectMember("vector<double>", (void*)&fMiniballClusterSpin, "fMiniballClusterSpin.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMiniballEnergyResolutionCore", &fMiniballEnergyResolutionCore);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMiniballEnergyResolutionSegment", &fMiniballEnergyResolutionSegment);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TRexSettings(void *p) {
      return  p ? new(p) ::TRexSettings : new ::TRexSettings;
   }
   static void *newArray_TRexSettings(Long_t nElements, void *p) {
      return p ? new(p) ::TRexSettings[nElements] : new ::TRexSettings[nElements];
   }
   // Wrapper around operator delete
   static void delete_TRexSettings(void *p) {
      delete ((::TRexSettings*)p);
   }
   static void deleteArray_TRexSettings(void *p) {
      delete [] ((::TRexSettings*)p);
   }
   static void destruct_TRexSettings(void *p) {
      typedef ::TRexSettings current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TRexSettings

//______________________________________________________________________________
void Barrel::Streamer(TBuffer &R__b)
{
   // Stream an object of class Barrel.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Barrel::Class(),this);
   } else {
      R__b.WriteClassBuffer(Barrel::Class(),this);
   }
}

//______________________________________________________________________________
void Barrel::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Barrel.
      TClass *R__cl = ::Barrel::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fID", &fID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRear", &fRear);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEdet", &fEdet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMult", &fMult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNeighbor", &fNeighbor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStripNr", (void*)&fStripNr);
      R__insp.InspectMember("vector<int>", (void*)&fStripNr, "fStripNr.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStripPos", (void*)&fStripPos);
      R__insp.InspectMember("vector<double>", (void*)&fStripPos, "fStripPos.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &fTime);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Barrel(void *p) {
      return  p ? new(p) ::Barrel : new ::Barrel;
   }
   static void *newArray_Barrel(Long_t nElements, void *p) {
      return p ? new(p) ::Barrel[nElements] : new ::Barrel[nElements];
   }
   // Wrapper around operator delete
   static void delete_Barrel(void *p) {
      delete ((::Barrel*)p);
   }
   static void deleteArray_Barrel(void *p) {
      delete [] ((::Barrel*)p);
   }
   static void destruct_Barrel(void *p) {
      typedef ::Barrel current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Barrel

//______________________________________________________________________________
void Annular::Streamer(TBuffer &R__b)
{
   // Stream an object of class Annular.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Annular::Class(),this);
   } else {
      R__b.WriteClassBuffer(Annular::Class(),this);
   }
}

//______________________________________________________________________________
void Annular::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Annular.
      TClass *R__cl = ::Annular::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fID", &fID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStripNr", (void*)&fStripNr);
      R__insp.InspectMember("vector<int>", (void*)&fStripNr, "fStripNr.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStripEnergy", (void*)&fStripEnergy);
      R__insp.InspectMember("vector<double>", (void*)&fStripEnergy, "fStripEnergy.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRingNr", (void*)&fRingNr);
      R__insp.InspectMember("vector<int>", (void*)&fRingNr, "fRingNr.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRingEnergy", (void*)&fRingEnergy);
      R__insp.InspectMember("vector<double>", (void*)&fRingEnergy, "fRingEnergy.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEdet", &fEdet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMult", &fMult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &fTime);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Annular(void *p) {
      return  p ? new(p) ::Annular : new ::Annular;
   }
   static void *newArray_Annular(Long_t nElements, void *p) {
      return p ? new(p) ::Annular[nElements] : new ::Annular[nElements];
   }
   // Wrapper around operator delete
   static void delete_Annular(void *p) {
      delete ((::Annular*)p);
   }
   static void deleteArray_Annular(void *p) {
      delete [] ((::Annular*)p);
   }
   static void destruct_Annular(void *p) {
      typedef ::Annular current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Annular

//______________________________________________________________________________
void Germanium::Streamer(TBuffer &R__b)
{
   // Stream an object of class Germanium.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Germanium::Class(),this);
   } else {
      R__b.WriteClassBuffer(Germanium::Class(),this);
   }
}

//______________________________________________________________________________
void Germanium::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Germanium.
      TClass *R__cl = ::Germanium::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCrystal", (void*)&fCrystal);
      R__insp.InspectMember("vector<Crystal>", (void*)&fCrystal, "fCrystal.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "positionWorld[3]", positionWorld);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "theta", &theta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fClusterID", &fClusterID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStrange", &fStrange);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thetaIn", &thetaIn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSegEnergy", (void*)&fSegEnergy);
      R__insp.InspectMember("vector<double>", (void*)&fSegEnergy, "fSegEnergy.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCryID", &fCryID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &fTime);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Germanium(void *p) {
      return  p ? new(p) ::Germanium : new ::Germanium;
   }
   static void *newArray_Germanium(Long_t nElements, void *p) {
      return p ? new(p) ::Germanium[nElements] : new ::Germanium[nElements];
   }
   // Wrapper around operator delete
   static void delete_Germanium(void *p) {
      delete ((::Germanium*)p);
   }
   static void deleteArray_Germanium(void *p) {
      delete [] ((::Germanium*)p);
   }
   static void destruct_Germanium(void *p) {
      typedef ::Germanium current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Germanium

//______________________________________________________________________________
void Crystal::Streamer(TBuffer &R__b)
{
   // Stream an object of class Crystal.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Crystal::Class(),this);
   } else {
      R__b.WriteClassBuffer(Crystal::Class(),this);
   }
}

//______________________________________________________________________________
void Crystal::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Crystal.
      TClass *R__cl = ::Crystal::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCryID", &fCryID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCoreEnergy", &fCoreEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSegEnergy", (void*)&fSegEnergy);
      R__insp.InspectMember("vector<double>", (void*)&fSegEnergy, "fSegEnergy.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSegID", (void*)&fSegID);
      R__insp.InspectMember("vector<int>", (void*)&fSegID, "fSegID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &fTime);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Crystal(void *p) {
      return  p ? new(p) ::Crystal : new ::Crystal;
   }
   static void *newArray_Crystal(Long_t nElements, void *p) {
      return p ? new(p) ::Crystal[nElements] : new ::Crystal[nElements];
   }
   // Wrapper around operator delete
   static void delete_Crystal(void *p) {
      delete ((::Crystal*)p);
   }
   static void deleteArray_Crystal(void *p) {
      delete [] ((::Crystal*)p);
   }
   static void destruct_Crystal(void *p) {
      typedef ::Crystal current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Crystal

//______________________________________________________________________________
void ParticleMC::Streamer(TBuffer &R__b)
{
   // Stream an object of class ParticleMC.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ParticleMC::Class(),this);
   } else {
      R__b.WriteClassBuffer(ParticleMC::Class(),this);
   }
}

//______________________________________________________________________________
void ParticleMC::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ParticleMC.
      TClass *R__cl = ::ParticleMC::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fID", &fID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStripNr", (void*)&fStripNr);
      R__insp.InspectMember("vector<int>", (void*)&fStripNr, "fStripNr.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStripEnergy", (void*)&fStripEnergy);
      R__insp.InspectMember("vector<double>", (void*)&fStripEnergy, "fStripEnergy.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStripA", (void*)&fStripA);
      R__insp.InspectMember("vector<int>", (void*)&fStripA, "fStripA.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStripZ", (void*)&fStripZ);
      R__insp.InspectMember("vector<int>", (void*)&fStripZ, "fStripZ.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStripTrackID", (void*)&fStripTrackID);
      R__insp.InspectMember("vector<int>", (void*)&fStripTrackID, "fStripTrackID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStripTime", (void*)&fStripTime);
      R__insp.InspectMember("vector<double>", (void*)&fStripTime, "fStripTime.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPosGlobalX", (void*)&fPosGlobalX);
      R__insp.InspectMember("vector<double>", (void*)&fPosGlobalX, "fPosGlobalX.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPosGlobalY", (void*)&fPosGlobalY);
      R__insp.InspectMember("vector<double>", (void*)&fPosGlobalY, "fPosGlobalY.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPosGlobalZ", (void*)&fPosGlobalZ);
      R__insp.InspectMember("vector<double>", (void*)&fPosGlobalZ, "fPosGlobalZ.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStripStopped", (void*)&fStripStopped);
      R__insp.InspectMember("vector<int>", (void*)&fStripStopped, "fStripStopped.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRingNr", (void*)&fRingNr);
      R__insp.InspectMember("vector<int>", (void*)&fRingNr, "fRingNr.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRingEnergy", (void*)&fRingEnergy);
      R__insp.InspectMember("vector<double>", (void*)&fRingEnergy, "fRingEnergy.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRingA", (void*)&fRingA);
      R__insp.InspectMember("vector<int>", (void*)&fRingA, "fRingA.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRingZ", (void*)&fRingZ);
      R__insp.InspectMember("vector<int>", (void*)&fRingZ, "fRingZ.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRingTrackID", (void*)&fRingTrackID);
      R__insp.InspectMember("vector<int>", (void*)&fRingTrackID, "fRingTrackID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRingTime", (void*)&fRingTime);
      R__insp.InspectMember("vector<double>", (void*)&fRingTime, "fRingTime.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRingStopped", (void*)&fRingStopped);
      R__insp.InspectMember("vector<int>", (void*)&fRingStopped, "fRingStopped.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fA", &fA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZ", &fZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrackID", &fTrackID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &fTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStopped", &fStopped);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fResKinEnergy", &fResKinEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMult", &fMult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRear", &fRear);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEdet", &fEdet);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_ParticleMC(void *p) {
      return  p ? new(p) ::ParticleMC : new ::ParticleMC;
   }
   static void *newArray_ParticleMC(Long_t nElements, void *p) {
      return p ? new(p) ::ParticleMC[nElements] : new ::ParticleMC[nElements];
   }
   // Wrapper around operator delete
   static void delete_ParticleMC(void *p) {
      delete ((::ParticleMC*)p);
   }
   static void deleteArray_ParticleMC(void *p) {
      delete [] ((::ParticleMC*)p);
   }
   static void destruct_ParticleMC(void *p) {
      typedef ::ParticleMC current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ParticleMC

namespace ROOTDict {
   void vectorlEAnnulargR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEAnnulargR_Dictionary();
   static void *new_vectorlEAnnulargR(void *p = 0);
   static void *newArray_vectorlEAnnulargR(Long_t size, void *p);
   static void delete_vectorlEAnnulargR(void *p);
   static void deleteArray_vectorlEAnnulargR(void *p);
   static void destruct_vectorlEAnnulargR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<Annular>*)
   {
      vector<Annular> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<Annular>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<Annular>", -2, "prec_stl/vector", 49,
                  typeid(vector<Annular>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEAnnulargR_Dictionary, isa_proxy, 4,
                  sizeof(vector<Annular>) );
      instance.SetNew(&new_vectorlEAnnulargR);
      instance.SetNewArray(&newArray_vectorlEAnnulargR);
      instance.SetDelete(&delete_vectorlEAnnulargR);
      instance.SetDeleteArray(&deleteArray_vectorlEAnnulargR);
      instance.SetDestructor(&destruct_vectorlEAnnulargR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<Annular> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<Annular>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEAnnulargR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<Annular>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEAnnulargR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Annular> : new vector<Annular>;
   }
   static void *newArray_vectorlEAnnulargR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Annular>[nElements] : new vector<Annular>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEAnnulargR(void *p) {
      delete ((vector<Annular>*)p);
   }
   static void deleteArray_vectorlEAnnulargR(void *p) {
      delete [] ((vector<Annular>*)p);
   }
   static void destruct_vectorlEAnnulargR(void *p) {
      typedef vector<Annular> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<Annular>

namespace ROOTDict {
   void vectorlEBarrelgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEBarrelgR_Dictionary();
   static void *new_vectorlEBarrelgR(void *p = 0);
   static void *newArray_vectorlEBarrelgR(Long_t size, void *p);
   static void delete_vectorlEBarrelgR(void *p);
   static void deleteArray_vectorlEBarrelgR(void *p);
   static void destruct_vectorlEBarrelgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<Barrel>*)
   {
      vector<Barrel> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<Barrel>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<Barrel>", -2, "prec_stl/vector", 49,
                  typeid(vector<Barrel>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEBarrelgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<Barrel>) );
      instance.SetNew(&new_vectorlEBarrelgR);
      instance.SetNewArray(&newArray_vectorlEBarrelgR);
      instance.SetDelete(&delete_vectorlEBarrelgR);
      instance.SetDeleteArray(&deleteArray_vectorlEBarrelgR);
      instance.SetDestructor(&destruct_vectorlEBarrelgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<Barrel> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<Barrel>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEBarrelgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<Barrel>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEBarrelgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Barrel> : new vector<Barrel>;
   }
   static void *newArray_vectorlEBarrelgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Barrel>[nElements] : new vector<Barrel>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEBarrelgR(void *p) {
      delete ((vector<Barrel>*)p);
   }
   static void deleteArray_vectorlEBarrelgR(void *p) {
      delete [] ((vector<Barrel>*)p);
   }
   static void destruct_vectorlEBarrelgR(void *p) {
      typedef vector<Barrel> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<Barrel>

namespace ROOTDict {
   void vectorlECrystalgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlECrystalgR_Dictionary();
   static void *new_vectorlECrystalgR(void *p = 0);
   static void *newArray_vectorlECrystalgR(Long_t size, void *p);
   static void delete_vectorlECrystalgR(void *p);
   static void deleteArray_vectorlECrystalgR(void *p);
   static void destruct_vectorlECrystalgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<Crystal>*)
   {
      vector<Crystal> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<Crystal>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<Crystal>", -2, "prec_stl/vector", 49,
                  typeid(vector<Crystal>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlECrystalgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<Crystal>) );
      instance.SetNew(&new_vectorlECrystalgR);
      instance.SetNewArray(&newArray_vectorlECrystalgR);
      instance.SetDelete(&delete_vectorlECrystalgR);
      instance.SetDeleteArray(&deleteArray_vectorlECrystalgR);
      instance.SetDestructor(&destruct_vectorlECrystalgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<Crystal> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<Crystal>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlECrystalgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<Crystal>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlECrystalgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Crystal> : new vector<Crystal>;
   }
   static void *newArray_vectorlECrystalgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Crystal>[nElements] : new vector<Crystal>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlECrystalgR(void *p) {
      delete ((vector<Crystal>*)p);
   }
   static void deleteArray_vectorlECrystalgR(void *p) {
      delete [] ((vector<Crystal>*)p);
   }
   static void destruct_vectorlECrystalgR(void *p) {
      typedef vector<Crystal> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<Crystal>

namespace ROOTDict {
   void vectorlEGermaniumgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEGermaniumgR_Dictionary();
   static void *new_vectorlEGermaniumgR(void *p = 0);
   static void *newArray_vectorlEGermaniumgR(Long_t size, void *p);
   static void delete_vectorlEGermaniumgR(void *p);
   static void deleteArray_vectorlEGermaniumgR(void *p);
   static void destruct_vectorlEGermaniumgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<Germanium>*)
   {
      vector<Germanium> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<Germanium>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<Germanium>", -2, "prec_stl/vector", 49,
                  typeid(vector<Germanium>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEGermaniumgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<Germanium>) );
      instance.SetNew(&new_vectorlEGermaniumgR);
      instance.SetNewArray(&newArray_vectorlEGermaniumgR);
      instance.SetDelete(&delete_vectorlEGermaniumgR);
      instance.SetDeleteArray(&deleteArray_vectorlEGermaniumgR);
      instance.SetDestructor(&destruct_vectorlEGermaniumgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<Germanium> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<Germanium>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEGermaniumgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<Germanium>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEGermaniumgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Germanium> : new vector<Germanium>;
   }
   static void *newArray_vectorlEGermaniumgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Germanium>[nElements] : new vector<Germanium>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEGermaniumgR(void *p) {
      delete ((vector<Germanium>*)p);
   }
   static void deleteArray_vectorlEGermaniumgR(void *p) {
      delete [] ((vector<Germanium>*)p);
   }
   static void destruct_vectorlEGermaniumgR(void *p) {
      typedef vector<Germanium> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<Germanium>

namespace ROOTDict {
   void vectorlEParticleMCgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEParticleMCgR_Dictionary();
   static void *new_vectorlEParticleMCgR(void *p = 0);
   static void *newArray_vectorlEParticleMCgR(Long_t size, void *p);
   static void delete_vectorlEParticleMCgR(void *p);
   static void deleteArray_vectorlEParticleMCgR(void *p);
   static void destruct_vectorlEParticleMCgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<ParticleMC>*)
   {
      vector<ParticleMC> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<ParticleMC>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<ParticleMC>", -2, "prec_stl/vector", 49,
                  typeid(vector<ParticleMC>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEParticleMCgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<ParticleMC>) );
      instance.SetNew(&new_vectorlEParticleMCgR);
      instance.SetNewArray(&newArray_vectorlEParticleMCgR);
      instance.SetDelete(&delete_vectorlEParticleMCgR);
      instance.SetDeleteArray(&deleteArray_vectorlEParticleMCgR);
      instance.SetDestructor(&destruct_vectorlEParticleMCgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<ParticleMC> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<ParticleMC>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEParticleMCgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<ParticleMC>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEParticleMCgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<ParticleMC> : new vector<ParticleMC>;
   }
   static void *newArray_vectorlEParticleMCgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<ParticleMC>[nElements] : new vector<ParticleMC>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEParticleMCgR(void *p) {
      delete ((vector<ParticleMC>*)p);
   }
   static void deleteArray_vectorlEParticleMCgR(void *p) {
      delete [] ((vector<ParticleMC>*)p);
   }
   static void destruct_vectorlEParticleMCgR(void *p) {
      typedef vector<ParticleMC> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<ParticleMC>

namespace ROOTDict {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<double>

namespace ROOTDict {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "prec_stl/vector", 49,
                  typeid(vector<int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<int>

namespace ROOTDict {
   void vectorlEstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEstringgR_Dictionary();
   static void *new_vectorlEstringgR(void *p = 0);
   static void *newArray_vectorlEstringgR(Long_t size, void *p);
   static void delete_vectorlEstringgR(void *p);
   static void deleteArray_vectorlEstringgR(void *p);
   static void destruct_vectorlEstringgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<string>*)
   {
      vector<string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<string>", -2, "prec_stl/vector", 49,
                  typeid(vector<string>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEstringgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<string>) );
      instance.SetNew(&new_vectorlEstringgR);
      instance.SetNewArray(&newArray_vectorlEstringgR);
      instance.SetDelete(&delete_vectorlEstringgR);
      instance.SetDeleteArray(&deleteArray_vectorlEstringgR);
      instance.SetDestructor(&destruct_vectorlEstringgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEstringgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<string>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string> : new vector<string>;
   }
   static void *newArray_vectorlEstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string>[nElements] : new vector<string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEstringgR(void *p) {
      delete ((vector<string>*)p);
   }
   static void deleteArray_vectorlEstringgR(void *p) {
      delete [] ((vector<string>*)p);
   }
   static void destruct_vectorlEstringgR(void *p) {
      typedef vector<string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<string>

/********************************************************
* Dictionary.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableDictionary();

extern "C" void G__set_cpp_environmentDictionary() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("include/TRexSettings.hh");
  G__add_compiledheader("include/Barrel.hh");
  G__add_compiledheader("include/Annular.hh");
  G__add_compiledheader("include/Germanium.hh");
  G__add_compiledheader("include/ParticleMC.hh");
  G__cpp_reset_tagtableDictionary();
}
#include <new>
extern "C" int G__cpp_dllrevDictionary() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TRexSettings */
static int G__Dictionary_191_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TRexSettings::Get());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRexSettings*) G__getstructoffset())->SetSettingsFile(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRexSettings*) G__getstructoffset())->ReadSettingsFile(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((TRexSettings*) G__getstructoffset())->GetSettingsFile();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((TRexSettings*) G__getstructoffset())->GetPrimaryGenerator();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TRexSettings*) G__getstructoffset())->SimulateEjectiles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TRexSettings*) G__getstructoffset())->SimulateGammas());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->IncludeEnergyResolution());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->IncludeVacuumChamber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((TRexSettings*) G__getstructoffset())->GetVacuumChamberType();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((TRexSettings*) G__getstructoffset())->GetVacuumChamberGas();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetVacuumChamberGasPressure());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetTestSourceEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetBeamEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetBeamWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetThetaCmMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->GetProjectileZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->GetProjectileA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->GetTargetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->GetTargetA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->GetEjectileZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->GetEjectileA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->GetRecoilZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->GetRecoilA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((TRexSettings*) G__getstructoffset())->GetProjectileName();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((TRexSettings*) G__getstructoffset())->GetTargetName();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((TRexSettings*) G__getstructoffset())->GetEjectileName();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((TRexSettings*) G__getstructoffset())->GetRecoilName();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((TRexSettings*) G__getstructoffset())->GetTargetMaterialName();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetTargetAtomicRatio());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetTransferOrCoulexProbability());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((TRexSettings*) G__getstructoffset())->GetLevelFile();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((TRexSettings*) G__getstructoffset())->GetAngularDistributionFile();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((TRexSettings*) G__getstructoffset())->GetMassFile();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((TRexSettings*) G__getstructoffset())->GetCrossSectionFile();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetAlphaSourceDiameter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetAlphaSourceThickness());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetTargetDiameter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetTargetThickness());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetTargetThicknessMgPerCm2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetGasTargetLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetTargetPressure());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetTargetPhysicalLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetTargetMaterialDensity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRexSettings*) G__getstructoffset())->SetTargetMaterialDensity((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRexSettings*) G__getstructoffset())->SetTargetThickness((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->Colours());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TRexSettings*) G__getstructoffset())->VisualizationCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRexSettings*) G__getstructoffset())->VisualizationCut((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->WriteAllEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TRexSettings*) G__getstructoffset())->ConstructPCB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TRexSettings*) G__getstructoffset())->ResistiveStrips());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->UseFCDdeltaE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->GetNbOfFCDdeltaESingles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetFCDdeltaESinglePosX();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetFCDdeltaESinglePosY();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetFCDdeltaESinglePosZ();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetFCDdeltaESingleStartAngle();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetFCDdeltaESingleThickness();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetFCDdeltaESingleDeadLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetFCDdeltaESingleInnerRadius());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetFCDdeltaESingleOuterRadius());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetFCDdeltaESingleRingWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetFCDdeltaESingleSpanningAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetFCDdeltaESingleStripWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->FCDTransferTo16Strips());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetFCDdeltaESingleEnergyResolution());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetFCDdeltaESingleFoilThickness());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->UseFCDErest());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->GetNbOfFCDErestSingles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetFCDErestSinglePosX();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetFCDErestSinglePosY();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetFCDErestSinglePosZ();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetFCDErestSingleStartAngle();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetFCDErestSingleThickness();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetFCDErestSingleDeadLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetFCDErestSingleInnerRadius());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetFCDErestSingleOuterRadius());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetFCDErestSingleSpanningAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetFCDErestSingleEnergyResolution());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->UseBCDdeltaE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->GetNbOfBCDdeltaESingles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetBCDdeltaESinglePosX();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetBCDdeltaESinglePosY();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetBCDdeltaESinglePosZ();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetBCDdeltaESingleStartAngle();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetBCDdeltaESingleThickness();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetBCDdeltaESingleDeadLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetBCDdeltaESingleInnerRadius());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetBCDdeltaESingleOuterRadius());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetBCDdeltaESingleRingWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetBCDdeltaESingleSpanningAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetBCDdeltaESingleStripWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->BCDTransferTo16Strips());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetBCDdeltaESingleEnergyResolution());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetBCDdeltaESingleFoilThickness());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->UseBCDErest());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->GetNbOfBCDErestSingles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetBCDErestSinglePosX();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetBCDErestSinglePosY();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetBCDErestSinglePosZ();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetBCDErestSingleStartAngle();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetBCDErestSingleThickness();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetBCDErestSingleDeadLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetBCDErestSingleInnerRadius());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetBCDErestSingleOuterRadius());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_108(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetBCDErestSingleSpanningAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetBCDErestSingleEnergyResolution());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->UseFBarrelDeltaE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->GetNbOfFBarrelDeltaESingles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_112(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetFBarrelDeltaESinglePosZ();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_113(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetFBarrelDeltaESingleDistanceToBeam();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_114(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetFBarrelDeltaESingleStartAngle();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_115(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetFBarrelDeltaESingleThickness();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_116(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetFBarrelDeltaESingleDeadLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_117(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetFBarrelDeltaESingleLengthX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_118(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetFBarrelDeltaESingleLengthY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_119(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetFBarrelDeltaESingleStripWidthPar());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_120(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetFBarrelDeltaESingleStripWidthPer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_121(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetFBarrelDeltaESingleEnergyResolution());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_122(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetFBarrelDeltaESingleFoilThickness());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_123(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->UseFBarrelErest());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_124(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->GetNbOfFBarrelErestSingles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_125(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetFBarrelErestSinglePosZ();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_126(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetFBarrelErestSingleDistanceToBeam();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_127(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetFBarrelErestSingleStartAngle();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_128(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetFBarrelErestSingleThickness();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_129(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetFBarrelErestSingleDeadLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_130(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetFBarrelErestSingleLengthX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_131(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetFBarrelErestSingleLengthY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_132(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetFBarrelErestSingleEnergyResolution());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_133(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->UseSecondFBarrelDeltaE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_134(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->GetNbOfSecondFBarrelDeltaESingles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_135(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetSecondFBarrelDeltaESinglePosZ();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_136(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetSecondFBarrelDeltaESingleDistanceToBeam();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_137(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetSecondFBarrelDeltaESingleStartAngle();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_138(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetSecondFBarrelDeltaESingleThickness();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_139(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetSecondFBarrelDeltaESingleDeadLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_140(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetSecondFBarrelDeltaESingleLengthX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_141(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetSecondFBarrelDeltaESingleLengthY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_142(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetSecondFBarrelDeltaESingleStripWidthPar());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_143(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetSecondFBarrelDeltaESingleStripWidthPer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_144(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetSecondFBarrelDeltaESingleEnergyResolution());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_145(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetSecondFBarrelDeltaESingleFoilThickness());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_146(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->UseMBarrelDeltaE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_147(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->GetNbOfMBarrelDeltaESingles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_148(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetMBarrelDeltaESinglePosZ();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_149(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetMBarrelDeltaESingleDistanceToBeam();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_150(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetMBarrelDeltaESingleStartAngle();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_151(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetMBarrelDeltaESingleThickness();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_152(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetMBarrelDeltaESingleDeadLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_153(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetMBarrelDeltaESingleLengthX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_154(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetMBarrelDeltaESingleLengthY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_155(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetMBarrelDeltaESingleStripWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_156(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetMBarrelDeltaESingleEnergyResolution());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_157(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetMBarrelDeltaESingleFoilThickness());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_158(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->UseMBarrelErest());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_159(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->GetNbOfMBarrelErestSingles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_160(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetMBarrelErestSinglePosZ();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_161(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetMBarrelErestSingleDistanceToBeam();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_162(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetMBarrelErestSingleStartAngle();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_163(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetMBarrelErestSingleThickness();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_164(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetMBarrelErestSingleDeadLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_165(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetMBarrelErestSingleLengthX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_166(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetMBarrelErestSingleLengthY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_167(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetMBarrelErestSingleEnergyResolution());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_168(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->UseBBarrelDeltaE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_169(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->GetNbOfBBarrelDeltaESingles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_170(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetBBarrelDeltaESinglePosZ();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_171(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetBBarrelDeltaESingleDistanceToBeam();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_172(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetBBarrelDeltaESingleStartAngle();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_173(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetBBarrelDeltaESingleThickness();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_174(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetBBarrelDeltaESingleDeadLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_175(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetBBarrelDeltaESingleLengthX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_176(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetBBarrelDeltaESingleLengthY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_177(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetBBarrelDeltaESingleStripWidthPar());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_178(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetBBarrelDeltaESingleStripWidthPer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_179(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetBBarrelDeltaESingleEnergyResolution());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_180(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetBBarrelDeltaESingleFoilThickness());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_181(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->UseBBarrelErest());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_182(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->GetNbOfBBarrelErestSingles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_183(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetBBarrelErestSinglePosZ();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_184(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetBBarrelErestSingleDistanceToBeam();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_185(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetBBarrelErestSingleStartAngle();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_186(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetBBarrelErestSingleThickness();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_187(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetBBarrelErestSingleDeadLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_188(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetBBarrelErestSingleLengthX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_189(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetBBarrelErestSingleLengthY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_190(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetBBarrelErestSingleEnergyResolution());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_191(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->UseSecondBBarrelDeltaE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_192(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->GetNbOfSecondBBarrelDeltaESingles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_193(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetSecondBBarrelDeltaESinglePosZ();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_194(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetSecondBBarrelDeltaESingleDistanceToBeam();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_195(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetSecondBBarrelDeltaESingleStartAngle();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_196(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetSecondBBarrelDeltaESingleThickness();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_197(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetSecondBBarrelDeltaESingleDeadLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_198(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetSecondBBarrelDeltaESingleLengthX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_199(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetSecondBBarrelDeltaESingleLengthY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_200(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetSecondBBarrelDeltaESingleStripWidthPar());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_201(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetSecondBBarrelDeltaESingleStripWidthPer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_202(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetSecondBBarrelDeltaESingleEnergyResolution());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_203(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetSecondBBarrelDeltaESingleFoilThickness());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_204(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->UseFTrapezoidDeltaE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_205(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->GetNbOfFTrapezoidDeltaESingles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_206(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetFTrapezoidDeltaESinglePosZ();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_207(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetFTrapezoidDeltaESingleInnerRadius());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_208(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetFTrapezoidDeltaESingleOuterRadius());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_209(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetFTrapezoidDeltaESingleDeltaZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_210(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetFTrapezoidDeltaESingleThickness();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_211(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetFTrapezoidDeltaESingleStartAngle();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_212(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetFTrapezoidDeltaESingleNbOfRings());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_213(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetFTrapezoidDeltaESingleNbOfStrips());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_214(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetFTrapezoidDeltaESingleEnergyResolution());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_215(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetFTrapezoidDeltaESingleFoilThickness());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_216(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->UseFTrapezoidErest());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_217(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->GetNbOfFTrapezoidErestSingles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_218(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetFTrapezoidErestSinglePosZ();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_219(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetFTrapezoidErestSingleInnerRadius());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_220(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetFTrapezoidErestSingleOuterRadius());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_221(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetFTrapezoidErestSingleDeltaZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_222(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetFTrapezoidErestSingleThickness();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_223(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetFTrapezoidErestSingleStartAngle();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_224(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetFTrapezoidErestSingleEnergyResolution());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_225(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->UseBTrapezoidDeltaE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_226(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->GetNbOfBTrapezoidDeltaESingles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_227(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetBTrapezoidDeltaESinglePosZ();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_228(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetBTrapezoidDeltaESingleInnerRadius());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_229(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetBTrapezoidDeltaESingleOuterRadius());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_230(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetBTrapezoidDeltaESingleDeltaZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_231(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetBTrapezoidDeltaESingleThickness();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_232(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetBTrapezoidDeltaESingleStartAngle();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_233(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetBTrapezoidDeltaESingleNbOfRings());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_234(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetBTrapezoidDeltaESingleNbOfStrips());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_235(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetBTrapezoidDeltaESingleEnergyResolution());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_236(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetBTrapezoidDeltaESingleFoilThickness());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_237(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->UseBTrapezoidErest());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_238(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->GetNbOfBTrapezoidErestSingles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_239(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetBTrapezoidErestSinglePosZ();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_240(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetBTrapezoidErestSingleInnerRadius());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_241(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetBTrapezoidErestSingleOuterRadius());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_242(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetBTrapezoidErestSingleDeltaZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_243(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetBTrapezoidErestSingleThickness();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_244(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetBTrapezoidErestSingleStartAngle();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_245(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetBTrapezoidErestSingleEnergyResolution());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_246(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TRexSettings*) G__getstructoffset())->GetNbOfMiniballClusters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_247(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<std::string>* pobj;
         vector<std::string> xobj = ((TRexSettings*) G__getstructoffset())->GetMiniballClusterNames();
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_248(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int>* pobj;
         vector<int> xobj = ((TRexSettings*) G__getstructoffset())->GetMiniballClusterTypes();
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_249(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetMiniballClusterRho();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_250(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetMiniballClusterTheta();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_251(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetMiniballClusterPhi();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_252(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((TRexSettings*) G__getstructoffset())->GetMiniballClusterSpin();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_253(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetMiniballEnergyResolutionCore());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_254(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRexSettings*) G__getstructoffset())->GetMiniballEnergyResolutionSegment());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_255(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TRexSettings* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TRexSettings[n];
     } else {
       p = new((void*) gvp) TRexSettings[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TRexSettings;
     } else {
       p = new((void*) gvp) TRexSettings;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_TRexSettings));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_256(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TRexSettings::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_257(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRexSettings::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_258(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TRexSettings::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_259(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TRexSettings::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_263(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRexSettings*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_264(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRexSettings::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_265(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TRexSettings::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_266(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRexSettings::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_191_0_267(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TRexSettings::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dictionary_191_0_268(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TRexSettings* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TRexSettings(*(TRexSettings*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_TRexSettings));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TRexSettings G__TTRexSettings;
static int G__Dictionary_191_0_269(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TRexSettings*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TRexSettings*) (soff+(sizeof(TRexSettings)*i)))->~G__TTRexSettings();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TRexSettings*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TRexSettings*) (soff))->~G__TTRexSettings();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dictionary_191_0_270(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TRexSettings* dest = (TRexSettings*) G__getstructoffset();
   *dest = *(TRexSettings*) libp->para[0].ref;
   const TRexSettings& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Barrel */
static int G__Dictionary_200_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Barrel* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Barrel[n];
     } else {
       p = new((void*) gvp) Barrel[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Barrel;
     } else {
       p = new((void*) gvp) Barrel;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_Barrel));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_200_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Barrel*) G__getstructoffset())->ClearBarrel();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_200_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Barrel*) G__getstructoffset())->ID((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_200_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Barrel*) G__getstructoffset())->Time((MyTime_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_200_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Barrel*) G__getstructoffset())->SetRear((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_200_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Barrel*) G__getstructoffset())->SetStrip((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_200_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Barrel*) G__getstructoffset())->Set2Strips((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (bool) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_200_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Barrel*) G__getstructoffset())->SetEdet((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_200_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Barrel*) G__getstructoffset())->SetMult((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_200_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Barrel*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_200_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Barrel*) G__getstructoffset())->GetRear());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_200_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Barrel*) G__getstructoffset())->GetEdet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_200_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Barrel*) G__getstructoffset())->GetMult());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_200_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Barrel*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_200_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Barrel*) G__getstructoffset())->GetNeighbor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_200_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int>* pobj;
         vector<int> xobj = ((Barrel*) G__getstructoffset())->GetStripNr();
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_200_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((Barrel*) G__getstructoffset())->GetStripPos();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_200_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((Barrel*) G__getstructoffset())->SizeOf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_200_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Barrel::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_200_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Barrel::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_200_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Barrel::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_200_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Barrel::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_200_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Barrel*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_200_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Barrel::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_200_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Barrel::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_200_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Barrel::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_200_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Barrel::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dictionary_200_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Barrel* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Barrel(*(Barrel*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_Barrel));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Barrel G__TBarrel;
static int G__Dictionary_200_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Barrel*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Barrel*) (soff+(sizeof(Barrel)*i)))->~G__TBarrel();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Barrel*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Barrel*) (soff))->~G__TBarrel();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dictionary_200_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Barrel* dest = (Barrel*) G__getstructoffset();
   *dest = *(Barrel*) libp->para[0].ref;
   const Barrel& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Annular */
static int G__Dictionary_201_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Annular* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Annular[n];
     } else {
       p = new((void*) gvp) Annular[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Annular;
     } else {
       p = new((void*) gvp) Annular;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_Annular));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_201_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Annular*) G__getstructoffset())->ClearAnnular();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_201_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Annular*) G__getstructoffset())->ID((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_201_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Annular*) G__getstructoffset())->Time((MyTime_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_201_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Annular*) G__getstructoffset())->SetEdet((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_201_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Annular*) G__getstructoffset())->SetStrip((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_201_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Annular*) G__getstructoffset())->Set2Strips((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_201_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Annular*) G__getstructoffset())->SetRing((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_201_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Annular*) G__getstructoffset())->Set2Rings((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_201_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Annular*) G__getstructoffset())->SetMult((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_201_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Annular*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_201_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Annular*) G__getstructoffset())->GetEdet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_201_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Annular*) G__getstructoffset())->GetMult());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_201_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Annular*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_201_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int>* pobj;
         vector<int> xobj = ((Annular*) G__getstructoffset())->GetStripNr();
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_201_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((Annular*) G__getstructoffset())->GetStripEnergy();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_201_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int>* pobj;
         vector<int> xobj = ((Annular*) G__getstructoffset())->GetRingNr();
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_201_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((Annular*) G__getstructoffset())->GetRingEnergy();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_201_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((Annular*) G__getstructoffset())->SizeOf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_201_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Annular::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_201_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Annular::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_201_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Annular::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_201_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Annular::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_201_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Annular*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_201_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Annular::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_201_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Annular::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_201_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Annular::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_201_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Annular::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dictionary_201_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Annular* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Annular(*(Annular*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_Annular));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Annular G__TAnnular;
static int G__Dictionary_201_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Annular*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Annular*) (soff+(sizeof(Annular)*i)))->~G__TAnnular();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Annular*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Annular*) (soff))->~G__TAnnular();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dictionary_201_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Annular* dest = (Annular*) G__getstructoffset();
   *dest = *(Annular*) libp->para[0].ref;
   const Annular& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Crystal */
static int G__Dictionary_202_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Crystal* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Crystal[n];
     } else {
       p = new((void*) gvp) Crystal[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Crystal;
     } else {
       p = new((void*) gvp) Crystal;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_Crystal));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_202_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Crystal* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Crystal(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (MyTime_t) G__double(libp->para[2]));
   } else {
     p = new((void*) gvp) Crystal(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (MyTime_t) G__double(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_Crystal));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_202_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Crystal* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Crystal(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (MyTime_t) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) Crystal(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (MyTime_t) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_Crystal));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_202_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Crystal*) G__getstructoffset())->ClearCrystal();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_202_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Crystal*) G__getstructoffset())->SetCryID((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_202_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Crystal*) G__getstructoffset())->SetCore((double) G__double(libp->para[0]), (MyTime_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_202_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Crystal*) G__getstructoffset())->AddSegment((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (MyTime_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_202_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Crystal*) G__getstructoffset())->SetTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_202_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Crystal*) G__getstructoffset())->GetCryID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_202_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Crystal*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_202_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Crystal*) G__getstructoffset())->GetCore());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_202_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((Crystal*) G__getstructoffset())->GetSeg();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_202_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int>* pobj;
         vector<int> xobj = ((Crystal*) G__getstructoffset())->GetSegID();
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_202_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((Crystal*) G__getstructoffset())->SizeOf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_202_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Crystal::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_202_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Crystal::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_202_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Crystal::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_202_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Crystal::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_202_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Crystal*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_202_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Crystal::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_202_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Crystal::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_202_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Crystal::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_202_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Crystal::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dictionary_202_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Crystal* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Crystal(*(Crystal*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_Crystal));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Crystal G__TCrystal;
static int G__Dictionary_202_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Crystal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Crystal*) (soff+(sizeof(Crystal)*i)))->~G__TCrystal();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Crystal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Crystal*) (soff))->~G__TCrystal();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dictionary_202_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Crystal* dest = (Crystal*) G__getstructoffset();
   *dest = *(Crystal*) libp->para[0].ref;
   const Crystal& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Germanium */
static int G__Dictionary_203_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Germanium* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Germanium[n];
     } else {
       p = new((void*) gvp) Germanium[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Germanium;
     } else {
       p = new((void*) gvp) Germanium;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_Germanium));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_203_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Germanium*) G__getstructoffset())->ClearGermanium();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_203_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Germanium*) G__getstructoffset())->SetCore((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (MyTime_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_203_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Germanium*) G__getstructoffset())->SetSegment((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (MyTime_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_203_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Germanium*) G__getstructoffset())->PrintCluster();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_203_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Germanium*) G__getstructoffset())->SetCluID((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_203_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Germanium*) G__getstructoffset())->NrOfCrystals());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_203_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Crystal>* pobj;
         vector<Crystal> xobj = ((Germanium*) G__getstructoffset())->GetCrystal();
         pobj = new vector<Crystal>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_203_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((Germanium*) G__getstructoffset())->GetPosition());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_203_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Germanium*) G__getstructoffset())->SetPosition((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_203_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Germanium*) G__getstructoffset())->GetTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_203_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Germanium*) G__getstructoffset())->SetTheta((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_203_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Germanium*) G__getstructoffset())->GetCluID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_203_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((Germanium*) G__getstructoffset())->SizeOf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_203_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Germanium::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_203_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Germanium::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_203_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Germanium::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_203_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Germanium::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_203_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Germanium*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_203_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Germanium::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_203_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Germanium::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_203_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Germanium::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_203_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Germanium::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dictionary_203_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Germanium* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Germanium(*(Germanium*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_Germanium));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Germanium G__TGermanium;
static int G__Dictionary_203_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Germanium*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Germanium*) (soff+(sizeof(Germanium)*i)))->~G__TGermanium();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Germanium*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Germanium*) (soff))->~G__TGermanium();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dictionary_203_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Germanium* dest = (Germanium*) G__getstructoffset();
   *dest = *(Germanium*) libp->para[0].ref;
   const Germanium& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<Crystal,allocator<Crystal> > */
static int G__Dictionary_205_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Crystal,allocator<Crystal> >::reference obj = ((vector<Crystal,allocator<Crystal> >*) G__getstructoffset())->at((vector<Crystal,allocator<Crystal> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_205_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Crystal,allocator<Crystal> >::const_reference obj = ((const vector<Crystal,allocator<Crystal> >*) G__getstructoffset())->at((vector<Crystal,allocator<Crystal> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_205_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Crystal,allocator<Crystal> >::iterator* pobj;
         vector<Crystal,allocator<Crystal> >::iterator xobj = ((vector<Crystal,allocator<Crystal> >*) G__getstructoffset())->begin();
         pobj = new vector<Crystal,allocator<Crystal> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_205_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Crystal,allocator<Crystal> >::iterator* pobj;
         vector<Crystal,allocator<Crystal> >::iterator xobj = ((vector<Crystal,allocator<Crystal> >*) G__getstructoffset())->end();
         pobj = new vector<Crystal,allocator<Crystal> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_205_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Crystal,allocator<Crystal> >::reverse_iterator* pobj;
         vector<Crystal,allocator<Crystal> >::reverse_iterator xobj = ((vector<Crystal,allocator<Crystal> >*) G__getstructoffset())->rbegin();
         pobj = new vector<Crystal,allocator<Crystal> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_205_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Crystal,allocator<Crystal> >::reverse_iterator* pobj;
         vector<Crystal,allocator<Crystal> >::reverse_iterator xobj = ((vector<Crystal,allocator<Crystal> >*) G__getstructoffset())->rend();
         pobj = new vector<Crystal,allocator<Crystal> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_205_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<Crystal,allocator<Crystal> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_205_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<Crystal,allocator<Crystal> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_205_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Crystal,allocator<Crystal> >*) G__getstructoffset())->resize((vector<Crystal,allocator<Crystal> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_205_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Crystal,allocator<Crystal> >*) G__getstructoffset())->resize((vector<Crystal,allocator<Crystal> >::size_type) G__int(libp->para[0]), *((Crystal*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_205_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<Crystal,allocator<Crystal> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_205_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<Crystal,allocator<Crystal> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_205_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Crystal,allocator<Crystal> >::reference obj = ((vector<Crystal,allocator<Crystal> >*) G__getstructoffset())->operator[]((vector<Crystal,allocator<Crystal> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_205_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Crystal,allocator<Crystal> >::const_reference obj = ((const vector<Crystal,allocator<Crystal> >*) G__getstructoffset())->operator[]((vector<Crystal,allocator<Crystal> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_205_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<Crystal,allocator<Crystal> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<Crystal,allocator<Crystal> >[n];
     } else {
       p = new((void*) gvp) vector<Crystal,allocator<Crystal> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<Crystal,allocator<Crystal> >;
     } else {
       p = new((void*) gvp) vector<Crystal,allocator<Crystal> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_vectorlECrystalcOallocatorlECrystalgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_205_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<Crystal,allocator<Crystal> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<Crystal,allocator<Crystal> >((vector<Crystal,allocator<Crystal> >::size_type) G__int(libp->para[0]), *(Crystal*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<Crystal,allocator<Crystal> >((vector<Crystal,allocator<Crystal> >::size_type) G__int(libp->para[0]), *(Crystal*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<Crystal,allocator<Crystal> >((vector<Crystal,allocator<Crystal> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<Crystal,allocator<Crystal> >((vector<Crystal,allocator<Crystal> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_vectorlECrystalcOallocatorlECrystalgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_205_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<Crystal,allocator<Crystal> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<Crystal,allocator<Crystal> >(*(vector<Crystal,allocator<Crystal> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<Crystal,allocator<Crystal> >(*(vector<Crystal,allocator<Crystal> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_vectorlECrystalcOallocatorlECrystalgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_205_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<Crystal,allocator<Crystal> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<Crystal,allocator<Crystal> >(*((vector<Crystal,allocator<Crystal> >::const_iterator*) G__int(libp->para[0])), *((vector<Crystal,allocator<Crystal> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<Crystal,allocator<Crystal> >(*((vector<Crystal,allocator<Crystal> >::const_iterator*) G__int(libp->para[0])), *((vector<Crystal,allocator<Crystal> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_vectorlECrystalcOallocatorlECrystalgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_205_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Crystal,allocator<Crystal> >& obj = ((vector<Crystal,allocator<Crystal> >*) G__getstructoffset())->operator=(*(vector<Crystal,allocator<Crystal> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_205_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Crystal,allocator<Crystal> >*) G__getstructoffset())->reserve((vector<Crystal,allocator<Crystal> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_205_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Crystal& obj = ((vector<Crystal,allocator<Crystal> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_205_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Crystal& obj = ((vector<Crystal,allocator<Crystal> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_205_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Crystal,allocator<Crystal> >*) G__getstructoffset())->push_back(*(Crystal*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_205_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Crystal,allocator<Crystal> >*) G__getstructoffset())->swap(*(vector<Crystal,allocator<Crystal> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_205_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Crystal,allocator<Crystal> >::iterator* pobj;
         vector<Crystal,allocator<Crystal> >::iterator xobj = ((vector<Crystal,allocator<Crystal> >*) G__getstructoffset())->insert(*((vector<Crystal,allocator<Crystal> >::iterator*) G__int(libp->para[0])), *(Crystal*) libp->para[1].ref);
         pobj = new vector<Crystal,allocator<Crystal> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_205_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Crystal,allocator<Crystal> >*) G__getstructoffset())->insert(*((vector<Crystal,allocator<Crystal> >::iterator*) G__int(libp->para[0])), *((vector<Crystal,allocator<Crystal> >::const_iterator*) G__int(libp->para[1]))
, *((vector<Crystal,allocator<Crystal> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_205_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Crystal,allocator<Crystal> >*) G__getstructoffset())->insert(*((vector<Crystal,allocator<Crystal> >::iterator*) G__int(libp->para[0])), (vector<Crystal,allocator<Crystal> >::size_type) G__int(libp->para[1])
, *(Crystal*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_205_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Crystal,allocator<Crystal> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_205_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Crystal,allocator<Crystal> >*) G__getstructoffset())->erase(*((vector<Crystal,allocator<Crystal> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_205_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Crystal,allocator<Crystal> >*) G__getstructoffset())->erase(*((vector<Crystal,allocator<Crystal> >::iterator*) G__int(libp->para[0])), *((vector<Crystal,allocator<Crystal> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_205_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Crystal,allocator<Crystal> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<Crystal,allocator<Crystal> > G__TvectorlECrystalcOallocatorlECrystalgRsPgR;
static int G__Dictionary_205_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<Crystal,allocator<Crystal> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<Crystal,allocator<Crystal> >*) (soff+(sizeof(vector<Crystal,allocator<Crystal> >)*i)))->~G__TvectorlECrystalcOallocatorlECrystalgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<Crystal,allocator<Crystal> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<Crystal,allocator<Crystal> >*) (soff))->~G__TvectorlECrystalcOallocatorlECrystalgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ParticleMC */
static int G__Dictionary_208_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ParticleMC* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ParticleMC[n];
     } else {
       p = new((void*) gvp) ParticleMC[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ParticleMC;
     } else {
       p = new((void*) gvp) ParticleMC;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_ParticleMC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleMC*) G__getstructoffset())->ClearParticleMC();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleMC*) G__getstructoffset())->ID((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleMC*) G__getstructoffset())->SetA((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleMC*) G__getstructoffset())->SetZ((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleMC*) G__getstructoffset())->SetTrackID((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleMC*) G__getstructoffset())->SetTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleMC*) G__getstructoffset())->SetStopped((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleMC*) G__getstructoffset())->SetResKinEnergy((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleMC*) G__getstructoffset())->SetRear((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleMC*) G__getstructoffset())->SetEdet((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleMC*) G__getstructoffset())->AddStrip(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (int) G__int(libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleMC*) G__getstructoffset())->AddStrip(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (int) G__int(libp->para[9]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleMC*) G__getstructoffset())->AddRing(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (int) G__int(libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleMC*) G__getstructoffset())->SetMult((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ParticleMC*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ParticleMC*) G__getstructoffset())->GetA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ParticleMC*) G__getstructoffset())->GetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ParticleMC*) G__getstructoffset())->GetTrackID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ParticleMC*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ParticleMC*) G__getstructoffset())->IsStopped());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ParticleMC*) G__getstructoffset())->GetResKinEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ParticleMC*) G__getstructoffset())->GetRear());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ParticleMC*) G__getstructoffset())->GetEdet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ParticleMC*) G__getstructoffset())->GetMult());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int>* pobj;
         vector<int> xobj = ((ParticleMC*) G__getstructoffset())->GetStripNr();
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ParticleMC*) G__getstructoffset())->GetNeighborStrip());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ParticleMC*) G__getstructoffset())->GetNeighborRing());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((ParticleMC*) G__getstructoffset())->GetStripEnergy();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((ParticleMC*) G__getstructoffset())->GetStripPos();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int>* pobj;
         vector<int> xobj = ((ParticleMC*) G__getstructoffset())->GetStripA();
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int>* pobj;
         vector<int> xobj = ((ParticleMC*) G__getstructoffset())->GetStripZ();
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int>* pobj;
         vector<int> xobj = ((ParticleMC*) G__getstructoffset())->GetStripTrackID();
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((ParticleMC*) G__getstructoffset())->GetStripTime();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((ParticleMC*) G__getstructoffset())->GetPosGlobalX();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((ParticleMC*) G__getstructoffset())->GetPosGlobalY();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((ParticleMC*) G__getstructoffset())->GetPosGlobalZ();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int>* pobj;
         vector<int> xobj = ((ParticleMC*) G__getstructoffset())->IsStripStopped();
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int>* pobj;
         vector<int> xobj = ((ParticleMC*) G__getstructoffset())->GetRingNr();
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((ParticleMC*) G__getstructoffset())->GetRingEnergy();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int>* pobj;
         vector<int> xobj = ((ParticleMC*) G__getstructoffset())->GetRingA();
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int>* pobj;
         vector<int> xobj = ((ParticleMC*) G__getstructoffset())->GetRingZ();
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int>* pobj;
         vector<int> xobj = ((ParticleMC*) G__getstructoffset())->GetRingTrackID();
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((ParticleMC*) G__getstructoffset())->GetRingTime();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int>* pobj;
         vector<int> xobj = ((ParticleMC*) G__getstructoffset())->IsRingStopped();
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((ParticleMC*) G__getstructoffset())->SizeOf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ParticleMC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ParticleMC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ParticleMC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ParticleMC::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleMC*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ParticleMC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ParticleMC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ParticleMC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_208_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ParticleMC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dictionary_208_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ParticleMC* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ParticleMC(*(ParticleMC*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_ParticleMC));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ParticleMC G__TParticleMC;
static int G__Dictionary_208_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ParticleMC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ParticleMC*) (soff+(sizeof(ParticleMC)*i)))->~G__TParticleMC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ParticleMC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ParticleMC*) (soff))->~G__TParticleMC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dictionary_208_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ParticleMC* dest = (ParticleMC*) G__getstructoffset();
   *dest = *(ParticleMC*) libp->para[0].ref;
   const ParticleMC& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<Barrel,allocator<Barrel> > */
static int G__Dictionary_210_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Barrel,allocator<Barrel> >::reference obj = ((vector<Barrel,allocator<Barrel> >*) G__getstructoffset())->at((vector<Barrel,allocator<Barrel> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_210_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Barrel,allocator<Barrel> >::const_reference obj = ((const vector<Barrel,allocator<Barrel> >*) G__getstructoffset())->at((vector<Barrel,allocator<Barrel> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_210_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Barrel,allocator<Barrel> >::iterator* pobj;
         vector<Barrel,allocator<Barrel> >::iterator xobj = ((vector<Barrel,allocator<Barrel> >*) G__getstructoffset())->begin();
         pobj = new vector<Barrel,allocator<Barrel> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_210_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Barrel,allocator<Barrel> >::iterator* pobj;
         vector<Barrel,allocator<Barrel> >::iterator xobj = ((vector<Barrel,allocator<Barrel> >*) G__getstructoffset())->end();
         pobj = new vector<Barrel,allocator<Barrel> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_210_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Barrel,allocator<Barrel> >::reverse_iterator* pobj;
         vector<Barrel,allocator<Barrel> >::reverse_iterator xobj = ((vector<Barrel,allocator<Barrel> >*) G__getstructoffset())->rbegin();
         pobj = new vector<Barrel,allocator<Barrel> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_210_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Barrel,allocator<Barrel> >::reverse_iterator* pobj;
         vector<Barrel,allocator<Barrel> >::reverse_iterator xobj = ((vector<Barrel,allocator<Barrel> >*) G__getstructoffset())->rend();
         pobj = new vector<Barrel,allocator<Barrel> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_210_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<Barrel,allocator<Barrel> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_210_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<Barrel,allocator<Barrel> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_210_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Barrel,allocator<Barrel> >*) G__getstructoffset())->resize((vector<Barrel,allocator<Barrel> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_210_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Barrel,allocator<Barrel> >*) G__getstructoffset())->resize((vector<Barrel,allocator<Barrel> >::size_type) G__int(libp->para[0]), *((Barrel*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_210_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<Barrel,allocator<Barrel> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_210_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<Barrel,allocator<Barrel> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_210_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Barrel,allocator<Barrel> >::reference obj = ((vector<Barrel,allocator<Barrel> >*) G__getstructoffset())->operator[]((vector<Barrel,allocator<Barrel> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_210_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Barrel,allocator<Barrel> >::const_reference obj = ((const vector<Barrel,allocator<Barrel> >*) G__getstructoffset())->operator[]((vector<Barrel,allocator<Barrel> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_210_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<Barrel,allocator<Barrel> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<Barrel,allocator<Barrel> >[n];
     } else {
       p = new((void*) gvp) vector<Barrel,allocator<Barrel> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<Barrel,allocator<Barrel> >;
     } else {
       p = new((void*) gvp) vector<Barrel,allocator<Barrel> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_vectorlEBarrelcOallocatorlEBarrelgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_210_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<Barrel,allocator<Barrel> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<Barrel,allocator<Barrel> >((vector<Barrel,allocator<Barrel> >::size_type) G__int(libp->para[0]), *(Barrel*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<Barrel,allocator<Barrel> >((vector<Barrel,allocator<Barrel> >::size_type) G__int(libp->para[0]), *(Barrel*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<Barrel,allocator<Barrel> >((vector<Barrel,allocator<Barrel> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<Barrel,allocator<Barrel> >((vector<Barrel,allocator<Barrel> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_vectorlEBarrelcOallocatorlEBarrelgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_210_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<Barrel,allocator<Barrel> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<Barrel,allocator<Barrel> >(*(vector<Barrel,allocator<Barrel> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<Barrel,allocator<Barrel> >(*(vector<Barrel,allocator<Barrel> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_vectorlEBarrelcOallocatorlEBarrelgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_210_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<Barrel,allocator<Barrel> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<Barrel,allocator<Barrel> >(*((vector<Barrel,allocator<Barrel> >::const_iterator*) G__int(libp->para[0])), *((vector<Barrel,allocator<Barrel> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<Barrel,allocator<Barrel> >(*((vector<Barrel,allocator<Barrel> >::const_iterator*) G__int(libp->para[0])), *((vector<Barrel,allocator<Barrel> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_vectorlEBarrelcOallocatorlEBarrelgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_210_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Barrel,allocator<Barrel> >& obj = ((vector<Barrel,allocator<Barrel> >*) G__getstructoffset())->operator=(*(vector<Barrel,allocator<Barrel> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_210_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Barrel,allocator<Barrel> >*) G__getstructoffset())->reserve((vector<Barrel,allocator<Barrel> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_210_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Barrel& obj = ((vector<Barrel,allocator<Barrel> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_210_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Barrel& obj = ((vector<Barrel,allocator<Barrel> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_210_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Barrel,allocator<Barrel> >*) G__getstructoffset())->push_back(*(Barrel*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_210_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Barrel,allocator<Barrel> >*) G__getstructoffset())->swap(*(vector<Barrel,allocator<Barrel> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_210_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Barrel,allocator<Barrel> >::iterator* pobj;
         vector<Barrel,allocator<Barrel> >::iterator xobj = ((vector<Barrel,allocator<Barrel> >*) G__getstructoffset())->insert(*((vector<Barrel,allocator<Barrel> >::iterator*) G__int(libp->para[0])), *(Barrel*) libp->para[1].ref);
         pobj = new vector<Barrel,allocator<Barrel> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_210_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Barrel,allocator<Barrel> >*) G__getstructoffset())->insert(*((vector<Barrel,allocator<Barrel> >::iterator*) G__int(libp->para[0])), *((vector<Barrel,allocator<Barrel> >::const_iterator*) G__int(libp->para[1]))
, *((vector<Barrel,allocator<Barrel> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_210_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Barrel,allocator<Barrel> >*) G__getstructoffset())->insert(*((vector<Barrel,allocator<Barrel> >::iterator*) G__int(libp->para[0])), (vector<Barrel,allocator<Barrel> >::size_type) G__int(libp->para[1])
, *(Barrel*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_210_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Barrel,allocator<Barrel> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_210_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Barrel,allocator<Barrel> >*) G__getstructoffset())->erase(*((vector<Barrel,allocator<Barrel> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_210_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Barrel,allocator<Barrel> >*) G__getstructoffset())->erase(*((vector<Barrel,allocator<Barrel> >::iterator*) G__int(libp->para[0])), *((vector<Barrel,allocator<Barrel> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_210_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Barrel,allocator<Barrel> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<Barrel,allocator<Barrel> > G__TvectorlEBarrelcOallocatorlEBarrelgRsPgR;
static int G__Dictionary_210_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<Barrel,allocator<Barrel> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<Barrel,allocator<Barrel> >*) (soff+(sizeof(vector<Barrel,allocator<Barrel> >)*i)))->~G__TvectorlEBarrelcOallocatorlEBarrelgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<Barrel,allocator<Barrel> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<Barrel,allocator<Barrel> >*) (soff))->~G__TvectorlEBarrelcOallocatorlEBarrelgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<Annular,allocator<Annular> > */
static int G__Dictionary_214_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Annular,allocator<Annular> >::reference obj = ((vector<Annular,allocator<Annular> >*) G__getstructoffset())->at((vector<Annular,allocator<Annular> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_214_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Annular,allocator<Annular> >::const_reference obj = ((const vector<Annular,allocator<Annular> >*) G__getstructoffset())->at((vector<Annular,allocator<Annular> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_214_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Annular,allocator<Annular> >::iterator* pobj;
         vector<Annular,allocator<Annular> >::iterator xobj = ((vector<Annular,allocator<Annular> >*) G__getstructoffset())->begin();
         pobj = new vector<Annular,allocator<Annular> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_214_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Annular,allocator<Annular> >::iterator* pobj;
         vector<Annular,allocator<Annular> >::iterator xobj = ((vector<Annular,allocator<Annular> >*) G__getstructoffset())->end();
         pobj = new vector<Annular,allocator<Annular> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_214_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Annular,allocator<Annular> >::reverse_iterator* pobj;
         vector<Annular,allocator<Annular> >::reverse_iterator xobj = ((vector<Annular,allocator<Annular> >*) G__getstructoffset())->rbegin();
         pobj = new vector<Annular,allocator<Annular> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_214_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Annular,allocator<Annular> >::reverse_iterator* pobj;
         vector<Annular,allocator<Annular> >::reverse_iterator xobj = ((vector<Annular,allocator<Annular> >*) G__getstructoffset())->rend();
         pobj = new vector<Annular,allocator<Annular> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_214_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<Annular,allocator<Annular> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_214_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<Annular,allocator<Annular> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_214_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Annular,allocator<Annular> >*) G__getstructoffset())->resize((vector<Annular,allocator<Annular> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_214_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Annular,allocator<Annular> >*) G__getstructoffset())->resize((vector<Annular,allocator<Annular> >::size_type) G__int(libp->para[0]), *((Annular*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_214_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<Annular,allocator<Annular> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_214_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<Annular,allocator<Annular> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_214_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Annular,allocator<Annular> >::reference obj = ((vector<Annular,allocator<Annular> >*) G__getstructoffset())->operator[]((vector<Annular,allocator<Annular> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_214_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Annular,allocator<Annular> >::const_reference obj = ((const vector<Annular,allocator<Annular> >*) G__getstructoffset())->operator[]((vector<Annular,allocator<Annular> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_214_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<Annular,allocator<Annular> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<Annular,allocator<Annular> >[n];
     } else {
       p = new((void*) gvp) vector<Annular,allocator<Annular> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<Annular,allocator<Annular> >;
     } else {
       p = new((void*) gvp) vector<Annular,allocator<Annular> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_vectorlEAnnularcOallocatorlEAnnulargRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_214_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<Annular,allocator<Annular> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<Annular,allocator<Annular> >((vector<Annular,allocator<Annular> >::size_type) G__int(libp->para[0]), *(Annular*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<Annular,allocator<Annular> >((vector<Annular,allocator<Annular> >::size_type) G__int(libp->para[0]), *(Annular*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<Annular,allocator<Annular> >((vector<Annular,allocator<Annular> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<Annular,allocator<Annular> >((vector<Annular,allocator<Annular> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_vectorlEAnnularcOallocatorlEAnnulargRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_214_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<Annular,allocator<Annular> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<Annular,allocator<Annular> >(*(vector<Annular,allocator<Annular> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<Annular,allocator<Annular> >(*(vector<Annular,allocator<Annular> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_vectorlEAnnularcOallocatorlEAnnulargRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_214_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<Annular,allocator<Annular> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<Annular,allocator<Annular> >(*((vector<Annular,allocator<Annular> >::const_iterator*) G__int(libp->para[0])), *((vector<Annular,allocator<Annular> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<Annular,allocator<Annular> >(*((vector<Annular,allocator<Annular> >::const_iterator*) G__int(libp->para[0])), *((vector<Annular,allocator<Annular> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_vectorlEAnnularcOallocatorlEAnnulargRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_214_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Annular,allocator<Annular> >& obj = ((vector<Annular,allocator<Annular> >*) G__getstructoffset())->operator=(*(vector<Annular,allocator<Annular> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_214_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Annular,allocator<Annular> >*) G__getstructoffset())->reserve((vector<Annular,allocator<Annular> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_214_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Annular& obj = ((vector<Annular,allocator<Annular> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_214_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Annular& obj = ((vector<Annular,allocator<Annular> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_214_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Annular,allocator<Annular> >*) G__getstructoffset())->push_back(*(Annular*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_214_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Annular,allocator<Annular> >*) G__getstructoffset())->swap(*(vector<Annular,allocator<Annular> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_214_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Annular,allocator<Annular> >::iterator* pobj;
         vector<Annular,allocator<Annular> >::iterator xobj = ((vector<Annular,allocator<Annular> >*) G__getstructoffset())->insert(*((vector<Annular,allocator<Annular> >::iterator*) G__int(libp->para[0])), *(Annular*) libp->para[1].ref);
         pobj = new vector<Annular,allocator<Annular> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_214_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Annular,allocator<Annular> >*) G__getstructoffset())->insert(*((vector<Annular,allocator<Annular> >::iterator*) G__int(libp->para[0])), *((vector<Annular,allocator<Annular> >::const_iterator*) G__int(libp->para[1]))
, *((vector<Annular,allocator<Annular> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_214_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Annular,allocator<Annular> >*) G__getstructoffset())->insert(*((vector<Annular,allocator<Annular> >::iterator*) G__int(libp->para[0])), (vector<Annular,allocator<Annular> >::size_type) G__int(libp->para[1])
, *(Annular*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_214_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Annular,allocator<Annular> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_214_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Annular,allocator<Annular> >*) G__getstructoffset())->erase(*((vector<Annular,allocator<Annular> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_214_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Annular,allocator<Annular> >*) G__getstructoffset())->erase(*((vector<Annular,allocator<Annular> >::iterator*) G__int(libp->para[0])), *((vector<Annular,allocator<Annular> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_214_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Annular,allocator<Annular> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<Annular,allocator<Annular> > G__TvectorlEAnnularcOallocatorlEAnnulargRsPgR;
static int G__Dictionary_214_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<Annular,allocator<Annular> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<Annular,allocator<Annular> >*) (soff+(sizeof(vector<Annular,allocator<Annular> >)*i)))->~G__TvectorlEAnnularcOallocatorlEAnnulargRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<Annular,allocator<Annular> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<Annular,allocator<Annular> >*) (soff))->~G__TvectorlEAnnularcOallocatorlEAnnulargRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<Germanium,allocator<Germanium> > */
static int G__Dictionary_218_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Germanium,allocator<Germanium> >::reference obj = ((vector<Germanium,allocator<Germanium> >*) G__getstructoffset())->at((vector<Germanium,allocator<Germanium> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_218_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Germanium,allocator<Germanium> >::const_reference obj = ((const vector<Germanium,allocator<Germanium> >*) G__getstructoffset())->at((vector<Germanium,allocator<Germanium> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_218_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Germanium,allocator<Germanium> >::iterator* pobj;
         vector<Germanium,allocator<Germanium> >::iterator xobj = ((vector<Germanium,allocator<Germanium> >*) G__getstructoffset())->begin();
         pobj = new vector<Germanium,allocator<Germanium> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_218_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Germanium,allocator<Germanium> >::iterator* pobj;
         vector<Germanium,allocator<Germanium> >::iterator xobj = ((vector<Germanium,allocator<Germanium> >*) G__getstructoffset())->end();
         pobj = new vector<Germanium,allocator<Germanium> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_218_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Germanium,allocator<Germanium> >::reverse_iterator* pobj;
         vector<Germanium,allocator<Germanium> >::reverse_iterator xobj = ((vector<Germanium,allocator<Germanium> >*) G__getstructoffset())->rbegin();
         pobj = new vector<Germanium,allocator<Germanium> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_218_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Germanium,allocator<Germanium> >::reverse_iterator* pobj;
         vector<Germanium,allocator<Germanium> >::reverse_iterator xobj = ((vector<Germanium,allocator<Germanium> >*) G__getstructoffset())->rend();
         pobj = new vector<Germanium,allocator<Germanium> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_218_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<Germanium,allocator<Germanium> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_218_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<Germanium,allocator<Germanium> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_218_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Germanium,allocator<Germanium> >*) G__getstructoffset())->resize((vector<Germanium,allocator<Germanium> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_218_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Germanium,allocator<Germanium> >*) G__getstructoffset())->resize((vector<Germanium,allocator<Germanium> >::size_type) G__int(libp->para[0]), *((Germanium*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_218_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<Germanium,allocator<Germanium> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_218_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<Germanium,allocator<Germanium> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_218_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Germanium,allocator<Germanium> >::reference obj = ((vector<Germanium,allocator<Germanium> >*) G__getstructoffset())->operator[]((vector<Germanium,allocator<Germanium> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_218_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Germanium,allocator<Germanium> >::const_reference obj = ((const vector<Germanium,allocator<Germanium> >*) G__getstructoffset())->operator[]((vector<Germanium,allocator<Germanium> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_218_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<Germanium,allocator<Germanium> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<Germanium,allocator<Germanium> >[n];
     } else {
       p = new((void*) gvp) vector<Germanium,allocator<Germanium> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<Germanium,allocator<Germanium> >;
     } else {
       p = new((void*) gvp) vector<Germanium,allocator<Germanium> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_vectorlEGermaniumcOallocatorlEGermaniumgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_218_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<Germanium,allocator<Germanium> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<Germanium,allocator<Germanium> >((vector<Germanium,allocator<Germanium> >::size_type) G__int(libp->para[0]), *(Germanium*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<Germanium,allocator<Germanium> >((vector<Germanium,allocator<Germanium> >::size_type) G__int(libp->para[0]), *(Germanium*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<Germanium,allocator<Germanium> >((vector<Germanium,allocator<Germanium> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<Germanium,allocator<Germanium> >((vector<Germanium,allocator<Germanium> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_vectorlEGermaniumcOallocatorlEGermaniumgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_218_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<Germanium,allocator<Germanium> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<Germanium,allocator<Germanium> >(*(vector<Germanium,allocator<Germanium> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<Germanium,allocator<Germanium> >(*(vector<Germanium,allocator<Germanium> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_vectorlEGermaniumcOallocatorlEGermaniumgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_218_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<Germanium,allocator<Germanium> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<Germanium,allocator<Germanium> >(*((vector<Germanium,allocator<Germanium> >::const_iterator*) G__int(libp->para[0])), *((vector<Germanium,allocator<Germanium> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<Germanium,allocator<Germanium> >(*((vector<Germanium,allocator<Germanium> >::const_iterator*) G__int(libp->para[0])), *((vector<Germanium,allocator<Germanium> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_vectorlEGermaniumcOallocatorlEGermaniumgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_218_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Germanium,allocator<Germanium> >& obj = ((vector<Germanium,allocator<Germanium> >*) G__getstructoffset())->operator=(*(vector<Germanium,allocator<Germanium> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_218_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Germanium,allocator<Germanium> >*) G__getstructoffset())->reserve((vector<Germanium,allocator<Germanium> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_218_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Germanium& obj = ((vector<Germanium,allocator<Germanium> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_218_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Germanium& obj = ((vector<Germanium,allocator<Germanium> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_218_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Germanium,allocator<Germanium> >*) G__getstructoffset())->push_back(*(Germanium*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_218_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Germanium,allocator<Germanium> >*) G__getstructoffset())->swap(*(vector<Germanium,allocator<Germanium> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_218_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Germanium,allocator<Germanium> >::iterator* pobj;
         vector<Germanium,allocator<Germanium> >::iterator xobj = ((vector<Germanium,allocator<Germanium> >*) G__getstructoffset())->insert(*((vector<Germanium,allocator<Germanium> >::iterator*) G__int(libp->para[0])), *(Germanium*) libp->para[1].ref);
         pobj = new vector<Germanium,allocator<Germanium> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_218_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Germanium,allocator<Germanium> >*) G__getstructoffset())->insert(*((vector<Germanium,allocator<Germanium> >::iterator*) G__int(libp->para[0])), *((vector<Germanium,allocator<Germanium> >::const_iterator*) G__int(libp->para[1]))
, *((vector<Germanium,allocator<Germanium> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_218_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Germanium,allocator<Germanium> >*) G__getstructoffset())->insert(*((vector<Germanium,allocator<Germanium> >::iterator*) G__int(libp->para[0])), (vector<Germanium,allocator<Germanium> >::size_type) G__int(libp->para[1])
, *(Germanium*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_218_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Germanium,allocator<Germanium> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_218_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Germanium,allocator<Germanium> >*) G__getstructoffset())->erase(*((vector<Germanium,allocator<Germanium> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_218_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Germanium,allocator<Germanium> >*) G__getstructoffset())->erase(*((vector<Germanium,allocator<Germanium> >::iterator*) G__int(libp->para[0])), *((vector<Germanium,allocator<Germanium> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_218_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Germanium,allocator<Germanium> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<Germanium,allocator<Germanium> > G__TvectorlEGermaniumcOallocatorlEGermaniumgRsPgR;
static int G__Dictionary_218_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<Germanium,allocator<Germanium> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<Germanium,allocator<Germanium> >*) (soff+(sizeof(vector<Germanium,allocator<Germanium> >)*i)))->~G__TvectorlEGermaniumcOallocatorlEGermaniumgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<Germanium,allocator<Germanium> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<Germanium,allocator<Germanium> >*) (soff))->~G__TvectorlEGermaniumcOallocatorlEGermaniumgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<ParticleMC,allocator<ParticleMC> > */
static int G__Dictionary_222_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<ParticleMC,allocator<ParticleMC> >::reference obj = ((vector<ParticleMC,allocator<ParticleMC> >*) G__getstructoffset())->at((vector<ParticleMC,allocator<ParticleMC> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_222_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<ParticleMC,allocator<ParticleMC> >::const_reference obj = ((const vector<ParticleMC,allocator<ParticleMC> >*) G__getstructoffset())->at((vector<ParticleMC,allocator<ParticleMC> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_222_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<ParticleMC,allocator<ParticleMC> >::iterator* pobj;
         vector<ParticleMC,allocator<ParticleMC> >::iterator xobj = ((vector<ParticleMC,allocator<ParticleMC> >*) G__getstructoffset())->begin();
         pobj = new vector<ParticleMC,allocator<ParticleMC> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_222_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<ParticleMC,allocator<ParticleMC> >::iterator* pobj;
         vector<ParticleMC,allocator<ParticleMC> >::iterator xobj = ((vector<ParticleMC,allocator<ParticleMC> >*) G__getstructoffset())->end();
         pobj = new vector<ParticleMC,allocator<ParticleMC> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_222_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<ParticleMC,allocator<ParticleMC> >::reverse_iterator* pobj;
         vector<ParticleMC,allocator<ParticleMC> >::reverse_iterator xobj = ((vector<ParticleMC,allocator<ParticleMC> >*) G__getstructoffset())->rbegin();
         pobj = new vector<ParticleMC,allocator<ParticleMC> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_222_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<ParticleMC,allocator<ParticleMC> >::reverse_iterator* pobj;
         vector<ParticleMC,allocator<ParticleMC> >::reverse_iterator xobj = ((vector<ParticleMC,allocator<ParticleMC> >*) G__getstructoffset())->rend();
         pobj = new vector<ParticleMC,allocator<ParticleMC> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_222_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<ParticleMC,allocator<ParticleMC> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_222_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<ParticleMC,allocator<ParticleMC> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_222_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<ParticleMC,allocator<ParticleMC> >*) G__getstructoffset())->resize((vector<ParticleMC,allocator<ParticleMC> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_222_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<ParticleMC,allocator<ParticleMC> >*) G__getstructoffset())->resize((vector<ParticleMC,allocator<ParticleMC> >::size_type) G__int(libp->para[0]), *((ParticleMC*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_222_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<ParticleMC,allocator<ParticleMC> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_222_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<ParticleMC,allocator<ParticleMC> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_222_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<ParticleMC,allocator<ParticleMC> >::reference obj = ((vector<ParticleMC,allocator<ParticleMC> >*) G__getstructoffset())->operator[]((vector<ParticleMC,allocator<ParticleMC> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_222_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<ParticleMC,allocator<ParticleMC> >::const_reference obj = ((const vector<ParticleMC,allocator<ParticleMC> >*) G__getstructoffset())->operator[]((vector<ParticleMC,allocator<ParticleMC> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_222_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<ParticleMC,allocator<ParticleMC> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<ParticleMC,allocator<ParticleMC> >[n];
     } else {
       p = new((void*) gvp) vector<ParticleMC,allocator<ParticleMC> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<ParticleMC,allocator<ParticleMC> >;
     } else {
       p = new((void*) gvp) vector<ParticleMC,allocator<ParticleMC> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_vectorlEParticleMCcOallocatorlEParticleMCgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_222_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<ParticleMC,allocator<ParticleMC> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<ParticleMC,allocator<ParticleMC> >((vector<ParticleMC,allocator<ParticleMC> >::size_type) G__int(libp->para[0]), *(ParticleMC*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<ParticleMC,allocator<ParticleMC> >((vector<ParticleMC,allocator<ParticleMC> >::size_type) G__int(libp->para[0]), *(ParticleMC*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<ParticleMC,allocator<ParticleMC> >((vector<ParticleMC,allocator<ParticleMC> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<ParticleMC,allocator<ParticleMC> >((vector<ParticleMC,allocator<ParticleMC> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_vectorlEParticleMCcOallocatorlEParticleMCgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_222_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<ParticleMC,allocator<ParticleMC> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<ParticleMC,allocator<ParticleMC> >(*(vector<ParticleMC,allocator<ParticleMC> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<ParticleMC,allocator<ParticleMC> >(*(vector<ParticleMC,allocator<ParticleMC> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_vectorlEParticleMCcOallocatorlEParticleMCgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_222_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<ParticleMC,allocator<ParticleMC> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<ParticleMC,allocator<ParticleMC> >(*((vector<ParticleMC,allocator<ParticleMC> >::const_iterator*) G__int(libp->para[0])), *((vector<ParticleMC,allocator<ParticleMC> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<ParticleMC,allocator<ParticleMC> >(*((vector<ParticleMC,allocator<ParticleMC> >::const_iterator*) G__int(libp->para[0])), *((vector<ParticleMC,allocator<ParticleMC> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_vectorlEParticleMCcOallocatorlEParticleMCgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_222_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<ParticleMC,allocator<ParticleMC> >& obj = ((vector<ParticleMC,allocator<ParticleMC> >*) G__getstructoffset())->operator=(*(vector<ParticleMC,allocator<ParticleMC> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_222_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<ParticleMC,allocator<ParticleMC> >*) G__getstructoffset())->reserve((vector<ParticleMC,allocator<ParticleMC> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_222_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ParticleMC& obj = ((vector<ParticleMC,allocator<ParticleMC> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_222_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ParticleMC& obj = ((vector<ParticleMC,allocator<ParticleMC> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_222_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<ParticleMC,allocator<ParticleMC> >*) G__getstructoffset())->push_back(*(ParticleMC*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_222_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<ParticleMC,allocator<ParticleMC> >*) G__getstructoffset())->swap(*(vector<ParticleMC,allocator<ParticleMC> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_222_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<ParticleMC,allocator<ParticleMC> >::iterator* pobj;
         vector<ParticleMC,allocator<ParticleMC> >::iterator xobj = ((vector<ParticleMC,allocator<ParticleMC> >*) G__getstructoffset())->insert(*((vector<ParticleMC,allocator<ParticleMC> >::iterator*) G__int(libp->para[0])), *(ParticleMC*) libp->para[1].ref);
         pobj = new vector<ParticleMC,allocator<ParticleMC> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_222_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<ParticleMC,allocator<ParticleMC> >*) G__getstructoffset())->insert(*((vector<ParticleMC,allocator<ParticleMC> >::iterator*) G__int(libp->para[0])), *((vector<ParticleMC,allocator<ParticleMC> >::const_iterator*) G__int(libp->para[1]))
, *((vector<ParticleMC,allocator<ParticleMC> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_222_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<ParticleMC,allocator<ParticleMC> >*) G__getstructoffset())->insert(*((vector<ParticleMC,allocator<ParticleMC> >::iterator*) G__int(libp->para[0])), (vector<ParticleMC,allocator<ParticleMC> >::size_type) G__int(libp->para[1])
, *(ParticleMC*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_222_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<ParticleMC,allocator<ParticleMC> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_222_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<ParticleMC,allocator<ParticleMC> >*) G__getstructoffset())->erase(*((vector<ParticleMC,allocator<ParticleMC> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_222_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<ParticleMC,allocator<ParticleMC> >*) G__getstructoffset())->erase(*((vector<ParticleMC,allocator<ParticleMC> >::iterator*) G__int(libp->para[0])), *((vector<ParticleMC,allocator<ParticleMC> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_222_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<ParticleMC,allocator<ParticleMC> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<ParticleMC,allocator<ParticleMC> > G__TvectorlEParticleMCcOallocatorlEParticleMCgRsPgR;
static int G__Dictionary_222_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<ParticleMC,allocator<ParticleMC> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<ParticleMC,allocator<ParticleMC> >*) (soff+(sizeof(vector<ParticleMC,allocator<ParticleMC> >)*i)))->~G__TvectorlEParticleMCcOallocatorlEParticleMCgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<ParticleMC,allocator<ParticleMC> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<ParticleMC,allocator<ParticleMC> >*) (soff))->~G__TvectorlEParticleMCcOallocatorlEParticleMCgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TRexSettings */

/* Barrel */

/* Annular */

/* Crystal */

/* Germanium */

/* vector<Crystal,allocator<Crystal> > */

/* ParticleMC */

/* vector<Barrel,allocator<Barrel> > */

/* vector<Annular,allocator<Annular> > */

/* vector<Germanium,allocator<Germanium> > */

/* vector<ParticleMC,allocator<ParticleMC> > */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncDictionary {
 public:
  G__Sizep2memfuncDictionary(): p(&G__Sizep2memfuncDictionary::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncDictionary::*p)();
};

size_t G__get_sizep2memfuncDictionary()
{
  G__Sizep2memfuncDictionary a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceDictionary() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictionaryLN_TRexSettings))) {
     TRexSettings *G__Lderived;
     G__Lderived=(TRexSettings*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictionaryLN_TRexSettings),G__get_linked_tagnum(&G__DictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictionaryLN_Barrel))) {
     Barrel *G__Lderived;
     G__Lderived=(Barrel*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictionaryLN_Barrel),G__get_linked_tagnum(&G__DictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictionaryLN_Annular))) {
     Annular *G__Lderived;
     G__Lderived=(Annular*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictionaryLN_Annular),G__get_linked_tagnum(&G__DictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictionaryLN_Crystal))) {
     Crystal *G__Lderived;
     G__Lderived=(Crystal*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictionaryLN_Crystal),G__get_linked_tagnum(&G__DictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictionaryLN_Germanium))) {
     Germanium *G__Lderived;
     G__Lderived=(Germanium*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictionaryLN_Germanium),G__get_linked_tagnum(&G__DictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictionaryLN_ParticleMC))) {
     ParticleMC *G__Lderived;
     G__Lderived=(ParticleMC*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictionaryLN_ParticleMC),G__get_linked_tagnum(&G__DictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableDictionary() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__DictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__DictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__DictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__DictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictionaryLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictionaryLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__DictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__DictionaryLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictionaryLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictionaryLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("MyTime_t",100,-1,0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Crystal>",117,G__get_linked_tagnum(&G__DictionaryLN_vectorlECrystalcOallocatorlECrystalgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictionaryLN_Crystal),0,G__get_linked_tagnum(&G__DictionaryLN_vectorlECrystalcOallocatorlECrystalgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DictionaryLN_Crystal),0,G__get_linked_tagnum(&G__DictionaryLN_vectorlECrystalcOallocatorlECrystalgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DictionaryLN_Crystal),256,G__get_linked_tagnum(&G__DictionaryLN_vectorlECrystalcOallocatorlECrystalgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DictionaryLN_Crystal),1,G__get_linked_tagnum(&G__DictionaryLN_vectorlECrystalcOallocatorlECrystalgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DictionaryLN_Crystal),257,G__get_linked_tagnum(&G__DictionaryLN_vectorlECrystalcOallocatorlECrystalgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlECrystalcOallocatorlECrystalgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlECrystalcOallocatorlECrystalgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictionaryLN_vectorlECrystalcOallocatorlECrystalgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictionaryLN_vectorlECrystalcOallocatorlECrystalgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictionaryLN_reverse_iteratorlEvectorlECrystalcOallocatorlECrystalgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictionaryLN_vectorlECrystalcOallocatorlECrystalgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictionaryLN_reverse_iteratorlEvectorlECrystalcOallocatorlECrystalgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictionaryLN_vectorlECrystalcOallocatorlECrystalgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictionaryLN_reverse_iteratorlEvectorlECrystalcOallocatorlECrystalgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictionaryLN_vectorlECrystalcOallocatorlECrystalgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DictionaryLN_reverse_iteratorlEvectorlECrystalcOallocatorlECrystalgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictionaryLN_vectorlECrystalcOallocatorlECrystalgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Barrel>",117,G__get_linked_tagnum(&G__DictionaryLN_vectorlEBarrelcOallocatorlEBarrelgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictionaryLN_Barrel),0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEBarrelcOallocatorlEBarrelgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DictionaryLN_Barrel),0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEBarrelcOallocatorlEBarrelgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DictionaryLN_Barrel),256,G__get_linked_tagnum(&G__DictionaryLN_vectorlEBarrelcOallocatorlEBarrelgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DictionaryLN_Barrel),1,G__get_linked_tagnum(&G__DictionaryLN_vectorlEBarrelcOallocatorlEBarrelgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DictionaryLN_Barrel),257,G__get_linked_tagnum(&G__DictionaryLN_vectorlEBarrelcOallocatorlEBarrelgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEBarrelcOallocatorlEBarrelgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEBarrelcOallocatorlEBarrelgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictionaryLN_vectorlEBarrelcOallocatorlEBarrelgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictionaryLN_vectorlEBarrelcOallocatorlEBarrelgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictionaryLN_reverse_iteratorlEvectorlEBarrelcOallocatorlEBarrelgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEBarrelcOallocatorlEBarrelgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictionaryLN_reverse_iteratorlEvectorlEBarrelcOallocatorlEBarrelgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEBarrelcOallocatorlEBarrelgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictionaryLN_reverse_iteratorlEvectorlEBarrelcOallocatorlEBarrelgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEBarrelcOallocatorlEBarrelgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DictionaryLN_reverse_iteratorlEvectorlEBarrelcOallocatorlEBarrelgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEBarrelcOallocatorlEBarrelgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Annular>",117,G__get_linked_tagnum(&G__DictionaryLN_vectorlEAnnularcOallocatorlEAnnulargRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictionaryLN_Annular),0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEAnnularcOallocatorlEAnnulargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DictionaryLN_Annular),0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEAnnularcOallocatorlEAnnulargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DictionaryLN_Annular),256,G__get_linked_tagnum(&G__DictionaryLN_vectorlEAnnularcOallocatorlEAnnulargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DictionaryLN_Annular),1,G__get_linked_tagnum(&G__DictionaryLN_vectorlEAnnularcOallocatorlEAnnulargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DictionaryLN_Annular),257,G__get_linked_tagnum(&G__DictionaryLN_vectorlEAnnularcOallocatorlEAnnulargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEAnnularcOallocatorlEAnnulargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEAnnularcOallocatorlEAnnulargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictionaryLN_vectorlEAnnularcOallocatorlEAnnulargRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictionaryLN_vectorlEAnnularcOallocatorlEAnnulargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictionaryLN_reverse_iteratorlEvectorlEAnnularcOallocatorlEAnnulargRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEAnnularcOallocatorlEAnnulargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictionaryLN_reverse_iteratorlEvectorlEAnnularcOallocatorlEAnnulargRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEAnnularcOallocatorlEAnnulargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictionaryLN_reverse_iteratorlEvectorlEAnnularcOallocatorlEAnnulargRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEAnnularcOallocatorlEAnnulargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DictionaryLN_reverse_iteratorlEvectorlEAnnularcOallocatorlEAnnulargRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEAnnularcOallocatorlEAnnulargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Germanium>",117,G__get_linked_tagnum(&G__DictionaryLN_vectorlEGermaniumcOallocatorlEGermaniumgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictionaryLN_Germanium),0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEGermaniumcOallocatorlEGermaniumgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DictionaryLN_Germanium),0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEGermaniumcOallocatorlEGermaniumgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DictionaryLN_Germanium),256,G__get_linked_tagnum(&G__DictionaryLN_vectorlEGermaniumcOallocatorlEGermaniumgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DictionaryLN_Germanium),1,G__get_linked_tagnum(&G__DictionaryLN_vectorlEGermaniumcOallocatorlEGermaniumgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DictionaryLN_Germanium),257,G__get_linked_tagnum(&G__DictionaryLN_vectorlEGermaniumcOallocatorlEGermaniumgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEGermaniumcOallocatorlEGermaniumgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEGermaniumcOallocatorlEGermaniumgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictionaryLN_vectorlEGermaniumcOallocatorlEGermaniumgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictionaryLN_vectorlEGermaniumcOallocatorlEGermaniumgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictionaryLN_reverse_iteratorlEvectorlEGermaniumcOallocatorlEGermaniumgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEGermaniumcOallocatorlEGermaniumgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictionaryLN_reverse_iteratorlEvectorlEGermaniumcOallocatorlEGermaniumgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEGermaniumcOallocatorlEGermaniumgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictionaryLN_reverse_iteratorlEvectorlEGermaniumcOallocatorlEGermaniumgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEGermaniumcOallocatorlEGermaniumgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DictionaryLN_reverse_iteratorlEvectorlEGermaniumcOallocatorlEGermaniumgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEGermaniumcOallocatorlEGermaniumgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ParticleMC>",117,G__get_linked_tagnum(&G__DictionaryLN_vectorlEParticleMCcOallocatorlEParticleMCgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictionaryLN_ParticleMC),0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEParticleMCcOallocatorlEParticleMCgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DictionaryLN_ParticleMC),0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEParticleMCcOallocatorlEParticleMCgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DictionaryLN_ParticleMC),256,G__get_linked_tagnum(&G__DictionaryLN_vectorlEParticleMCcOallocatorlEParticleMCgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DictionaryLN_ParticleMC),1,G__get_linked_tagnum(&G__DictionaryLN_vectorlEParticleMCcOallocatorlEParticleMCgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DictionaryLN_ParticleMC),257,G__get_linked_tagnum(&G__DictionaryLN_vectorlEParticleMCcOallocatorlEParticleMCgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEParticleMCcOallocatorlEParticleMCgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEParticleMCcOallocatorlEParticleMCgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictionaryLN_vectorlEParticleMCcOallocatorlEParticleMCgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictionaryLN_vectorlEParticleMCcOallocatorlEParticleMCgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictionaryLN_reverse_iteratorlEvectorlEParticleMCcOallocatorlEParticleMCgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEParticleMCcOallocatorlEParticleMCgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictionaryLN_reverse_iteratorlEvectorlEParticleMCcOallocatorlEParticleMCgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEParticleMCcOallocatorlEParticleMCgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictionaryLN_reverse_iteratorlEvectorlEParticleMCcOallocatorlEParticleMCgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEParticleMCcOallocatorlEParticleMCgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DictionaryLN_reverse_iteratorlEvectorlEParticleMCcOallocatorlEParticleMCgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEParticleMCcOallocatorlEParticleMCgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TRexSettings */
static void G__setup_memvarTRexSettings(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictionaryLN_TRexSettings));
   { TRexSettings *p; p=(TRexSettings*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictionaryLN_TRexSettings),-1,-2,4,"fSettings=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_string),-1,-1,4,"fSettingsFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_string),-1,-1,4,"fPrimaryGenerator=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fSimulateEjectiles=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fSimulateGammas=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fIncludeEnergyResolution=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fIncludeVacuumChamber=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_string),-1,-1,4,"fVacuumChamberType=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_string),-1,-1,4,"fVacuumChamberGas=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fVacuumChamberGasPressure=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fTestSourceEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fBeamEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fBeamWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fThetaCmMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fProjectileZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fProjectileA=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fTargetZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fTargetA=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fEjectileZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fEjectileA=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fRecoilZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fRecoilA=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_string),-1,-1,4,"fProjectileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_string),-1,-1,4,"fTargetName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_string),-1,-1,4,"fEjectileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_string),-1,-1,4,"fRecoilName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_string),-1,-1,4,"fTargetMaterialName=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fTargetAtomicRatio=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fTransferOrCoulexProbability=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_string),-1,-1,4,"fLevelFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_string),-1,-1,4,"fAngularDistributionFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_string),-1,-1,4,"fMassFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_string),-1,-1,4,"fCrossSectionFile=",0,"Leila");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fAlphaSourceDiameter=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fAlphaSourceThickness=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fTargetDiameter=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fTargetThickness=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fGasTargetLength=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fTargetPressure=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fTargetMaterialDensity=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fColours=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fWriteAllEvents=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fVisualizationCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fConstructPCB=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fResistiveStrips=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fUseFCDdeltaE=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fNbOfFCDdeltaESingles=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fFCDdeltaESinglePosX=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fFCDdeltaESinglePosY=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fFCDdeltaESinglePosZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fFCDdeltaESingleStartAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fFCDdeltaESingleThickness=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fFCDdeltaESingleDeadLayer=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fFCDdeltaESingleInnerRadius=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fFCDdeltaESingleOuterRadius=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fFCDdeltaESingleRingWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fFCDdeltaESingleSpanningAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fFCDdeltaESingleStripWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fFCDTransferTo16Strips=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fFCDdeltaESingleEnergyResolution=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fFCDdeltaESingleFoilThickness=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fUseFCDErest=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fNbOfFCDErestSingles=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fFCDErestSinglePosX=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fFCDErestSinglePosY=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fFCDErestSinglePosZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fFCDErestSingleStartAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fFCDErestSingleThickness=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fFCDErestSingleDeadLayer=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fFCDErestSingleInnerRadius=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fFCDErestSingleOuterRadius=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fFCDErestSingleSpanningAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fFCDErestSingleEnergyResolution=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fUseBCDdeltaE=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fNbOfBCDdeltaESingles=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fBCDdeltaESinglePosX=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fBCDdeltaESinglePosY=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fBCDdeltaESinglePosZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fBCDdeltaESingleStartAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fBCDdeltaESingleThickness=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fBCDdeltaESingleDeadLayer=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fBCDdeltaESingleInnerRadius=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fBCDdeltaESingleOuterRadius=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fBCDdeltaESingleRingWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fBCDdeltaESingleSpanningAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fBCDdeltaESingleStripWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fBCDTransferTo16Strips=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fBCDdeltaESingleEnergyResolution=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fBCDdeltaESingleFoilThickness=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fUseBCDErest=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fNbOfBCDErestSingles=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fBCDErestSinglePosX=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fBCDErestSinglePosY=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fBCDErestSinglePosZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fBCDErestSingleStartAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fBCDErestSingleThickness=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fBCDErestSingleDeadLayer=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fBCDErestSingleInnerRadius=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fBCDErestSingleOuterRadius=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fBCDErestSingleSpanningAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fBCDErestSingleEnergyResolution=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fUseFBarrelDeltaE=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fNbOfFBarrelDeltaESingles=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fFBarrelDeltaESinglePosZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fFBarrelDeltaESingleDistanceToBeam=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fFBarrelDeltaESingleStartAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fFBarrelDeltaESingleThickness=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fFBarrelDeltaESingleDeadLayer=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fFBarrelDeltaESingleLengthX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fFBarrelDeltaESingleLengthY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fFBarrelDeltaESingleStripWidthPar=",0,"added bei Leila");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fFBarrelDeltaESingleStripWidthPer=",0,"added bei Leila");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fFBarrelDeltaESingleEnergyResolution=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fFBarrelDeltaESingleFoilThickness=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fUseFBarrelErest=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fNbOfFBarrelErestSingles=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fFBarrelErestSinglePosZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fFBarrelErestSingleDistanceToBeam=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fFBarrelErestSingleStartAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fFBarrelErestSingleThickness=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fFBarrelErestSingleDeadLayer=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fFBarrelErestSingleLengthX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fFBarrelErestSingleLengthY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fFBarrelErestSingleEnergyResolution=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fUseSecondFBarrelDeltaE=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fNbOfSecondFBarrelDeltaESingles=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fSecondFBarrelDeltaESinglePosZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fSecondFBarrelDeltaESingleDistanceToBeam=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fSecondFBarrelDeltaESingleStartAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fSecondFBarrelDeltaESingleThickness=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fSecondFBarrelDeltaESingleDeadLayer=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fSecondFBarrelDeltaESingleLengthX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fSecondFBarrelDeltaESingleLengthY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fSecondFBarrelDeltaESingleStripWidthPar=",0,"added bei Leila");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fSecondFBarrelDeltaESingleStripWidthPer=",0,"added bei Leila");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fSecondFBarrelDeltaESingleEnergyResolution=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fSecondFBarrelDeltaESingleFoilThickness=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fUseMBarrelDeltaE=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fNbOfMBarrelDeltaESingles=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fMBarrelDeltaESinglePosZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fMBarrelDeltaESingleDistanceToBeam=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fMBarrelDeltaESingleStartAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fMBarrelDeltaESingleThickness=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fMBarrelDeltaESingleDeadLayer=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fMBarrelDeltaESingleLengthX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fMBarrelDeltaESingleLengthY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fMBarrelDeltaESingleStripWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fMBarrelDeltaESingleEnergyResolution=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fMBarrelDeltaESingleFoilThickness=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fUseMBarrelErest=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fNbOfMBarrelErestSingles=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fMBarrelErestSinglePosZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fMBarrelErestSingleDistanceToBeam=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fMBarrelErestSingleStartAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fMBarrelErestSingleThickness=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fMBarrelErestSingleDeadLayer=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fMBarrelErestSingleLengthX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fMBarrelErestSingleLengthY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fMBarrelErestSingleEnergyResolution=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fUseBBarrelDeltaE=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fNbOfBBarrelDeltaESingles=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fBBarrelDeltaESinglePosZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fBBarrelDeltaESingleDistanceToBeam=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fBBarrelDeltaESingleStartAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fBBarrelDeltaESingleThickness=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fBBarrelDeltaESingleDeadLayer=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fBBarrelDeltaESingleLengthX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fBBarrelDeltaESingleLengthY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fBBarrelDeltaESingleStripWidthPar=",0,"added bei Leila");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fBBarrelDeltaESingleStripWidthPer=",0,"added bei Leila ");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fBBarrelDeltaESingleEnergyResolution=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fBBarrelDeltaESingleFoilThickness=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fUseBBarrelErest=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fNbOfBBarrelErestSingles=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fBBarrelErestSinglePosZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fBBarrelErestSingleDistanceToBeam=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fBBarrelErestSingleStartAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fBBarrelErestSingleThickness=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fBBarrelErestSingleDeadLayer=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fBBarrelErestSingleLengthX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fBBarrelErestSingleLengthY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fBBarrelErestSingleEnergyResolution=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fUseSecondBBarrelDeltaE=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fNbOfSecondBBarrelDeltaESingles=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fSecondBBarrelDeltaESinglePosZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fSecondBBarrelDeltaESingleDistanceToBeam=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fSecondBBarrelDeltaESingleStartAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fSecondBBarrelDeltaESingleThickness=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fSecondBBarrelDeltaESingleDeadLayer=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fSecondBBarrelDeltaESingleLengthX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fSecondBBarrelDeltaESingleLengthY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fSecondBBarrelDeltaESingleStripWidthPar=",0,"added bei Leila");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fSecondBBarrelDeltaESingleStripWidthPer=",0,"added bei Leila");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fSecondBBarrelDeltaESingleEnergyResolution=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fSecondBBarrelDeltaESingleFoilThickness=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fUseFTrapezoidDeltaE=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fNbOfFTrapezoidDeltaESingles=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fFTrapezoidDeltaESinglePosZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fFTrapezoidDeltaESingleInnerRadius=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fFTrapezoidDeltaESingleOuterRadius=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fFTrapezoidDeltaESingleDeltaZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fFTrapezoidDeltaESingleThickness=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fFTrapezoidDeltaESingleStartAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fFTrapezoidDeltaESingleNbOfRings=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fFTrapezoidDeltaESingleNbOfStrips=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fFTrapezoidDeltaESingleEnergyResolution=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fFTrapezoidDeltaESingleFoilThickness=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fUseFTrapezoidErest=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fNbOfFTrapezoidErestSingles=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fFTrapezoidErestSinglePosZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fFTrapezoidErestSingleInnerRadius=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fFTrapezoidErestSingleOuterRadius=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fFTrapezoidErestSingleDeltaZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fFTrapezoidErestSingleThickness=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fFTrapezoidErestSingleStartAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fFTrapezoidErestSingleEnergyResolution=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fUseBTrapezoidDeltaE=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fNbOfBTrapezoidDeltaESingles=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fBTrapezoidDeltaESinglePosZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fBTrapezoidDeltaESingleInnerRadius=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fBTrapezoidDeltaESingleOuterRadius=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fBTrapezoidDeltaESingleDeltaZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fBTrapezoidDeltaESingleThickness=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fBTrapezoidDeltaESingleStartAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fBTrapezoidDeltaESingleNbOfRings=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fBTrapezoidDeltaESingleNbOfStrips=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fBTrapezoidDeltaESingleEnergyResolution=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fBTrapezoidDeltaESingleFoilThickness=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fUseBTrapezoidErest=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fNbOfBTrapezoidErestSingles=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fBTrapezoidErestSinglePosZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fBTrapezoidErestSingleInnerRadius=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fBTrapezoidErestSingleOuterRadius=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fBTrapezoidErestSingleDeltaZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fBTrapezoidErestSingleThickness=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fBTrapezoidErestSingleStartAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fBTrapezoidErestSingleEnergyResolution=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fNbOfMiniballClusters=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<std::string>"),-1,4,"fMiniballClusterNames=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"fMiniballClusterTypes=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fMiniballClusterRho=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fMiniballClusterTheta=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fMiniballClusterPhi=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fMiniballClusterSpin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fMiniballEnergyResolutionCore=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fMiniballEnergyResolutionSegment=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictionaryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Barrel */
static void G__setup_memvarBarrel(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictionaryLN_Barrel));
   { Barrel *p; p=(Barrel*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fID=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fRear=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fEdet=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fMult=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"fNeighbor=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,2,"fStripNr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"fStripPos=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("MyTime_t"),-1,2,"fTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictionaryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Annular */
static void G__setup_memvarAnnular(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictionaryLN_Annular));
   { Annular *p; p=(Annular*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,2,"fStripNr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"fStripEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,2,"fRingNr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"fRingEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fEdet=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fMult=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("MyTime_t"),-1,2,"fTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictionaryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Crystal */
static void G__setup_memvarCrystal(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictionaryLN_Crystal));
   { Crystal *p; p=(Crystal*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fCryID=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fCoreEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"fSegEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,2,"fSegID=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("MyTime_t"),-1,2,"fTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictionaryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Germanium */
static void G__setup_memvarGermanium(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictionaryLN_Germanium));
   { Germanium *p; p=(Germanium*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlECrystalcOallocatorlECrystalgRsPgR),G__defined_typename("vector<Crystal>"),-1,2,"fCrystal=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"positionWorld[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"theta=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fClusterID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fStrange=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"thetaIn=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"fSegEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fCryID=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("MyTime_t"),-1,2,"fTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictionaryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<Crystal,allocator<Crystal> > */
static void G__setup_memvarvectorlECrystalcOallocatorlECrystalgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictionaryLN_vectorlECrystalcOallocatorlECrystalgRsPgR));
   { vector<Crystal,allocator<Crystal> > *p; p=(vector<Crystal,allocator<Crystal> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ParticleMC */
static void G__setup_memvarParticleMC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictionaryLN_ParticleMC));
   { ParticleMC *p; p=(ParticleMC*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,2,"fStripNr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"fStripEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,2,"fStripA=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,2,"fStripZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,2,"fStripTrackID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"fStripTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"fPosGlobalX=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"fPosGlobalY=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"fPosGlobalZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,2,"fStripStopped=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,2,"fRingNr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"fRingEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,2,"fRingA=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,2,"fRingZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,2,"fRingTrackID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"fRingTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,2,"fRingStopped=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fA=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fTrackID=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fStopped=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fResKinEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fMult=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fRear=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fEdet=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictionaryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<Barrel,allocator<Barrel> > */
static void G__setup_memvarvectorlEBarrelcOallocatorlEBarrelgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictionaryLN_vectorlEBarrelcOallocatorlEBarrelgRsPgR));
   { vector<Barrel,allocator<Barrel> > *p; p=(vector<Barrel,allocator<Barrel> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<Annular,allocator<Annular> > */
static void G__setup_memvarvectorlEAnnularcOallocatorlEAnnulargRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictionaryLN_vectorlEAnnularcOallocatorlEAnnulargRsPgR));
   { vector<Annular,allocator<Annular> > *p; p=(vector<Annular,allocator<Annular> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<Germanium,allocator<Germanium> > */
static void G__setup_memvarvectorlEGermaniumcOallocatorlEGermaniumgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictionaryLN_vectorlEGermaniumcOallocatorlEGermaniumgRsPgR));
   { vector<Germanium,allocator<Germanium> > *p; p=(vector<Germanium,allocator<Germanium> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<ParticleMC,allocator<ParticleMC> > */
static void G__setup_memvarvectorlEParticleMCcOallocatorlEParticleMCgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictionaryLN_vectorlEParticleMCcOallocatorlEParticleMCgRsPgR));
   { vector<ParticleMC,allocator<ParticleMC> > *p; p=(vector<ParticleMC,allocator<ParticleMC> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarDictionary() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTRexSettings(void) {
   /* TRexSettings */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictionaryLN_TRexSettings));
   G__memfunc_setup("Get",288,G__Dictionary_191_0_1, 85, G__get_linked_tagnum(&G__DictionaryLN_TRexSettings), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TRexSettings* (*)())(&TRexSettings::Get) ), 0);
   G__memfunc_setup("SetSettingsFile",1533,G__Dictionary_191_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - settingsFile", "SetSettingsFile", (void*) NULL, 0);
   G__memfunc_setup("ReadSettingsFile",1613,G__Dictionary_191_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - settingsFile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSettingsFile",1521,G__Dictionary_191_0_4, 117, G__get_linked_tagnum(&G__DictionaryLN_string), -1, 0, 0, 1, 1, 0, "", "GetSettingsFile", (void*) NULL, 0);
   G__memfunc_setup("GetPrimaryGenerator",1963,G__Dictionary_191_0_5, 117, G__get_linked_tagnum(&G__DictionaryLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SimulateEjectiles",1756,G__Dictionary_191_0_6, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SimulateGammas",1434,G__Dictionary_191_0_7, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IncludeEnergyResolution",2402,G__Dictionary_191_0_8, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IncludeVacuumChamber",2023,G__Dictionary_191_0_9, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVacuumChamberType",2021,G__Dictionary_191_0_10, 117, G__get_linked_tagnum(&G__DictionaryLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVacuumChamberGas",1886,G__Dictionary_191_0_11, 117, G__get_linked_tagnum(&G__DictionaryLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVacuumChamberGasPressure",2743,G__Dictionary_191_0_12, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTestSourceEnergy",1947,G__Dictionary_191_0_14, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBeamEnergy",1279,G__Dictionary_191_0_15, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBeamWidth",1173,G__Dictionary_191_0_16, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetThetaCmMin",1258,G__Dictionary_191_0_17, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProjectileZ",1419,G__Dictionary_191_0_18, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProjectileA",1394,G__Dictionary_191_0_19, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTargetZ",993,G__Dictionary_191_0_20, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTargetA",968,G__Dictionary_191_0_21, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEjectileZ",1183,G__Dictionary_191_0_22, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEjectileA",1158,G__Dictionary_191_0_23, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRecoilZ",984,G__Dictionary_191_0_24, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRecoilA",959,G__Dictionary_191_0_25, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProjectileName",1714,G__Dictionary_191_0_26, 117, G__get_linked_tagnum(&G__DictionaryLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTargetName",1288,G__Dictionary_191_0_27, 117, G__get_linked_tagnum(&G__DictionaryLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEjectileName",1478,G__Dictionary_191_0_28, 117, G__get_linked_tagnum(&G__DictionaryLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRecoilName",1279,G__Dictionary_191_0_29, 117, G__get_linked_tagnum(&G__DictionaryLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTargetMaterialName",2103,G__Dictionary_191_0_30, 117, G__get_linked_tagnum(&G__DictionaryLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTargetAtomicRatio",2019,G__Dictionary_191_0_31, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTransferOrCoulexProbability",3095,G__Dictionary_191_0_32, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLevelFile",1176,G__Dictionary_191_0_33, 117, G__get_linked_tagnum(&G__DictionaryLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAngularDistributionFile",2666,G__Dictionary_191_0_34, 117, G__get_linked_tagnum(&G__DictionaryLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMassFile",1076,G__Dictionary_191_0_35, 117, G__get_linked_tagnum(&G__DictionaryLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCrossSectionFile",1919,G__Dictionary_191_0_36, 117, G__get_linked_tagnum(&G__DictionaryLN_string), -1, 0, 0, 1, 1, 0, "", "Leila", (void*) NULL, 0);
   G__memfunc_setup("GetAlphaSourceDiameter",2210,G__Dictionary_191_0_37, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAlphaSourceThickness",2339,G__Dictionary_191_0_38, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTargetDiameter",1714,G__Dictionary_191_0_39, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTargetThickness",1843,G__Dictionary_191_0_40, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTargetThicknessMgPerCm2",2544,G__Dictionary_191_0_41, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGasTargetLength",1796,G__Dictionary_191_0_42, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTargetPressure",1760,G__Dictionary_191_0_43, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTargetPhysicalLength",2342,G__Dictionary_191_0_44, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTargetMaterialDensity",2454,G__Dictionary_191_0_45, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTargetMaterialDensity",2466,G__Dictionary_191_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - density", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTargetThickness",1855,G__Dictionary_191_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - thickness", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Colours",743,G__Dictionary_191_0_48, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("VisualizationCut",1694,G__Dictionary_191_0_49, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("VisualizationCut",1694,G__Dictionary_191_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - cut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteAllEvents",1433,G__Dictionary_191_0_51, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructPCB",1178,G__Dictionary_191_0_52, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResistiveStrips",1603,G__Dictionary_191_0_53, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseFCDdeltaE",1097,G__Dictionary_191_0_54, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNbOfFCDdeltaESingles",2166,G__Dictionary_191_0_55, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFCDdeltaESinglePosX",2088,G__Dictionary_191_0_56, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFCDdeltaESinglePosY",2089,G__Dictionary_191_0_57, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFCDdeltaESinglePosZ",2090,G__Dictionary_191_0_58, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFCDdeltaESingleStartAngle",2707,G__Dictionary_191_0_59, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFCDdeltaESingleThickness",2634,G__Dictionary_191_0_60, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFCDdeltaESingleDeadLayer",2569,G__Dictionary_191_0_61, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFCDdeltaESingleInnerRadius",2818,G__Dictionary_191_0_62, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFCDdeltaESingleOuterRadius",2837,G__Dictionary_191_0_63, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFCDdeltaESingleRingWidth",2606,G__Dictionary_191_0_64, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFCDdeltaESingleSpanningAngle",3011,G__Dictionary_191_0_65, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFCDdeltaESingleStripWidth",2736,G__Dictionary_191_0_66, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FCDTransferTo16Strips",1985,G__Dictionary_191_0_67, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFCDdeltaESingleEnergyResolution",3388,G__Dictionary_191_0_68, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFCDdeltaESingleFoilThickness",3028,G__Dictionary_191_0_69, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseFCDErest",1021,G__Dictionary_191_0_70, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNbOfFCDErestSingles",2090,G__Dictionary_191_0_71, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFCDErestSinglePosX",2012,G__Dictionary_191_0_72, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFCDErestSinglePosY",2013,G__Dictionary_191_0_73, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFCDErestSinglePosZ",2014,G__Dictionary_191_0_74, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFCDErestSingleStartAngle",2631,G__Dictionary_191_0_75, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFCDErestSingleThickness",2558,G__Dictionary_191_0_76, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFCDErestSingleDeadLayer",2493,G__Dictionary_191_0_77, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFCDErestSingleInnerRadius",2742,G__Dictionary_191_0_78, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFCDErestSingleOuterRadius",2761,G__Dictionary_191_0_79, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFCDErestSingleSpanningAngle",2935,G__Dictionary_191_0_80, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFCDErestSingleEnergyResolution",3312,G__Dictionary_191_0_81, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseBCDdeltaE",1093,G__Dictionary_191_0_82, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNbOfBCDdeltaESingles",2162,G__Dictionary_191_0_83, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBCDdeltaESinglePosX",2084,G__Dictionary_191_0_84, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBCDdeltaESinglePosY",2085,G__Dictionary_191_0_85, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBCDdeltaESinglePosZ",2086,G__Dictionary_191_0_86, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBCDdeltaESingleStartAngle",2703,G__Dictionary_191_0_87, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBCDdeltaESingleThickness",2630,G__Dictionary_191_0_88, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBCDdeltaESingleDeadLayer",2565,G__Dictionary_191_0_89, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBCDdeltaESingleInnerRadius",2814,G__Dictionary_191_0_90, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBCDdeltaESingleOuterRadius",2833,G__Dictionary_191_0_91, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBCDdeltaESingleRingWidth",2602,G__Dictionary_191_0_92, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBCDdeltaESingleSpanningAngle",3007,G__Dictionary_191_0_93, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBCDdeltaESingleStripWidth",2732,G__Dictionary_191_0_94, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BCDTransferTo16Strips",1981,G__Dictionary_191_0_95, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBCDdeltaESingleEnergyResolution",3384,G__Dictionary_191_0_96, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBCDdeltaESingleFoilThickness",3024,G__Dictionary_191_0_97, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseBCDErest",1017,G__Dictionary_191_0_98, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNbOfBCDErestSingles",2086,G__Dictionary_191_0_99, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBCDErestSinglePosX",2008,G__Dictionary_191_0_100, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBCDErestSinglePosY",2009,G__Dictionary_191_0_101, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBCDErestSinglePosZ",2010,G__Dictionary_191_0_102, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBCDErestSingleStartAngle",2627,G__Dictionary_191_0_103, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBCDErestSingleThickness",2554,G__Dictionary_191_0_104, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBCDErestSingleDeadLayer",2489,G__Dictionary_191_0_105, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBCDErestSingleInnerRadius",2738,G__Dictionary_191_0_106, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBCDErestSingleOuterRadius",2757,G__Dictionary_191_0_107, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBCDErestSingleSpanningAngle",2931,G__Dictionary_191_0_108, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBCDErestSingleEnergyResolution",3308,G__Dictionary_191_0_109, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseFBarrelDeltaE",1530,G__Dictionary_191_0_110, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNbOfFBarrelDeltaESingles",2599,G__Dictionary_191_0_111, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFBarrelDeltaESinglePosZ",2523,G__Dictionary_191_0_112, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFBarrelDeltaESingleDistanceToBeam",3506,G__Dictionary_191_0_113, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFBarrelDeltaESingleStartAngle",3140,G__Dictionary_191_0_114, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFBarrelDeltaESingleThickness",3067,G__Dictionary_191_0_115, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFBarrelDeltaESingleDeadLayer",3002,G__Dictionary_191_0_116, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFBarrelDeltaESingleLengthX",2825,G__Dictionary_191_0_117, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFBarrelDeltaESingleLengthY",2826,G__Dictionary_191_0_118, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFBarrelDeltaESingleStripWidthPar",3460,G__Dictionary_191_0_119, 100, -1, -1, 0, 0, 1, 1, 0, "", "added bei Leila", (void*) NULL, 0);
   G__memfunc_setup("GetFBarrelDeltaESingleStripWidthPer",3464,G__Dictionary_191_0_120, 100, -1, -1, 0, 0, 1, 1, 0, "", "added bei Leila", (void*) NULL, 0);
   G__memfunc_setup("GetFBarrelDeltaESingleEnergyResolution",3821,G__Dictionary_191_0_121, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFBarrelDeltaESingleFoilThickness",3461,G__Dictionary_191_0_122, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseFBarrelErest",1486,G__Dictionary_191_0_123, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNbOfFBarrelErestSingles",2555,G__Dictionary_191_0_124, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFBarrelErestSinglePosZ",2479,G__Dictionary_191_0_125, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFBarrelErestSingleDistanceToBeam",3462,G__Dictionary_191_0_126, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFBarrelErestSingleStartAngle",3096,G__Dictionary_191_0_127, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFBarrelErestSingleThickness",3023,G__Dictionary_191_0_128, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFBarrelErestSingleDeadLayer",2958,G__Dictionary_191_0_129, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFBarrelErestSingleLengthX",2781,G__Dictionary_191_0_130, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFBarrelErestSingleLengthY",2782,G__Dictionary_191_0_131, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFBarrelErestSingleEnergyResolution",3777,G__Dictionary_191_0_132, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseSecondFBarrelDeltaE",2134,G__Dictionary_191_0_133, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNbOfSecondFBarrelDeltaESingles",3203,G__Dictionary_191_0_134, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSecondFBarrelDeltaESinglePosZ",3127,G__Dictionary_191_0_135, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSecondFBarrelDeltaESingleDistanceToBeam",4110,G__Dictionary_191_0_136, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSecondFBarrelDeltaESingleStartAngle",3744,G__Dictionary_191_0_137, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSecondFBarrelDeltaESingleThickness",3671,G__Dictionary_191_0_138, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSecondFBarrelDeltaESingleDeadLayer",3606,G__Dictionary_191_0_139, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSecondFBarrelDeltaESingleLengthX",3429,G__Dictionary_191_0_140, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSecondFBarrelDeltaESingleLengthY",3430,G__Dictionary_191_0_141, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSecondFBarrelDeltaESingleStripWidthPar",4064,G__Dictionary_191_0_142, 100, -1, -1, 0, 0, 1, 1, 0, "", "added bei Leila", (void*) NULL, 0);
   G__memfunc_setup("GetSecondFBarrelDeltaESingleStripWidthPer",4068,G__Dictionary_191_0_143, 100, -1, -1, 0, 0, 1, 1, 0, "", "added bei Leila", (void*) NULL, 0);
   G__memfunc_setup("GetSecondFBarrelDeltaESingleEnergyResolution",4425,G__Dictionary_191_0_144, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSecondFBarrelDeltaESingleFoilThickness",4065,G__Dictionary_191_0_145, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseMBarrelDeltaE",1537,G__Dictionary_191_0_146, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNbOfMBarrelDeltaESingles",2606,G__Dictionary_191_0_147, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMBarrelDeltaESinglePosZ",2530,G__Dictionary_191_0_148, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMBarrelDeltaESingleDistanceToBeam",3513,G__Dictionary_191_0_149, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMBarrelDeltaESingleStartAngle",3147,G__Dictionary_191_0_150, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMBarrelDeltaESingleThickness",3074,G__Dictionary_191_0_151, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMBarrelDeltaESingleDeadLayer",3009,G__Dictionary_191_0_152, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMBarrelDeltaESingleLengthX",2832,G__Dictionary_191_0_153, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMBarrelDeltaESingleLengthY",2833,G__Dictionary_191_0_154, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMBarrelDeltaESingleStripWidth",3176,G__Dictionary_191_0_155, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMBarrelDeltaESingleEnergyResolution",3828,G__Dictionary_191_0_156, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMBarrelDeltaESingleFoilThickness",3468,G__Dictionary_191_0_157, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseMBarrelErest",1493,G__Dictionary_191_0_158, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNbOfMBarrelErestSingles",2562,G__Dictionary_191_0_159, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMBarrelErestSinglePosZ",2486,G__Dictionary_191_0_160, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMBarrelErestSingleDistanceToBeam",3469,G__Dictionary_191_0_161, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMBarrelErestSingleStartAngle",3103,G__Dictionary_191_0_162, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMBarrelErestSingleThickness",3030,G__Dictionary_191_0_163, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMBarrelErestSingleDeadLayer",2965,G__Dictionary_191_0_164, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMBarrelErestSingleLengthX",2788,G__Dictionary_191_0_165, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMBarrelErestSingleLengthY",2789,G__Dictionary_191_0_166, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMBarrelErestSingleEnergyResolution",3784,G__Dictionary_191_0_167, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseBBarrelDeltaE",1526,G__Dictionary_191_0_168, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNbOfBBarrelDeltaESingles",2595,G__Dictionary_191_0_169, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBBarrelDeltaESinglePosZ",2519,G__Dictionary_191_0_170, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBBarrelDeltaESingleDistanceToBeam",3502,G__Dictionary_191_0_171, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBBarrelDeltaESingleStartAngle",3136,G__Dictionary_191_0_172, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBBarrelDeltaESingleThickness",3063,G__Dictionary_191_0_173, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBBarrelDeltaESingleDeadLayer",2998,G__Dictionary_191_0_174, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBBarrelDeltaESingleLengthX",2821,G__Dictionary_191_0_175, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBBarrelDeltaESingleLengthY",2822,G__Dictionary_191_0_176, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBBarrelDeltaESingleStripWidthPar",3456,G__Dictionary_191_0_177, 100, -1, -1, 0, 0, 1, 1, 0, "", "added bei Leila", (void*) NULL, 0);
   G__memfunc_setup("GetBBarrelDeltaESingleStripWidthPer",3460,G__Dictionary_191_0_178, 100, -1, -1, 0, 0, 1, 1, 0, "", "added bei Leila", (void*) NULL, 0);
   G__memfunc_setup("GetBBarrelDeltaESingleEnergyResolution",3817,G__Dictionary_191_0_179, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBBarrelDeltaESingleFoilThickness",3457,G__Dictionary_191_0_180, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseBBarrelErest",1482,G__Dictionary_191_0_181, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNbOfBBarrelErestSingles",2551,G__Dictionary_191_0_182, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBBarrelErestSinglePosZ",2475,G__Dictionary_191_0_183, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBBarrelErestSingleDistanceToBeam",3458,G__Dictionary_191_0_184, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBBarrelErestSingleStartAngle",3092,G__Dictionary_191_0_185, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBBarrelErestSingleThickness",3019,G__Dictionary_191_0_186, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBBarrelErestSingleDeadLayer",2954,G__Dictionary_191_0_187, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBBarrelErestSingleLengthX",2777,G__Dictionary_191_0_188, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBBarrelErestSingleLengthY",2778,G__Dictionary_191_0_189, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBBarrelErestSingleEnergyResolution",3773,G__Dictionary_191_0_190, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseSecondBBarrelDeltaE",2130,G__Dictionary_191_0_191, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNbOfSecondBBarrelDeltaESingles",3199,G__Dictionary_191_0_192, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSecondBBarrelDeltaESinglePosZ",3123,G__Dictionary_191_0_193, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSecondBBarrelDeltaESingleDistanceToBeam",4106,G__Dictionary_191_0_194, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSecondBBarrelDeltaESingleStartAngle",3740,G__Dictionary_191_0_195, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSecondBBarrelDeltaESingleThickness",3667,G__Dictionary_191_0_196, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSecondBBarrelDeltaESingleDeadLayer",3602,G__Dictionary_191_0_197, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSecondBBarrelDeltaESingleLengthX",3425,G__Dictionary_191_0_198, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSecondBBarrelDeltaESingleLengthY",3426,G__Dictionary_191_0_199, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSecondBBarrelDeltaESingleStripWidthPar",4060,G__Dictionary_191_0_200, 100, -1, -1, 0, 0, 1, 1, 0, "", "added bei Leila", (void*) NULL, 0);
   G__memfunc_setup("GetSecondBBarrelDeltaESingleStripWidthPer",4064,G__Dictionary_191_0_201, 100, -1, -1, 0, 0, 1, 1, 0, "", "added bei Leila", (void*) NULL, 0);
   G__memfunc_setup("GetSecondBBarrelDeltaESingleEnergyResolution",4421,G__Dictionary_191_0_202, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSecondBBarrelDeltaESingleFoilThickness",4061,G__Dictionary_191_0_203, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseFTrapezoidDeltaE",1876,G__Dictionary_191_0_204, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNbOfFTrapezoidDeltaESingles",2945,G__Dictionary_191_0_205, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFTrapezoidDeltaESinglePosZ",2869,G__Dictionary_191_0_206, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFTrapezoidDeltaESingleInnerRadius",3597,G__Dictionary_191_0_207, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFTrapezoidDeltaESingleOuterRadius",3616,G__Dictionary_191_0_208, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFTrapezoidDeltaESingleDeltaZ",3053,G__Dictionary_191_0_209, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFTrapezoidDeltaESingleThickness",3413,G__Dictionary_191_0_210, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFTrapezoidDeltaESingleStartAngle",3486,G__Dictionary_191_0_211, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFTrapezoidDeltaESingleNbOfRings",3345,G__Dictionary_191_0_212, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFTrapezoidDeltaESingleNbOfStrips",3475,G__Dictionary_191_0_213, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFTrapezoidDeltaESingleEnergyResolution",4167,G__Dictionary_191_0_214, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFTrapezoidDeltaESingleFoilThickness",3807,G__Dictionary_191_0_215, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseFTrapezoidErest",1832,G__Dictionary_191_0_216, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNbOfFTrapezoidErestSingles",2901,G__Dictionary_191_0_217, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFTrapezoidErestSinglePosZ",2825,G__Dictionary_191_0_218, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFTrapezoidErestSingleInnerRadius",3553,G__Dictionary_191_0_219, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFTrapezoidErestSingleOuterRadius",3572,G__Dictionary_191_0_220, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFTrapezoidErestSingleDeltaZ",3009,G__Dictionary_191_0_221, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFTrapezoidErestSingleThickness",3369,G__Dictionary_191_0_222, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFTrapezoidErestSingleStartAngle",3442,G__Dictionary_191_0_223, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFTrapezoidErestSingleEnergyResolution",4123,G__Dictionary_191_0_224, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseBTrapezoidDeltaE",1872,G__Dictionary_191_0_225, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNbOfBTrapezoidDeltaESingles",2941,G__Dictionary_191_0_226, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBTrapezoidDeltaESinglePosZ",2865,G__Dictionary_191_0_227, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBTrapezoidDeltaESingleInnerRadius",3593,G__Dictionary_191_0_228, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBTrapezoidDeltaESingleOuterRadius",3612,G__Dictionary_191_0_229, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBTrapezoidDeltaESingleDeltaZ",3049,G__Dictionary_191_0_230, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBTrapezoidDeltaESingleThickness",3409,G__Dictionary_191_0_231, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBTrapezoidDeltaESingleStartAngle",3482,G__Dictionary_191_0_232, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBTrapezoidDeltaESingleNbOfRings",3341,G__Dictionary_191_0_233, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBTrapezoidDeltaESingleNbOfStrips",3471,G__Dictionary_191_0_234, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBTrapezoidDeltaESingleEnergyResolution",4163,G__Dictionary_191_0_235, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBTrapezoidDeltaESingleFoilThickness",3803,G__Dictionary_191_0_236, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseBTrapezoidErest",1828,G__Dictionary_191_0_237, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNbOfBTrapezoidErestSingles",2897,G__Dictionary_191_0_238, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBTrapezoidErestSinglePosZ",2821,G__Dictionary_191_0_239, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBTrapezoidErestSingleInnerRadius",3549,G__Dictionary_191_0_240, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBTrapezoidErestSingleOuterRadius",3568,G__Dictionary_191_0_241, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBTrapezoidErestSingleDeltaZ",3005,G__Dictionary_191_0_242, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBTrapezoidErestSingleThickness",3365,G__Dictionary_191_0_243, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBTrapezoidErestSingleStartAngle",3438,G__Dictionary_191_0_244, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBTrapezoidErestSingleEnergyResolution",4119,G__Dictionary_191_0_245, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNbOfMiniballClusters",2306,G__Dictionary_191_0_246, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMiniballClusterNames",2334,G__Dictionary_191_0_247, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMiniballClusterTypes",2367,G__Dictionary_191_0_248, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMiniballClusterRho",2131,G__Dictionary_191_0_249, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMiniballClusterTheta",2336,G__Dictionary_191_0_250, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMiniballClusterPhi",2123,G__Dictionary_191_0_251, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMiniballClusterSpin",2244,G__Dictionary_191_0_252, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMiniballEnergyResolutionCore",3183,G__Dictionary_191_0_253, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMiniballEnergyResolutionSegment",3513,G__Dictionary_191_0_254, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TRexSettings",1236,G__Dictionary_191_0_255, 105, G__get_linked_tagnum(&G__DictionaryLN_TRexSettings), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dictionary_191_0_256, 85, G__get_linked_tagnum(&G__DictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TRexSettings::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dictionary_191_0_257, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRexSettings::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dictionary_191_0_258, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TRexSettings::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dictionary_191_0_259, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TRexSettings::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dictionary_191_0_263, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dictionary_191_0_264, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRexSettings::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dictionary_191_0_265, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TRexSettings::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dictionary_191_0_266, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRexSettings::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dictionary_191_0_267, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TRexSettings::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TRexSettings", 1236, G__Dictionary_191_0_268, (int) ('i'), G__get_linked_tagnum(&G__DictionaryLN_TRexSettings), -1, 0, 1, 1, 1, 0, "u 'TRexSettings' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TRexSettings", 1362, G__Dictionary_191_0_269, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dictionary_191_0_270, (int) ('u'), G__get_linked_tagnum(&G__DictionaryLN_TRexSettings), -1, 1, 1, 1, 1, 0, "u 'TRexSettings' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBarrel(void) {
   /* Barrel */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictionaryLN_Barrel));
   G__memfunc_setup("Barrel",600,G__Dictionary_200_0_1, 105, G__get_linked_tagnum(&G__DictionaryLN_Barrel), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearBarrel",1087,G__Dictionary_200_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ID",141,G__Dictionary_200_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Time",399,G__Dictionary_200_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'MyTime_t' 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRear",694,G__Dictionary_200_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - rear", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStrip",830,G__Dictionary_200_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - strip d - - 0 - energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set2Strips",995,G__Dictionary_200_0_7, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - firststrip d - - 0 - firstenergy "
"i - - 0 - secondstrip d - - 0 - secondenergy "
"g - - 0 - neighbor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEdet",686,G__Dictionary_200_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMult",718,G__Dictionary_200_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - mult", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetID",429,G__Dictionary_200_0_10, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRear",682,G__Dictionary_200_0_11, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEdet",674,G__Dictionary_200_0_12, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMult",706,G__Dictionary_200_0_13, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__Dictionary_200_0_14, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNeighbor",1102,G__Dictionary_200_0_15, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStripNr",1010,G__Dictionary_200_0_16, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStripPos",1124,G__Dictionary_200_0_17, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SizeOf",592,G__Dictionary_200_0_18, 110, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dictionary_200_0_19, 85, G__get_linked_tagnum(&G__DictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Barrel::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dictionary_200_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Barrel::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dictionary_200_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Barrel::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dictionary_200_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Barrel::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dictionary_200_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dictionary_200_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Barrel::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dictionary_200_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Barrel::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dictionary_200_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Barrel::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dictionary_200_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Barrel::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Barrel", 600, G__Dictionary_200_0_31, (int) ('i'), G__get_linked_tagnum(&G__DictionaryLN_Barrel), -1, 0, 1, 1, 1, 0, "u 'Barrel' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Barrel", 726, G__Dictionary_200_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dictionary_200_0_33, (int) ('u'), G__get_linked_tagnum(&G__DictionaryLN_Barrel), -1, 1, 1, 1, 1, 0, "u 'Barrel' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAnnular(void) {
   /* Annular */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictionaryLN_Annular));
   G__memfunc_setup("Annular",721,G__Dictionary_201_0_1, 105, G__get_linked_tagnum(&G__DictionaryLN_Annular), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearAnnular",1208,G__Dictionary_201_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ID",141,G__Dictionary_201_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Time",399,G__Dictionary_201_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'MyTime_t' 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEdet",686,G__Dictionary_201_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStrip",830,G__Dictionary_201_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - strip d - - 0 - energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set2Strips",995,G__Dictionary_201_0_7, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - firststrip d - - 0 - firstenergy "
"i - - 0 - secondstrip d - - 0 - secondenergy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRing",700,G__Dictionary_201_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - ring d - - 0 - energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set2Rings",865,G__Dictionary_201_0_9, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - firstring d - - 0 - firstenergy "
"i - - 0 - secondring d - - 0 - secondenergy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMult",718,G__Dictionary_201_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - mult", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetID",429,G__Dictionary_201_0_11, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEdet",674,G__Dictionary_201_0_12, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMult",706,G__Dictionary_201_0_13, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__Dictionary_201_0_14, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStripNr",1010,G__Dictionary_201_0_15, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStripEnergy",1436,G__Dictionary_201_0_16, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRingNr",880,G__Dictionary_201_0_17, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRingEnergy",1306,G__Dictionary_201_0_18, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SizeOf",592,G__Dictionary_201_0_19, 110, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dictionary_201_0_20, 85, G__get_linked_tagnum(&G__DictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Annular::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dictionary_201_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Annular::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dictionary_201_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Annular::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dictionary_201_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Annular::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dictionary_201_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dictionary_201_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Annular::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dictionary_201_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Annular::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dictionary_201_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Annular::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dictionary_201_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Annular::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Annular", 721, G__Dictionary_201_0_32, (int) ('i'), G__get_linked_tagnum(&G__DictionaryLN_Annular), -1, 0, 1, 1, 1, 0, "u 'Annular' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Annular", 847, G__Dictionary_201_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dictionary_201_0_34, (int) ('u'), G__get_linked_tagnum(&G__DictionaryLN_Annular), -1, 1, 1, 1, 1, 0, "u 'Annular' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCrystal(void) {
   /* Crystal */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictionaryLN_Crystal));
   G__memfunc_setup("Crystal",738,G__Dictionary_202_0_1, 105, G__get_linked_tagnum(&G__DictionaryLN_Crystal), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Crystal",738,G__Dictionary_202_0_2, 105, G__get_linked_tagnum(&G__DictionaryLN_Crystal), -1, 0, 3, 1, 1, 0, 
"i - - 0 - crystal d - - 0 - energy "
"d - 'MyTime_t' 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Crystal",738,G__Dictionary_202_0_3, 105, G__get_linked_tagnum(&G__DictionaryLN_Crystal), -1, 0, 4, 1, 1, 0, 
"i - - 0 - crystal i - - 0 - segment "
"d - - 0 - energy d - 'MyTime_t' 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearCrystal",1225,G__Dictionary_202_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCryID",743,G__Dictionary_202_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - cry", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCore",693,G__Dictionary_202_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - energy d - 'MyTime_t' 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddSegment",988,G__Dictionary_202_0_7, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - segment d - - 0 - energy "
"d - 'MyTime_t' 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTime",699,G__Dictionary_202_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCryID",731,G__Dictionary_202_0_9, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__Dictionary_202_0_10, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCore",681,G__Dictionary_202_0_11, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSeg",575,G__Dictionary_202_0_12, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSegID",716,G__Dictionary_202_0_13, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SizeOf",592,G__Dictionary_202_0_14, 110, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dictionary_202_0_15, 85, G__get_linked_tagnum(&G__DictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Crystal::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dictionary_202_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Crystal::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dictionary_202_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Crystal::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dictionary_202_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Crystal::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dictionary_202_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dictionary_202_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Crystal::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dictionary_202_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Crystal::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dictionary_202_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Crystal::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dictionary_202_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Crystal::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Crystal", 738, G__Dictionary_202_0_27, (int) ('i'), G__get_linked_tagnum(&G__DictionaryLN_Crystal), -1, 0, 1, 1, 1, 0, "u 'Crystal' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Crystal", 864, G__Dictionary_202_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dictionary_202_0_29, (int) ('u'), G__get_linked_tagnum(&G__DictionaryLN_Crystal), -1, 1, 1, 1, 1, 0, "u 'Crystal' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncGermanium(void) {
   /* Germanium */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictionaryLN_Germanium));
   G__memfunc_setup("Germanium",933,G__Dictionary_203_0_1, 105, G__get_linked_tagnum(&G__DictionaryLN_Germanium), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearGermanium",1420,G__Dictionary_203_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCore",693,G__Dictionary_203_0_3, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - crystal d - - 0 - energy "
"d - 'MyTime_t' 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSegment",1023,G__Dictionary_203_0_4, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - crystal i - - 0 - segment "
"d - - 0 - energy d - 'MyTime_t' 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintCluster",1263,G__Dictionary_203_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCluID",733,G__Dictionary_203_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - clu", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NrOfCrystals",1226,G__Dictionary_203_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCrystal",1026,G__Dictionary_203_0_8, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlECrystalcOallocatorlECrystalgRsPgR), G__defined_typename("vector<Crystal>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPosition",1141,G__Dictionary_203_0_9, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPosition",1153,G__Dictionary_203_0_10, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - TRX d - - 0 - TRY "
"d - - 0 - TRZ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTheta",790,G__Dictionary_203_0_11, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTheta",802,G__Dictionary_203_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - thetaIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCluID",721,G__Dictionary_203_0_13, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SizeOf",592,G__Dictionary_203_0_14, 110, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dictionary_203_0_15, 85, G__get_linked_tagnum(&G__DictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Germanium::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dictionary_203_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Germanium::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dictionary_203_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Germanium::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dictionary_203_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Germanium::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dictionary_203_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dictionary_203_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Germanium::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dictionary_203_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Germanium::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dictionary_203_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Germanium::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dictionary_203_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Germanium::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Germanium", 933, G__Dictionary_203_0_27, (int) ('i'), G__get_linked_tagnum(&G__DictionaryLN_Germanium), -1, 0, 1, 1, 1, 0, "u 'Germanium' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Germanium", 1059, G__Dictionary_203_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dictionary_203_0_29, (int) ('u'), G__get_linked_tagnum(&G__DictionaryLN_Germanium), -1, 1, 1, 1, 1, 0, "u 'Germanium' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlECrystalcOallocatorlECrystalgRsPgR(void) {
   /* vector<Crystal,allocator<Crystal> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictionaryLN_vectorlECrystalcOallocatorlECrystalgRsPgR));
   G__memfunc_setup("at",213,G__Dictionary_205_0_1, 117, G__get_linked_tagnum(&G__DictionaryLN_Crystal), G__defined_typename("vector<Crystal,allocator<Crystal> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<Crystal,allocator<Crystal> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__Dictionary_205_0_2, 117, G__get_linked_tagnum(&G__DictionaryLN_Crystal), G__defined_typename("vector<Crystal,allocator<Crystal> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<Crystal,allocator<Crystal> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__Dictionary_205_0_3, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlECrystalcOallocatorlECrystalgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__Dictionary_205_0_4, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlECrystalcOallocatorlECrystalgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__Dictionary_205_0_5, 117, G__get_linked_tagnum(&G__DictionaryLN_reverse_iteratorlEvectorlECrystalcOallocatorlECrystalgRsPgRcLcLiteratorgR), G__defined_typename("vector<Crystal,allocator<Crystal> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__Dictionary_205_0_6, 117, G__get_linked_tagnum(&G__DictionaryLN_reverse_iteratorlEvectorlECrystalcOallocatorlECrystalgRsPgRcLcLiteratorgR), G__defined_typename("vector<Crystal,allocator<Crystal> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__Dictionary_205_0_7, 107, -1, G__defined_typename("vector<Crystal,allocator<Crystal> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__Dictionary_205_0_8, 107, -1, G__defined_typename("vector<Crystal,allocator<Crystal> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dictionary_205_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<Crystal,allocator<Crystal> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dictionary_205_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<Crystal,allocator<Crystal> >::size_type' 0 - sz u 'Crystal' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__Dictionary_205_0_11, 107, -1, G__defined_typename("vector<Crystal,allocator<Crystal> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__Dictionary_205_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dictionary_205_0_13, 117, G__get_linked_tagnum(&G__DictionaryLN_Crystal), G__defined_typename("vector<Crystal,allocator<Crystal> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<Crystal,allocator<Crystal> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dictionary_205_0_14, 117, G__get_linked_tagnum(&G__DictionaryLN_Crystal), G__defined_typename("vector<Crystal,allocator<Crystal> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<Crystal,allocator<Crystal> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<Crystal,allocator<Crystal> >",3416,G__Dictionary_205_0_15, 105, G__get_linked_tagnum(&G__DictionaryLN_vectorlECrystalcOallocatorlECrystalgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<Crystal,allocator<Crystal> >",3416,G__Dictionary_205_0_16, 105, G__get_linked_tagnum(&G__DictionaryLN_vectorlECrystalcOallocatorlECrystalgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<Crystal,allocator<Crystal> >::size_type' 0 - n u 'Crystal' - 11 'Crystal()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<Crystal,allocator<Crystal> >",3416,G__Dictionary_205_0_17, 105, G__get_linked_tagnum(&G__DictionaryLN_vectorlECrystalcOallocatorlECrystalgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<Crystal,allocator<Crystal> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<Crystal,allocator<Crystal> >",3416,G__Dictionary_205_0_18, 105, G__get_linked_tagnum(&G__DictionaryLN_vectorlECrystalcOallocatorlECrystalgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<Crystal,allocator<Crystal> >::iterator' 'vector<Crystal,allocator<Crystal> >::const_iterator' 10 - first u 'vector<Crystal,allocator<Crystal> >::iterator' 'vector<Crystal,allocator<Crystal> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Dictionary_205_0_19, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlECrystalcOallocatorlECrystalgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<Crystal,allocator<Crystal> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__Dictionary_205_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<Crystal,allocator<Crystal> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__Dictionary_205_0_21, 117, G__get_linked_tagnum(&G__DictionaryLN_Crystal), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__Dictionary_205_0_22, 117, G__get_linked_tagnum(&G__DictionaryLN_Crystal), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__Dictionary_205_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'Crystal' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__Dictionary_205_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<Crystal,allocator<Crystal> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dictionary_205_0_25, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlECrystalcOallocatorlECrystalgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<Crystal,allocator<Crystal> >::iterator' - 0 - position u 'Crystal' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dictionary_205_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<Crystal,allocator<Crystal> >::iterator' - 0 - position u 'vector<Crystal,allocator<Crystal> >::iterator' 'vector<Crystal,allocator<Crystal> >::const_iterator' 10 - first "
"u 'vector<Crystal,allocator<Crystal> >::iterator' 'vector<Crystal,allocator<Crystal> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dictionary_205_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<Crystal,allocator<Crystal> >::iterator' - 0 - position k - 'vector<Crystal,allocator<Crystal> >::size_type' 0 - n "
"u 'Crystal' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__Dictionary_205_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dictionary_205_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<Crystal,allocator<Crystal> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dictionary_205_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<Crystal,allocator<Crystal> >::iterator' - 0 - first u 'vector<Crystal,allocator<Crystal> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__Dictionary_205_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<Crystal,allocator<Crystal> >", 3542, G__Dictionary_205_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncParticleMC(void) {
   /* ParticleMC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictionaryLN_ParticleMC));
   G__memfunc_setup("ParticleMC",964,G__Dictionary_208_0_1, 105, G__get_linked_tagnum(&G__DictionaryLN_ParticleMC), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearParticleMC",1451,G__Dictionary_208_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ID",141,G__Dictionary_208_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetA",365,G__Dictionary_208_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZ",390,G__Dictionary_208_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrackID",942,G__Dictionary_208_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - trackID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTime",699,G__Dictionary_208_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStopped",1035,G__Dictionary_208_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - stopped", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetResKinEnergy",1506,G__Dictionary_208_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - resKinEnergy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRear",694,G__Dictionary_208_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - rear", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEdet",686,G__Dictionary_208_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - edet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddStrip",795,G__Dictionary_208_0_12, 121, -1, -1, 0, 7, 1, 1, 0, 
"i - - 0 - xstrip d - - 0 - energy "
"i - - 0 - a i - - 0 - z "
"i - - 0 - trackID d - - 0 - time "
"i - - 0 - stopped", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddStrip",795,G__Dictionary_208_0_13, 121, -1, -1, 0, 10, 1, 1, 0, 
"i - - 0 - xstrip d - - 0 - energy "
"i - - 0 - a i - - 0 - z "
"i - - 0 - trackID d - - 0 - time "
"d - - 0 - hitPosGlobalX d - - 0 - hitPosGlobalY "
"d - - 0 - hitPosGlobalZ i - - 0 - stopped", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddRing",665,G__Dictionary_208_0_14, 121, -1, -1, 0, 7, 1, 1, 0, 
"i - - 0 - strip d - - 0 - energy "
"i - - 0 - a i - - 0 - z "
"i - - 0 - trackID d - - 0 - time "
"i - - 0 - stopped", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMult",718,G__Dictionary_208_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - mult", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetID",429,G__Dictionary_208_0_16, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetA",353,G__Dictionary_208_0_17, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZ",378,G__Dictionary_208_0_18, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrackID",930,G__Dictionary_208_0_19, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__Dictionary_208_0_20, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsStopped",923,G__Dictionary_208_0_21, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetResKinEnergy",1494,G__Dictionary_208_0_22, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRear",682,G__Dictionary_208_0_23, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEdet",674,G__Dictionary_208_0_24, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMult",706,G__Dictionary_208_0_25, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStripNr",1010,G__Dictionary_208_0_26, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNeighborStrip",1632,G__Dictionary_208_0_27, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNeighborRing",1502,G__Dictionary_208_0_28, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStripEnergy",1436,G__Dictionary_208_0_29, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", "for CD ", (void*) NULL, 0);
   G__memfunc_setup("GetStripPos",1124,G__Dictionary_208_0_30, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", "for Barrel ", (void*) NULL, 0);
   G__memfunc_setup("GetStripA",883,G__Dictionary_208_0_31, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStripZ",908,G__Dictionary_208_0_32, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStripTrackID",1460,G__Dictionary_208_0_33, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStripTime",1217,G__Dictionary_208_0_34, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPosGlobalX",1275,G__Dictionary_208_0_35, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", "leila", (void*) NULL, 0);
   G__memfunc_setup("GetPosGlobalY",1276,G__Dictionary_208_0_36, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", "leila", (void*) NULL, 0);
   G__memfunc_setup("GetPosGlobalZ",1277,G__Dictionary_208_0_37, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", "leila", (void*) NULL, 0);
   G__memfunc_setup("IsStripStopped",1453,G__Dictionary_208_0_38, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRingNr",880,G__Dictionary_208_0_39, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRingEnergy",1306,G__Dictionary_208_0_40, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRingA",753,G__Dictionary_208_0_41, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRingZ",778,G__Dictionary_208_0_42, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRingTrackID",1330,G__Dictionary_208_0_43, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRingTime",1087,G__Dictionary_208_0_44, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsRingStopped",1323,G__Dictionary_208_0_45, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SizeOf",592,G__Dictionary_208_0_46, 110, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dictionary_208_0_47, 85, G__get_linked_tagnum(&G__DictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ParticleMC::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dictionary_208_0_48, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ParticleMC::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dictionary_208_0_49, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ParticleMC::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dictionary_208_0_50, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ParticleMC::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dictionary_208_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dictionary_208_0_55, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ParticleMC::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dictionary_208_0_56, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ParticleMC::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dictionary_208_0_57, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ParticleMC::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dictionary_208_0_58, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ParticleMC::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ParticleMC", 964, G__Dictionary_208_0_59, (int) ('i'), G__get_linked_tagnum(&G__DictionaryLN_ParticleMC), -1, 0, 1, 1, 1, 0, "u 'ParticleMC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ParticleMC", 1090, G__Dictionary_208_0_60, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dictionary_208_0_61, (int) ('u'), G__get_linked_tagnum(&G__DictionaryLN_ParticleMC), -1, 1, 1, 1, 1, 0, "u 'ParticleMC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEBarrelcOallocatorlEBarrelgRsPgR(void) {
   /* vector<Barrel,allocator<Barrel> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictionaryLN_vectorlEBarrelcOallocatorlEBarrelgRsPgR));
   G__memfunc_setup("at",213,G__Dictionary_210_0_1, 117, G__get_linked_tagnum(&G__DictionaryLN_Barrel), G__defined_typename("vector<Barrel,allocator<Barrel> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<Barrel,allocator<Barrel> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__Dictionary_210_0_2, 117, G__get_linked_tagnum(&G__DictionaryLN_Barrel), G__defined_typename("vector<Barrel,allocator<Barrel> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<Barrel,allocator<Barrel> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__Dictionary_210_0_3, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEBarrelcOallocatorlEBarrelgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__Dictionary_210_0_4, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEBarrelcOallocatorlEBarrelgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__Dictionary_210_0_5, 117, G__get_linked_tagnum(&G__DictionaryLN_reverse_iteratorlEvectorlEBarrelcOallocatorlEBarrelgRsPgRcLcLiteratorgR), G__defined_typename("vector<Barrel,allocator<Barrel> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__Dictionary_210_0_6, 117, G__get_linked_tagnum(&G__DictionaryLN_reverse_iteratorlEvectorlEBarrelcOallocatorlEBarrelgRsPgRcLcLiteratorgR), G__defined_typename("vector<Barrel,allocator<Barrel> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__Dictionary_210_0_7, 107, -1, G__defined_typename("vector<Barrel,allocator<Barrel> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__Dictionary_210_0_8, 107, -1, G__defined_typename("vector<Barrel,allocator<Barrel> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dictionary_210_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<Barrel,allocator<Barrel> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dictionary_210_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<Barrel,allocator<Barrel> >::size_type' 0 - sz u 'Barrel' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__Dictionary_210_0_11, 107, -1, G__defined_typename("vector<Barrel,allocator<Barrel> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__Dictionary_210_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dictionary_210_0_13, 117, G__get_linked_tagnum(&G__DictionaryLN_Barrel), G__defined_typename("vector<Barrel,allocator<Barrel> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<Barrel,allocator<Barrel> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dictionary_210_0_14, 117, G__get_linked_tagnum(&G__DictionaryLN_Barrel), G__defined_typename("vector<Barrel,allocator<Barrel> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<Barrel,allocator<Barrel> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<Barrel,allocator<Barrel> >",3140,G__Dictionary_210_0_15, 105, G__get_linked_tagnum(&G__DictionaryLN_vectorlEBarrelcOallocatorlEBarrelgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<Barrel,allocator<Barrel> >",3140,G__Dictionary_210_0_16, 105, G__get_linked_tagnum(&G__DictionaryLN_vectorlEBarrelcOallocatorlEBarrelgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<Barrel,allocator<Barrel> >::size_type' 0 - n u 'Barrel' - 11 'Barrel()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<Barrel,allocator<Barrel> >",3140,G__Dictionary_210_0_17, 105, G__get_linked_tagnum(&G__DictionaryLN_vectorlEBarrelcOallocatorlEBarrelgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<Barrel,allocator<Barrel> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<Barrel,allocator<Barrel> >",3140,G__Dictionary_210_0_18, 105, G__get_linked_tagnum(&G__DictionaryLN_vectorlEBarrelcOallocatorlEBarrelgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<Barrel,allocator<Barrel> >::iterator' 'vector<Barrel,allocator<Barrel> >::const_iterator' 10 - first u 'vector<Barrel,allocator<Barrel> >::iterator' 'vector<Barrel,allocator<Barrel> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Dictionary_210_0_19, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEBarrelcOallocatorlEBarrelgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<Barrel,allocator<Barrel> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__Dictionary_210_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<Barrel,allocator<Barrel> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__Dictionary_210_0_21, 117, G__get_linked_tagnum(&G__DictionaryLN_Barrel), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__Dictionary_210_0_22, 117, G__get_linked_tagnum(&G__DictionaryLN_Barrel), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__Dictionary_210_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'Barrel' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__Dictionary_210_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<Barrel,allocator<Barrel> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dictionary_210_0_25, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEBarrelcOallocatorlEBarrelgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<Barrel,allocator<Barrel> >::iterator' - 0 - position u 'Barrel' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dictionary_210_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<Barrel,allocator<Barrel> >::iterator' - 0 - position u 'vector<Barrel,allocator<Barrel> >::iterator' 'vector<Barrel,allocator<Barrel> >::const_iterator' 10 - first "
"u 'vector<Barrel,allocator<Barrel> >::iterator' 'vector<Barrel,allocator<Barrel> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dictionary_210_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<Barrel,allocator<Barrel> >::iterator' - 0 - position k - 'vector<Barrel,allocator<Barrel> >::size_type' 0 - n "
"u 'Barrel' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__Dictionary_210_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dictionary_210_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<Barrel,allocator<Barrel> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dictionary_210_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<Barrel,allocator<Barrel> >::iterator' - 0 - first u 'vector<Barrel,allocator<Barrel> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__Dictionary_210_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<Barrel,allocator<Barrel> >", 3266, G__Dictionary_210_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEAnnularcOallocatorlEAnnulargRsPgR(void) {
   /* vector<Annular,allocator<Annular> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictionaryLN_vectorlEAnnularcOallocatorlEAnnulargRsPgR));
   G__memfunc_setup("at",213,G__Dictionary_214_0_1, 117, G__get_linked_tagnum(&G__DictionaryLN_Annular), G__defined_typename("vector<Annular,allocator<Annular> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<Annular,allocator<Annular> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__Dictionary_214_0_2, 117, G__get_linked_tagnum(&G__DictionaryLN_Annular), G__defined_typename("vector<Annular,allocator<Annular> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<Annular,allocator<Annular> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__Dictionary_214_0_3, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEAnnularcOallocatorlEAnnulargRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__Dictionary_214_0_4, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEAnnularcOallocatorlEAnnulargRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__Dictionary_214_0_5, 117, G__get_linked_tagnum(&G__DictionaryLN_reverse_iteratorlEvectorlEAnnularcOallocatorlEAnnulargRsPgRcLcLiteratorgR), G__defined_typename("vector<Annular,allocator<Annular> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__Dictionary_214_0_6, 117, G__get_linked_tagnum(&G__DictionaryLN_reverse_iteratorlEvectorlEAnnularcOallocatorlEAnnulargRsPgRcLcLiteratorgR), G__defined_typename("vector<Annular,allocator<Annular> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__Dictionary_214_0_7, 107, -1, G__defined_typename("vector<Annular,allocator<Annular> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__Dictionary_214_0_8, 107, -1, G__defined_typename("vector<Annular,allocator<Annular> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dictionary_214_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<Annular,allocator<Annular> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dictionary_214_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<Annular,allocator<Annular> >::size_type' 0 - sz u 'Annular' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__Dictionary_214_0_11, 107, -1, G__defined_typename("vector<Annular,allocator<Annular> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__Dictionary_214_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dictionary_214_0_13, 117, G__get_linked_tagnum(&G__DictionaryLN_Annular), G__defined_typename("vector<Annular,allocator<Annular> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<Annular,allocator<Annular> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dictionary_214_0_14, 117, G__get_linked_tagnum(&G__DictionaryLN_Annular), G__defined_typename("vector<Annular,allocator<Annular> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<Annular,allocator<Annular> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<Annular,allocator<Annular> >",3382,G__Dictionary_214_0_15, 105, G__get_linked_tagnum(&G__DictionaryLN_vectorlEAnnularcOallocatorlEAnnulargRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<Annular,allocator<Annular> >",3382,G__Dictionary_214_0_16, 105, G__get_linked_tagnum(&G__DictionaryLN_vectorlEAnnularcOallocatorlEAnnulargRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<Annular,allocator<Annular> >::size_type' 0 - n u 'Annular' - 11 'Annular()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<Annular,allocator<Annular> >",3382,G__Dictionary_214_0_17, 105, G__get_linked_tagnum(&G__DictionaryLN_vectorlEAnnularcOallocatorlEAnnulargRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<Annular,allocator<Annular> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<Annular,allocator<Annular> >",3382,G__Dictionary_214_0_18, 105, G__get_linked_tagnum(&G__DictionaryLN_vectorlEAnnularcOallocatorlEAnnulargRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<Annular,allocator<Annular> >::iterator' 'vector<Annular,allocator<Annular> >::const_iterator' 10 - first u 'vector<Annular,allocator<Annular> >::iterator' 'vector<Annular,allocator<Annular> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Dictionary_214_0_19, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEAnnularcOallocatorlEAnnulargRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<Annular,allocator<Annular> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__Dictionary_214_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<Annular,allocator<Annular> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__Dictionary_214_0_21, 117, G__get_linked_tagnum(&G__DictionaryLN_Annular), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__Dictionary_214_0_22, 117, G__get_linked_tagnum(&G__DictionaryLN_Annular), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__Dictionary_214_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'Annular' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__Dictionary_214_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<Annular,allocator<Annular> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dictionary_214_0_25, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEAnnularcOallocatorlEAnnulargRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<Annular,allocator<Annular> >::iterator' - 0 - position u 'Annular' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dictionary_214_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<Annular,allocator<Annular> >::iterator' - 0 - position u 'vector<Annular,allocator<Annular> >::iterator' 'vector<Annular,allocator<Annular> >::const_iterator' 10 - first "
"u 'vector<Annular,allocator<Annular> >::iterator' 'vector<Annular,allocator<Annular> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dictionary_214_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<Annular,allocator<Annular> >::iterator' - 0 - position k - 'vector<Annular,allocator<Annular> >::size_type' 0 - n "
"u 'Annular' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__Dictionary_214_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dictionary_214_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<Annular,allocator<Annular> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dictionary_214_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<Annular,allocator<Annular> >::iterator' - 0 - first u 'vector<Annular,allocator<Annular> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__Dictionary_214_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<Annular,allocator<Annular> >", 3508, G__Dictionary_214_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEGermaniumcOallocatorlEGermaniumgRsPgR(void) {
   /* vector<Germanium,allocator<Germanium> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictionaryLN_vectorlEGermaniumcOallocatorlEGermaniumgRsPgR));
   G__memfunc_setup("at",213,G__Dictionary_218_0_1, 117, G__get_linked_tagnum(&G__DictionaryLN_Germanium), G__defined_typename("vector<Germanium,allocator<Germanium> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<Germanium,allocator<Germanium> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__Dictionary_218_0_2, 117, G__get_linked_tagnum(&G__DictionaryLN_Germanium), G__defined_typename("vector<Germanium,allocator<Germanium> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<Germanium,allocator<Germanium> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__Dictionary_218_0_3, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEGermaniumcOallocatorlEGermaniumgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__Dictionary_218_0_4, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEGermaniumcOallocatorlEGermaniumgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__Dictionary_218_0_5, 117, G__get_linked_tagnum(&G__DictionaryLN_reverse_iteratorlEvectorlEGermaniumcOallocatorlEGermaniumgRsPgRcLcLiteratorgR), G__defined_typename("vector<Germanium,allocator<Germanium> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__Dictionary_218_0_6, 117, G__get_linked_tagnum(&G__DictionaryLN_reverse_iteratorlEvectorlEGermaniumcOallocatorlEGermaniumgRsPgRcLcLiteratorgR), G__defined_typename("vector<Germanium,allocator<Germanium> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__Dictionary_218_0_7, 107, -1, G__defined_typename("vector<Germanium,allocator<Germanium> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__Dictionary_218_0_8, 107, -1, G__defined_typename("vector<Germanium,allocator<Germanium> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dictionary_218_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<Germanium,allocator<Germanium> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dictionary_218_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<Germanium,allocator<Germanium> >::size_type' 0 - sz u 'Germanium' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__Dictionary_218_0_11, 107, -1, G__defined_typename("vector<Germanium,allocator<Germanium> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__Dictionary_218_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dictionary_218_0_13, 117, G__get_linked_tagnum(&G__DictionaryLN_Germanium), G__defined_typename("vector<Germanium,allocator<Germanium> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<Germanium,allocator<Germanium> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dictionary_218_0_14, 117, G__get_linked_tagnum(&G__DictionaryLN_Germanium), G__defined_typename("vector<Germanium,allocator<Germanium> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<Germanium,allocator<Germanium> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<Germanium,allocator<Germanium> >",3806,G__Dictionary_218_0_15, 105, G__get_linked_tagnum(&G__DictionaryLN_vectorlEGermaniumcOallocatorlEGermaniumgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<Germanium,allocator<Germanium> >",3806,G__Dictionary_218_0_16, 105, G__get_linked_tagnum(&G__DictionaryLN_vectorlEGermaniumcOallocatorlEGermaniumgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<Germanium,allocator<Germanium> >::size_type' 0 - n u 'Germanium' - 11 'Germanium()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<Germanium,allocator<Germanium> >",3806,G__Dictionary_218_0_17, 105, G__get_linked_tagnum(&G__DictionaryLN_vectorlEGermaniumcOallocatorlEGermaniumgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<Germanium,allocator<Germanium> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<Germanium,allocator<Germanium> >",3806,G__Dictionary_218_0_18, 105, G__get_linked_tagnum(&G__DictionaryLN_vectorlEGermaniumcOallocatorlEGermaniumgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<Germanium,allocator<Germanium> >::iterator' 'vector<Germanium,allocator<Germanium> >::const_iterator' 10 - first u 'vector<Germanium,allocator<Germanium> >::iterator' 'vector<Germanium,allocator<Germanium> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Dictionary_218_0_19, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEGermaniumcOallocatorlEGermaniumgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<Germanium,allocator<Germanium> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__Dictionary_218_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<Germanium,allocator<Germanium> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__Dictionary_218_0_21, 117, G__get_linked_tagnum(&G__DictionaryLN_Germanium), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__Dictionary_218_0_22, 117, G__get_linked_tagnum(&G__DictionaryLN_Germanium), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__Dictionary_218_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'Germanium' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__Dictionary_218_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<Germanium,allocator<Germanium> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dictionary_218_0_25, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEGermaniumcOallocatorlEGermaniumgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<Germanium,allocator<Germanium> >::iterator' - 0 - position u 'Germanium' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dictionary_218_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<Germanium,allocator<Germanium> >::iterator' - 0 - position u 'vector<Germanium,allocator<Germanium> >::iterator' 'vector<Germanium,allocator<Germanium> >::const_iterator' 10 - first "
"u 'vector<Germanium,allocator<Germanium> >::iterator' 'vector<Germanium,allocator<Germanium> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dictionary_218_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<Germanium,allocator<Germanium> >::iterator' - 0 - position k - 'vector<Germanium,allocator<Germanium> >::size_type' 0 - n "
"u 'Germanium' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__Dictionary_218_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dictionary_218_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<Germanium,allocator<Germanium> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dictionary_218_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<Germanium,allocator<Germanium> >::iterator' - 0 - first u 'vector<Germanium,allocator<Germanium> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__Dictionary_218_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<Germanium,allocator<Germanium> >", 3932, G__Dictionary_218_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEParticleMCcOallocatorlEParticleMCgRsPgR(void) {
   /* vector<ParticleMC,allocator<ParticleMC> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictionaryLN_vectorlEParticleMCcOallocatorlEParticleMCgRsPgR));
   G__memfunc_setup("at",213,G__Dictionary_222_0_1, 117, G__get_linked_tagnum(&G__DictionaryLN_ParticleMC), G__defined_typename("vector<ParticleMC,allocator<ParticleMC> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<ParticleMC,allocator<ParticleMC> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__Dictionary_222_0_2, 117, G__get_linked_tagnum(&G__DictionaryLN_ParticleMC), G__defined_typename("vector<ParticleMC,allocator<ParticleMC> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<ParticleMC,allocator<ParticleMC> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__Dictionary_222_0_3, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEParticleMCcOallocatorlEParticleMCgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__Dictionary_222_0_4, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEParticleMCcOallocatorlEParticleMCgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__Dictionary_222_0_5, 117, G__get_linked_tagnum(&G__DictionaryLN_reverse_iteratorlEvectorlEParticleMCcOallocatorlEParticleMCgRsPgRcLcLiteratorgR), G__defined_typename("vector<ParticleMC,allocator<ParticleMC> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__Dictionary_222_0_6, 117, G__get_linked_tagnum(&G__DictionaryLN_reverse_iteratorlEvectorlEParticleMCcOallocatorlEParticleMCgRsPgRcLcLiteratorgR), G__defined_typename("vector<ParticleMC,allocator<ParticleMC> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__Dictionary_222_0_7, 107, -1, G__defined_typename("vector<ParticleMC,allocator<ParticleMC> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__Dictionary_222_0_8, 107, -1, G__defined_typename("vector<ParticleMC,allocator<ParticleMC> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dictionary_222_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<ParticleMC,allocator<ParticleMC> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dictionary_222_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<ParticleMC,allocator<ParticleMC> >::size_type' 0 - sz u 'ParticleMC' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__Dictionary_222_0_11, 107, -1, G__defined_typename("vector<ParticleMC,allocator<ParticleMC> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__Dictionary_222_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dictionary_222_0_13, 117, G__get_linked_tagnum(&G__DictionaryLN_ParticleMC), G__defined_typename("vector<ParticleMC,allocator<ParticleMC> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<ParticleMC,allocator<ParticleMC> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dictionary_222_0_14, 117, G__get_linked_tagnum(&G__DictionaryLN_ParticleMC), G__defined_typename("vector<ParticleMC,allocator<ParticleMC> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<ParticleMC,allocator<ParticleMC> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<ParticleMC,allocator<ParticleMC> >",3868,G__Dictionary_222_0_15, 105, G__get_linked_tagnum(&G__DictionaryLN_vectorlEParticleMCcOallocatorlEParticleMCgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<ParticleMC,allocator<ParticleMC> >",3868,G__Dictionary_222_0_16, 105, G__get_linked_tagnum(&G__DictionaryLN_vectorlEParticleMCcOallocatorlEParticleMCgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<ParticleMC,allocator<ParticleMC> >::size_type' 0 - n u 'ParticleMC' - 11 'ParticleMC()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<ParticleMC,allocator<ParticleMC> >",3868,G__Dictionary_222_0_17, 105, G__get_linked_tagnum(&G__DictionaryLN_vectorlEParticleMCcOallocatorlEParticleMCgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<ParticleMC,allocator<ParticleMC> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<ParticleMC,allocator<ParticleMC> >",3868,G__Dictionary_222_0_18, 105, G__get_linked_tagnum(&G__DictionaryLN_vectorlEParticleMCcOallocatorlEParticleMCgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<ParticleMC,allocator<ParticleMC> >::iterator' 'vector<ParticleMC,allocator<ParticleMC> >::const_iterator' 10 - first u 'vector<ParticleMC,allocator<ParticleMC> >::iterator' 'vector<ParticleMC,allocator<ParticleMC> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Dictionary_222_0_19, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEParticleMCcOallocatorlEParticleMCgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<ParticleMC,allocator<ParticleMC> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__Dictionary_222_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<ParticleMC,allocator<ParticleMC> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__Dictionary_222_0_21, 117, G__get_linked_tagnum(&G__DictionaryLN_ParticleMC), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__Dictionary_222_0_22, 117, G__get_linked_tagnum(&G__DictionaryLN_ParticleMC), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__Dictionary_222_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'ParticleMC' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__Dictionary_222_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<ParticleMC,allocator<ParticleMC> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dictionary_222_0_25, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEParticleMCcOallocatorlEParticleMCgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<ParticleMC,allocator<ParticleMC> >::iterator' - 0 - position u 'ParticleMC' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dictionary_222_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<ParticleMC,allocator<ParticleMC> >::iterator' - 0 - position u 'vector<ParticleMC,allocator<ParticleMC> >::iterator' 'vector<ParticleMC,allocator<ParticleMC> >::const_iterator' 10 - first "
"u 'vector<ParticleMC,allocator<ParticleMC> >::iterator' 'vector<ParticleMC,allocator<ParticleMC> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dictionary_222_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<ParticleMC,allocator<ParticleMC> >::iterator' - 0 - position k - 'vector<ParticleMC,allocator<ParticleMC> >::size_type' 0 - n "
"u 'ParticleMC' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__Dictionary_222_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dictionary_222_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<ParticleMC,allocator<ParticleMC> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dictionary_222_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<ParticleMC,allocator<ParticleMC> >::iterator' - 0 - first u 'vector<ParticleMC,allocator<ParticleMC> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__Dictionary_222_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<ParticleMC,allocator<ParticleMC> >", 3994, G__Dictionary_222_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncDictionary() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalDictionary() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcDictionary() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__DictionaryLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_TRexSettings = { "TRexSettings" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_Barrel = { "Barrel" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_Annular = { "Annular" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_Crystal = { "Crystal" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_Germanium = { "Germanium" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_vectorlECrystalcOallocatorlECrystalgRsPgR = { "vector<Crystal,allocator<Crystal> >" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_vectorlECrystalcOallocatorlECrystalgRsPgRcLcLiterator = { "vector<Crystal,allocator<Crystal> >::iterator" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_reverse_iteratorlEvectorlECrystalcOallocatorlECrystalgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Crystal,allocator<Crystal> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_ParticleMC = { "ParticleMC" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_vectorlEBarrelcOallocatorlEBarrelgRsPgR = { "vector<Barrel,allocator<Barrel> >" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_vectorlEBarrelcOallocatorlEBarrelgRsPgRcLcLiterator = { "vector<Barrel,allocator<Barrel> >::iterator" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_reverse_iteratorlEvectorlEBarrelcOallocatorlEBarrelgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Barrel,allocator<Barrel> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_vectorlEAnnularcOallocatorlEAnnulargRsPgR = { "vector<Annular,allocator<Annular> >" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_vectorlEAnnularcOallocatorlEAnnulargRsPgRcLcLiterator = { "vector<Annular,allocator<Annular> >::iterator" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_reverse_iteratorlEvectorlEAnnularcOallocatorlEAnnulargRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Annular,allocator<Annular> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_vectorlEGermaniumcOallocatorlEGermaniumgRsPgR = { "vector<Germanium,allocator<Germanium> >" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_vectorlEGermaniumcOallocatorlEGermaniumgRsPgRcLcLiterator = { "vector<Germanium,allocator<Germanium> >::iterator" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_reverse_iteratorlEvectorlEGermaniumcOallocatorlEGermaniumgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Germanium,allocator<Germanium> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_vectorlEParticleMCcOallocatorlEParticleMCgRsPgR = { "vector<ParticleMC,allocator<ParticleMC> >" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_vectorlEParticleMCcOallocatorlEParticleMCgRsPgRcLcLiterator = { "vector<ParticleMC,allocator<ParticleMC> >::iterator" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_reverse_iteratorlEvectorlEParticleMCcOallocatorlEParticleMCgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ParticleMC,allocator<ParticleMC> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableDictionary() {
  G__DictionaryLN_TClass.tagnum = -1 ;
  G__DictionaryLN_TBuffer.tagnum = -1 ;
  G__DictionaryLN_TMemberInspector.tagnum = -1 ;
  G__DictionaryLN_TObject.tagnum = -1 ;
  G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__DictionaryLN_string.tagnum = -1 ;
  G__DictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__DictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__DictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictionaryLN_TRexSettings.tagnum = -1 ;
  G__DictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__DictionaryLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictionaryLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__DictionaryLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictionaryLN_Barrel.tagnum = -1 ;
  G__DictionaryLN_Annular.tagnum = -1 ;
  G__DictionaryLN_Crystal.tagnum = -1 ;
  G__DictionaryLN_Germanium.tagnum = -1 ;
  G__DictionaryLN_vectorlECrystalcOallocatorlECrystalgRsPgR.tagnum = -1 ;
  G__DictionaryLN_vectorlECrystalcOallocatorlECrystalgRsPgRcLcLiterator.tagnum = -1 ;
  G__DictionaryLN_reverse_iteratorlEvectorlECrystalcOallocatorlECrystalgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictionaryLN_ParticleMC.tagnum = -1 ;
  G__DictionaryLN_vectorlEBarrelcOallocatorlEBarrelgRsPgR.tagnum = -1 ;
  G__DictionaryLN_vectorlEBarrelcOallocatorlEBarrelgRsPgRcLcLiterator.tagnum = -1 ;
  G__DictionaryLN_reverse_iteratorlEvectorlEBarrelcOallocatorlEBarrelgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictionaryLN_vectorlEAnnularcOallocatorlEAnnulargRsPgR.tagnum = -1 ;
  G__DictionaryLN_vectorlEAnnularcOallocatorlEAnnulargRsPgRcLcLiterator.tagnum = -1 ;
  G__DictionaryLN_reverse_iteratorlEvectorlEAnnularcOallocatorlEAnnulargRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictionaryLN_vectorlEGermaniumcOallocatorlEGermaniumgRsPgR.tagnum = -1 ;
  G__DictionaryLN_vectorlEGermaniumcOallocatorlEGermaniumgRsPgRcLcLiterator.tagnum = -1 ;
  G__DictionaryLN_reverse_iteratorlEvectorlEGermaniumcOallocatorlEGermaniumgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictionaryLN_vectorlEParticleMCcOallocatorlEParticleMCgRsPgR.tagnum = -1 ;
  G__DictionaryLN_vectorlEParticleMCcOallocatorlEParticleMCgRsPgRcLcLiterator.tagnum = -1 ;
  G__DictionaryLN_reverse_iteratorlEvectorlEParticleMCcOallocatorlEParticleMCgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableDictionary() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__DictionaryLN_TClass);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_TObject);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_string);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictionaryLN_TRexSettings),sizeof(TRexSettings),-1,292096,(char*)NULL,G__setup_memvarTRexSettings,G__setup_memfuncTRexSettings);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictionaryLN_Barrel),sizeof(Barrel),-1,292096,(char*)NULL,G__setup_memvarBarrel,G__setup_memfuncBarrel);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictionaryLN_Annular),sizeof(Annular),-1,292096,(char*)NULL,G__setup_memvarAnnular,G__setup_memfuncAnnular);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictionaryLN_Crystal),sizeof(Crystal),-1,324864,(char*)NULL,G__setup_memvarCrystal,G__setup_memfuncCrystal);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictionaryLN_Germanium),sizeof(Germanium),-1,292096,(char*)NULL,G__setup_memvarGermanium,G__setup_memfuncGermanium);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictionaryLN_vectorlECrystalcOallocatorlECrystalgRsPgR),sizeof(vector<Crystal,allocator<Crystal> >),-1,298752,(char*)NULL,G__setup_memvarvectorlECrystalcOallocatorlECrystalgRsPgR,G__setup_memfuncvectorlECrystalcOallocatorlECrystalgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_vectorlECrystalcOallocatorlECrystalgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_reverse_iteratorlEvectorlECrystalcOallocatorlECrystalgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictionaryLN_ParticleMC),sizeof(ParticleMC),-1,292096,(char*)NULL,G__setup_memvarParticleMC,G__setup_memfuncParticleMC);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictionaryLN_vectorlEBarrelcOallocatorlEBarrelgRsPgR),sizeof(vector<Barrel,allocator<Barrel> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEBarrelcOallocatorlEBarrelgRsPgR,G__setup_memfuncvectorlEBarrelcOallocatorlEBarrelgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_vectorlEBarrelcOallocatorlEBarrelgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_reverse_iteratorlEvectorlEBarrelcOallocatorlEBarrelgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictionaryLN_vectorlEAnnularcOallocatorlEAnnulargRsPgR),sizeof(vector<Annular,allocator<Annular> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEAnnularcOallocatorlEAnnulargRsPgR,G__setup_memfuncvectorlEAnnularcOallocatorlEAnnulargRsPgR);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_vectorlEAnnularcOallocatorlEAnnulargRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_reverse_iteratorlEvectorlEAnnularcOallocatorlEAnnulargRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictionaryLN_vectorlEGermaniumcOallocatorlEGermaniumgRsPgR),sizeof(vector<Germanium,allocator<Germanium> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEGermaniumcOallocatorlEGermaniumgRsPgR,G__setup_memfuncvectorlEGermaniumcOallocatorlEGermaniumgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_vectorlEGermaniumcOallocatorlEGermaniumgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_reverse_iteratorlEvectorlEGermaniumcOallocatorlEGermaniumgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictionaryLN_vectorlEParticleMCcOallocatorlEParticleMCgRsPgR),sizeof(vector<ParticleMC,allocator<ParticleMC> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEParticleMCcOallocatorlEParticleMCgRsPgR,G__setup_memfuncvectorlEParticleMCcOallocatorlEParticleMCgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_vectorlEParticleMCcOallocatorlEParticleMCgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_reverse_iteratorlEvectorlEParticleMCcOallocatorlEParticleMCgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupDictionary(void) {
  G__check_setup_version(30051515,"G__cpp_setupDictionary()");
  G__set_cpp_environmentDictionary();
  G__cpp_setup_tagtableDictionary();

  G__cpp_setup_inheritanceDictionary();

  G__cpp_setup_typetableDictionary();

  G__cpp_setup_memvarDictionary();

  G__cpp_setup_memfuncDictionary();
  G__cpp_setup_globalDictionary();
  G__cpp_setup_funcDictionary();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncDictionary();
  return;
}
class G__cpp_setup_initDictionary {
  public:
    G__cpp_setup_initDictionary() { G__add_setup_func("Dictionary",(G__incsetup)(&G__cpp_setupDictionary)); G__call_setup_funcs(); }
   ~G__cpp_setup_initDictionary() { G__remove_setup_func("Dictionary"); }
};
G__cpp_setup_initDictionary G__cpp_setup_initializerDictionary;

